#!/bin/bash
# BACKUP & EXPORT AUTOMATION
# Run this in your OLD Replit to export everything

set -e  # Exit on any error

echo "🚀 YoForex Migration: Backup & Export"
echo "======================================"
echo ""

# Configuration
BACKUP_DIR="migration_backup"
TIMESTAMP=$(date +%Y%m%d_%H%M%S)
DB_BACKUP_FILE="$BACKUP_DIR/database_backup_$TIMESTAMP.sql"
DB_BACKUP_COMPRESSED="$BACKUP_DIR/database_backup_$TIMESTAMP.sql.gz"

# Step 1: Create backup directory
echo "📁 Step 1/5: Creating backup directory..."
mkdir -p "$BACKUP_DIR"
echo "✅ Directory created: $BACKUP_DIR"
echo ""

# Step 2: Backup database (PostgreSQL)
echo "💾 Step 2/5: Backing up PostgreSQL database..."
if [ -z "$DATABASE_URL" ]; then
    echo "❌ ERROR: DATABASE_URL not found!"
    echo "   Make sure you're running this in a Replit with a database."
    exit 1
fi

echo "   - Exporting database schema + data..."
pg_dump "$DATABASE_URL" > "$DB_BACKUP_FILE"
echo "   - Database exported: $DB_BACKUP_FILE"

# Compress backup
echo "   - Compressing backup..."
gzip "$DB_BACKUP_FILE"
echo "✅ Database backup complete: $DB_BACKUP_COMPRESSED"
echo "   Size: $(du -h "$DB_BACKUP_COMPRESSED" | cut -f1)"
echo ""

# Step 3: Export environment variables (template)
echo "🔐 Step 3/5: Creating environment variables template..."
ENV_TEMPLATE="$BACKUP_DIR/env_template.txt"
cat > "$ENV_TEMPLATE" << 'EOF'
# YoForex Environment Variables
# Copy these to your new Replit's Secrets tab

# Database (will be auto-created by new Replit)
# DATABASE_URL=<auto-generated>
# PGHOST=<auto-generated>
# PGPORT=<auto-generated>
# PGUSER=<auto-generated>
# PGPASSWORD=<auto-generated>
# PGDATABASE=<auto-generated>

# Add your custom secrets below:
# STRIPE_SECRET_KEY=your_stripe_key_here
# SENDGRID_API_KEY=your_sendgrid_key_here
# OPENAI_API_KEY=your_openai_key_here
# TWILIO_ACCOUNT_SID=your_twilio_sid_here
# TWILIO_AUTH_TOKEN=your_twilio_token_here
# TWILIO_PHONE_NUMBER=your_twilio_phone_here

# Add any other custom environment variables you use
EOF
echo "✅ Environment template created: $ENV_TEMPLATE"
echo "   (You'll need to manually add secrets to new Replit)"
echo ""

# Step 4: Create migration manifest
echo "📋 Step 4/5: Creating migration manifest..."
MANIFEST="$BACKUP_DIR/migration_manifest.json"
cat > "$MANIFEST" << EOF
{
  "migration_date": "$(date -u +%Y-%m-%dT%H:%M:%SZ)",
  "source": "Replit Old Instance",
  "destination": "Git Repository + New Replit",
  "database_backup": "$DB_BACKUP_COMPRESSED",
  "env_template": "$ENV_TEMPLATE",
  "scripts": {
    "restore": "scripts/restore-database.sh",
    "verify": "scripts/verify-migration.sh"
  },
  "instructions": "See COMPLETE_MIGRATION_AUTOMATION.md"
}
EOF
echo "✅ Manifest created: $MANIFEST"
echo ""

# Step 5: Summary
echo "📊 Step 5/5: Backup Summary"
echo "======================================"
echo "✅ Database backup: $DB_BACKUP_COMPRESSED"
echo "✅ Environment template: $ENV_TEMPLATE"
echo "✅ Migration manifest: $MANIFEST"
echo ""
echo "📦 Backup Size: $(du -sh "$BACKUP_DIR" | cut -f1)"
echo ""
echo "🎯 NEXT STEPS:"
echo "   1. Run: ./scripts/commit-to-git.sh"
echo "   2. Import Git repo to new Replit"
echo "   3. Run: ./scripts/restore-database.sh"
echo ""
echo "✅ Backup complete! Ready for Git commit."
