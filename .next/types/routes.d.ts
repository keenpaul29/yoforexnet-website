// This file is generated automatically by Next.js
// Do not edit this file manually

type AppRoutes = "/" | "/admin" | "/admin/[...section]" | "/api-docs" | "/brokers" | "/brokers/[slug]" | "/brokers/submit-review" | "/careers" | "/categories" | "/category/[...path]" | "/category/[slug]" | "/content/[slug]" | "/dashboard" | "/dashboard/settings" | "/discussions" | "/discussions/new" | "/earn" | "/earn-coins" | "/feedback" | "/guides/[slug]" | "/hot" | "/leaderboard" | "/marketplace" | "/members" | "/messages" | "/notifications" | "/partnerships" | "/privacy" | "/publish" | "/recharge" | "/refund-policy" | "/settings" | "/support" | "/terms" | "/thread/[slug]" | "/transactions" | "/user/[username]" | "/withdrawals" | "/withdrawals/history"
type AppRouteHandlerRoutes = "/api/category-path/[slug]" | "/api/content/by-slug/[slug]" | "/api/seo-categories/tree" | "/api/threads/by-slug/[slug]"
type PageRoutes = never
type LayoutRoutes = "/" | "/admin" | "/dashboard"
type RedirectRoutes = never
type RewriteRoutes = "/api/[[...path]]"
type Routes = AppRoutes | PageRoutes | LayoutRoutes | RedirectRoutes | RewriteRoutes | AppRouteHandlerRoutes


interface ParamMap {
  "/": {}
  "/admin": {}
  "/admin/[...section]": { "section": string[]; }
  "/api-docs": {}
  "/api/[[...path]]": { "path"?: string[]; }
  "/api/category-path/[slug]": { "slug": string; }
  "/api/content/by-slug/[slug]": { "slug": string; }
  "/api/seo-categories/tree": {}
  "/api/threads/by-slug/[slug]": { "slug": string; }
  "/brokers": {}
  "/brokers/[slug]": { "slug": string; }
  "/brokers/submit-review": {}
  "/careers": {}
  "/categories": {}
  "/category/[...path]": { "path": string[]; }
  "/category/[slug]": { "slug": string; }
  "/content/[slug]": { "slug": string; }
  "/dashboard": {}
  "/dashboard/settings": {}
  "/discussions": {}
  "/discussions/new": {}
  "/earn": {}
  "/earn-coins": {}
  "/feedback": {}
  "/guides/[slug]": { "slug": string; }
  "/hot": {}
  "/leaderboard": {}
  "/marketplace": {}
  "/members": {}
  "/messages": {}
  "/notifications": {}
  "/partnerships": {}
  "/privacy": {}
  "/publish": {}
  "/recharge": {}
  "/refund-policy": {}
  "/settings": {}
  "/support": {}
  "/terms": {}
  "/thread/[slug]": { "slug": string; }
  "/transactions": {}
  "/user/[username]": { "username": string; }
  "/withdrawals": {}
  "/withdrawals/history": {}
}


export type ParamsOf<Route extends Routes> = ParamMap[Route]

interface LayoutSlotMap {
  "/": never
  "/admin": never
  "/dashboard": never
}


export type { AppRoutes, PageRoutes, LayoutRoutes, RedirectRoutes, RewriteRoutes, ParamMap, AppRouteHandlerRoutes }

declare global {
  /**
   * Props for Next.js App Router page components
   * @example
   * ```tsx
   * export default function Page(props: PageProps<'/blog/[slug]'>) {
   *   const { slug } = await props.params
   *   return <div>Blog post: {slug}</div>
   * }
   * ```
   */
  interface PageProps<AppRoute extends AppRoutes> {
    params: Promise<ParamMap[AppRoute]>
    searchParams: Promise<Record<string, string | string[] | undefined>>
  }

  /**
   * Props for Next.js App Router layout components
   * @example
   * ```tsx
   * export default function Layout(props: LayoutProps<'/dashboard'>) {
   *   return <div>{props.children}</div>
   * }
   * ```
   */
  type LayoutProps<LayoutRoute extends LayoutRoutes> = {
    params: Promise<ParamMap[LayoutRoute]>
    children: React.ReactNode
  } & {
    [K in LayoutSlotMap[LayoutRoute]]: React.ReactNode
  }

  /**
   * Context for Next.js App Router route handlers
   * @example
   * ```tsx
   * export async function GET(request: NextRequest, context: RouteContext<'/api/users/[id]'>) {
   *   const { id } = await context.params
   *   return Response.json({ id })
   * }
   * ```
   */
  interface RouteContext<AppRouteHandlerRoute extends AppRouteHandlerRoutes> {
    params: Promise<ParamMap[AppRouteHandlerRoute]>
  }
}
