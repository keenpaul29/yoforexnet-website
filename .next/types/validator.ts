// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap, AppRouteHandlerRoutes } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/types.js"
import type { NextRequest } from 'next/server.js'

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type RouteHandlerConfig<Route extends AppRouteHandlerRoutes = AppRouteHandlerRoutes> = {
  GET?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  POST?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PUT?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  PATCH?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  DELETE?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  HEAD?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
  OPTIONS?: (request: NextRequest, context: { params: Promise<ParamMap[Route]> }) => Promise<Response | void> | Response | void
}


// Validate ../../app/admin/[...section]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin/[...section]">> = Specific
  const handler = {} as typeof import("../../app/admin/[...section]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/admin/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api-docs/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/api-docs">> = Specific
  const handler = {} as typeof import("../../app/api-docs/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brokers/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brokers/[slug]">> = Specific
  const handler = {} as typeof import("../../app/brokers/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brokers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brokers">> = Specific
  const handler = {} as typeof import("../../app/brokers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/brokers/submit-review/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/brokers/submit-review">> = Specific
  const handler = {} as typeof import("../../app/brokers/submit-review/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/careers/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/careers">> = Specific
  const handler = {} as typeof import("../../app/careers/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/categories/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/categories">> = Specific
  const handler = {} as typeof import("../../app/categories/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/category/[...path]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/category/[...path]">> = Specific
  const handler = {} as typeof import("../../app/category/[...path]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/category/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/category/[slug]">> = Specific
  const handler = {} as typeof import("../../app/category/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/content/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/content/[slug]">> = Specific
  const handler = {} as typeof import("../../app/content/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/dashboard/settings">> = Specific
  const handler = {} as typeof import("../../app/dashboard/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/discussions/new/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/discussions/new">> = Specific
  const handler = {} as typeof import("../../app/discussions/new/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/discussions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/discussions">> = Specific
  const handler = {} as typeof import("../../app/discussions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/earn-coins/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/earn-coins">> = Specific
  const handler = {} as typeof import("../../app/earn-coins/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/earn/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/earn">> = Specific
  const handler = {} as typeof import("../../app/earn/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/feedback/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/feedback">> = Specific
  const handler = {} as typeof import("../../app/feedback/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/guides/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/guides/[slug]">> = Specific
  const handler = {} as typeof import("../../app/guides/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/hot/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/hot">> = Specific
  const handler = {} as typeof import("../../app/hot/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/leaderboard/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/leaderboard">> = Specific
  const handler = {} as typeof import("../../app/leaderboard/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/marketplace/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/marketplace">> = Specific
  const handler = {} as typeof import("../../app/marketplace/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/members/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/members">> = Specific
  const handler = {} as typeof import("../../app/members/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/messages/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/messages">> = Specific
  const handler = {} as typeof import("../../app/messages/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/notifications/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/notifications">> = Specific
  const handler = {} as typeof import("../../app/notifications/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/partnerships/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/partnerships">> = Specific
  const handler = {} as typeof import("../../app/partnerships/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/privacy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/privacy">> = Specific
  const handler = {} as typeof import("../../app/privacy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/publish/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/publish">> = Specific
  const handler = {} as typeof import("../../app/publish/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/recharge/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/recharge">> = Specific
  const handler = {} as typeof import("../../app/recharge/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/refund-policy/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/refund-policy">> = Specific
  const handler = {} as typeof import("../../app/refund-policy/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/settings/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/settings">> = Specific
  const handler = {} as typeof import("../../app/settings/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/support/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/support">> = Specific
  const handler = {} as typeof import("../../app/support/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/terms/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/terms">> = Specific
  const handler = {} as typeof import("../../app/terms/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/thread/[slug]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/thread/[slug]">> = Specific
  const handler = {} as typeof import("../../app/thread/[slug]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/transactions/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/transactions">> = Specific
  const handler = {} as typeof import("../../app/transactions/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/user/[username]/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/user/[username]">> = Specific
  const handler = {} as typeof import("../../app/user/[username]/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/withdrawals/history/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/withdrawals/history">> = Specific
  const handler = {} as typeof import("../../app/withdrawals/history/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/withdrawals/page.tsx
{
  type __IsExpected<Specific extends AppPageConfig<"/withdrawals">> = Specific
  const handler = {} as typeof import("../../app/withdrawals/page.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/category-path/[slug]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/category-path/[slug]">> = Specific
  const handler = {} as typeof import("../../app/api/category-path/[slug]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/content/by-slug/[slug]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/content/by-slug/[slug]">> = Specific
  const handler = {} as typeof import("../../app/api/content/by-slug/[slug]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/seo-categories/tree/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/seo-categories/tree">> = Specific
  const handler = {} as typeof import("../../app/api/seo-categories/tree/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/api/threads/by-slug/[slug]/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/api/threads/by-slug/[slug]">> = Specific
  const handler = {} as typeof import("../../app/api/threads/by-slug/[slug]/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/health/route.ts
{
  type __IsExpected<Specific extends RouteHandlerConfig<"/health">> = Specific
  const handler = {} as typeof import("../../app/health/route.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}





// Validate ../../app/admin/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/admin">> = Specific
  const handler = {} as typeof import("../../app/admin/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/dashboard/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/dashboard">> = Specific
  const handler = {} as typeof import("../../app/dashboard/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}

// Validate ../../app/layout.tsx
{
  type __IsExpected<Specific extends LayoutConfig<"/">> = Specific
  const handler = {} as typeof import("../../app/layout.js")
  type __Check = __IsExpected<typeof handler>
  // @ts-ignore
  type __Unused = __Check
}
