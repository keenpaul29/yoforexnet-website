{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Analytics.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { LineChart, Line, BarChart, Bar, PieChart, Pie, Cell, AreaChart, Area, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from \"recharts\";\n\nconst COLORS = ['hsl(var(--primary))', 'hsl(var(--secondary))', 'hsl(var(--accent))', 'hsl(var(--muted))', '#8884d8', '#82ca9d', '#ffc658', '#ff7c7c'];\n\n// Type definitions for API responses\ninterface GrowthDataPoint {\n  date: string;\n  users: number;\n}\n\ninterface CountryDataPoint {\n  country: string;\n  users: number;\n}\n\ninterface ActiveInactiveDataPoint {\n  name: string;\n  value: number;\n}\n\ninterface UsersAnalyticsData {\n  dau: number;\n  mau: number;\n  newUsers: number;\n  churnRate: number;\n  growthData: GrowthDataPoint[];\n  countryData: CountryDataPoint[];\n  activeInactiveData: ActiveInactiveDataPoint[];\n}\n\ninterface ContentTrendDataPoint {\n  date: string;\n  count: number;\n}\n\ninterface TypeDistributionPoint {\n  name: string;\n  value: number;\n}\n\ninterface TopCreator {\n  id: string;\n  username: string;\n  posts: number;\n  views: number;\n  avgQuality?: number;\n}\n\ninterface QualityScore {\n  score: string;\n  count: number;\n}\n\ninterface ContentAnalyticsData {\n  trendData: ContentTrendDataPoint[];\n  typeDistribution: TypeDistributionPoint[];\n  topCreators: TopCreator[];\n  qualityScores: QualityScore[];\n}\n\ninterface RevenueTrendPoint {\n  date: string;\n  revenue: number;\n}\n\ninterface RevenueSourcePoint {\n  name: string;\n  value: number;\n}\n\ninterface TopEarner {\n  id: string;\n  username: string;\n  totalEarnings: number;\n  monthlyEarnings: number;\n  sales: number;\n}\n\ninterface TransactionVolumePoint {\n  date: string;\n  volume: number;\n}\n\ninterface FinancialAnalyticsData {\n  revenueTrend: RevenueTrendPoint[];\n  revenueBySource: RevenueSourcePoint[];\n  topEarners: TopEarner[];\n  transactionVolume: TransactionVolumePoint[];\n}\n\ninterface HeatmapDataPoint {\n  hour: string;\n  activity: number;\n}\n\ninterface EngagementAnalyticsData {\n  avgSessionDuration: string;\n  bounceRate: number;\n  pagesPerSession: number;\n  heatmapData: HeatmapDataPoint[];\n}\n\nexport default function Analytics() {\n  const [activeTab, setActiveTab] = useState(\"users\");\n\n  // Add explicit type annotations to ensure TypeScript knows the structure\n  const { data: usersDataRaw, isLoading: usersLoading } = useQuery<UsersAnalyticsData>({\n    queryKey: [\"/api/admin/analytics/users\"]\n  });\n\n  // Defensive programming: ensure usersData always has the required structure\n  const usersData: UsersAnalyticsData = usersDataRaw || {\n    dau: 0,\n    mau: 0,\n    newUsers: 0,\n    churnRate: 0,\n    growthData: [],\n    countryData: [],\n    activeInactiveData: []\n  };\n\n  const { data: contentDataRaw, isLoading: contentLoading } = useQuery<ContentAnalyticsData>({\n    queryKey: [\"/api/admin/analytics/content\"]\n  });\n\n  const contentData: ContentAnalyticsData = contentDataRaw || {\n    trendData: [],\n    typeDistribution: [],\n    topCreators: [],\n    qualityScores: []\n  };\n\n  const { data: financialDataRaw, isLoading: financialLoading } = useQuery<FinancialAnalyticsData>({\n    queryKey: [\"/api/admin/analytics/financial\"]\n  });\n\n  const financialData: FinancialAnalyticsData = financialDataRaw || {\n    revenueTrend: [],\n    revenueBySource: [],\n    topEarners: [],\n    transactionVolume: []\n  };\n\n  const { data: engagementDataRaw, isLoading: engagementLoading } = useQuery<EngagementAnalyticsData>({\n    queryKey: [\"/api/admin/analytics/engagement\"]\n  });\n\n  const engagementData: EngagementAnalyticsData = engagementDataRaw || {\n    avgSessionDuration: '0m',\n    bounceRate: 0,\n    pagesPerSession: 0,\n    heatmapData: []\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold\">Analytics & Reports</h1>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} data-testid=\"tabs-analytics\">\n        <TabsList className=\"grid w-full grid-cols-4\">\n          <TabsTrigger value=\"users\" data-testid=\"tab-users\">Users</TabsTrigger>\n          <TabsTrigger value=\"content\" data-testid=\"tab-content\">Content</TabsTrigger>\n          <TabsTrigger value=\"financial\" data-testid=\"tab-financial\">Financial</TabsTrigger>\n          <TabsTrigger value=\"engagement\" data-testid=\"tab-engagement\">Engagement</TabsTrigger>\n        </TabsList>\n\n        {/* Users Tab */}\n        <TabsContent value=\"users\" className=\"space-y-4\">\n          {usersLoading ? (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                {[...Array(4)].map((_, i) => (\n                  <Skeleton key={i} className=\"h-32\" />\n                ))}\n              </div>\n              <Skeleton className=\"h-96\" />\n            </div>\n          ) : (\n            <>\n              {/* Statistics Cards */}\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n                <Card data-testid=\"card-dau\">\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">DAU</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\" data-testid=\"text-dau\">\n                      {usersData.dau}\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\">Daily Active Users</p>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-mau\">\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">MAU</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\" data-testid=\"text-mau\">\n                      {usersData.mau}\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\">Monthly Active Users</p>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-new-users\">\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">New Users</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\" data-testid=\"text-new-users\">\n                      {usersData.newUsers}\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\">Last 30 days</p>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-churn-rate\">\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">Churn Rate</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\" data-testid=\"text-churn-rate\">\n                      {usersData.churnRate}%\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\">Monthly churn</p>\n                  </CardContent>\n                </Card>\n              </div>\n\n              {/* Charts Row */}\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Card data-testid=\"card-user-growth\">\n                  <CardHeader>\n                    <CardTitle>User Growth (Last 30 Days)</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <LineChart data={usersData.growthData}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"date\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" dataKey=\"users\" stroke=\"hsl(var(--primary))\" strokeWidth={2} />\n                      </LineChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-users-by-country\">\n                  <CardHeader>\n                    <CardTitle>Users by Country (Top 10)</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <BarChart data={usersData.countryData}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"country\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Bar dataKey=\"users\" fill=\"hsl(var(--primary))\" />\n                      </BarChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-active-inactive\">\n                  <CardHeader>\n                    <CardTitle>Active vs Inactive Users</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <PieChart>\n                        <Pie\n                          data={usersData.activeInactiveData}\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          labelLine={false}\n                          label={(entry) => `${entry.name}: ${entry.value}`}\n                          outerRadius={80}\n                          fill=\"#8884d8\"\n                          dataKey=\"value\"\n                        >\n                          {usersData.activeInactiveData.map((_: any, index: number) => (\n                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                          ))}\n                        </Pie>\n                        <Tooltip />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n              </div>\n            </>\n          )}\n        </TabsContent>\n\n        {/* Content Tab */}\n        <TabsContent value=\"content\" className=\"space-y-4\">\n          {contentLoading ? (\n            <div className=\"space-y-4\">\n              <Skeleton className=\"h-96\" />\n              <Skeleton className=\"h-64\" />\n            </div>\n          ) : (\n            <>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Card data-testid=\"card-content-trend\">\n                  <CardHeader>\n                    <CardTitle>Content Creation Trend (Last 30 Days)</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <LineChart data={contentData.trendData}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"date\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Line type=\"monotone\" dataKey=\"count\" stroke=\"hsl(var(--primary))\" strokeWidth={2} />\n                      </LineChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-content-type-distribution\">\n                  <CardHeader>\n                    <CardTitle>Content Type Distribution</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <PieChart>\n                        <Pie\n                          data={contentData.typeDistribution}\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          labelLine={false}\n                          label={(entry) => `${entry.name}: ${entry.value}`}\n                          outerRadius={80}\n                          fill=\"#8884d8\"\n                          dataKey=\"value\"\n                        >\n                          {contentData.typeDistribution.map((_: any, index: number) => (\n                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                          ))}\n                        </Pie>\n                        <Tooltip />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n              </div>\n\n              <Card data-testid=\"card-top-creators\">\n                <CardHeader>\n                  <CardTitle>Top Content Creators</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"overflow-x-auto\">\n                    <Table>\n                      <TableHeader>\n                        <TableRow>\n                          <TableHead>Rank</TableHead>\n                          <TableHead>Creator</TableHead>\n                          <TableHead>Posts</TableHead>\n                          <TableHead>Views</TableHead>\n                          <TableHead>Avg Quality</TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {contentData.topCreators.length > 0 ? (\n                          contentData.topCreators.map((creator: TopCreator, index: number) => (\n                            <TableRow key={creator.id} data-testid={`creator-${creator.id}`}>\n                              <TableCell data-testid={`creator-rank-${creator.id}`}>{index + 1}</TableCell>\n                              <TableCell>{creator.username}</TableCell>\n                              <TableCell>{creator.posts}</TableCell>\n                              <TableCell>{creator.views}</TableCell>\n                              <TableCell>{creator.avgQuality?.toFixed(1) || 'N/A'}</TableCell>\n                            </TableRow>\n                          ))\n                        ) : (\n                          <TableRow>\n                            <TableCell colSpan={5} className=\"text-center py-8 text-muted-foreground\">\n                              No data available\n                            </TableCell>\n                          </TableRow>\n                        )}\n                      </TableBody>\n                    </Table>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-quality-scores\">\n                <CardHeader>\n                  <CardTitle>Quality Scores Histogram</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ResponsiveContainer width=\"100%\" height={250}>\n                    <BarChart data={contentData.qualityScores}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"score\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Bar dataKey=\"count\" fill=\"hsl(var(--primary))\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </CardContent>\n              </Card>\n            </>\n          )}\n        </TabsContent>\n\n        {/* Financial Tab */}\n        <TabsContent value=\"financial\" className=\"space-y-4\">\n          {financialLoading ? (\n            <div className=\"space-y-4\">\n              <Skeleton className=\"h-96\" />\n              <Skeleton className=\"h-64\" />\n            </div>\n          ) : (\n            <>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <Card data-testid=\"card-revenue-trend\">\n                  <CardHeader>\n                    <CardTitle>Revenue Trend (Last 30 Days)</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <AreaChart data={financialData.revenueTrend}>\n                        <CartesianGrid strokeDasharray=\"3 3\" />\n                        <XAxis dataKey=\"date\" />\n                        <YAxis />\n                        <Tooltip />\n                        <Legend />\n                        <Area type=\"monotone\" dataKey=\"revenue\" stroke=\"hsl(var(--primary))\" fill=\"hsl(var(--primary))\" fillOpacity={0.6} />\n                      </AreaChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-revenue-by-source\">\n                  <CardHeader>\n                    <CardTitle>Revenue by Source</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <ResponsiveContainer width=\"100%\" height={250}>\n                      <PieChart>\n                        <Pie\n                          data={financialData.revenueBySource}\n                          cx=\"50%\"\n                          cy=\"50%\"\n                          labelLine={false}\n                          label={(entry) => `${entry.name}: $${entry.value}`}\n                          outerRadius={80}\n                          fill=\"#8884d8\"\n                          dataKey=\"value\"\n                        >\n                          {financialData.revenueBySource.map((_: any, index: number) => (\n                            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                          ))}\n                        </Pie>\n                        <Tooltip />\n                      </PieChart>\n                    </ResponsiveContainer>\n                  </CardContent>\n                </Card>\n              </div>\n\n              <Card data-testid=\"card-top-earners\">\n                <CardHeader>\n                  <CardTitle>Top Earners</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"overflow-x-auto\">\n                    <Table>\n                      <TableHeader>\n                        <TableRow>\n                          <TableHead>Rank</TableHead>\n                          <TableHead>User</TableHead>\n                          <TableHead>Total Earnings</TableHead>\n                          <TableHead>This Month</TableHead>\n                          <TableHead>Sales</TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {financialData.topEarners.length > 0 ? (\n                          financialData.topEarners.map((earner: TopEarner, index: number) => (\n                            <TableRow key={earner.id} data-testid={`earner-${earner.id}`}>\n                              <TableCell data-testid={`earner-rank-${earner.id}`}>{index + 1}</TableCell>\n                              <TableCell>{earner.username}</TableCell>\n                              <TableCell>${earner.totalEarnings}</TableCell>\n                              <TableCell>${earner.monthlyEarnings}</TableCell>\n                              <TableCell>{earner.sales}</TableCell>\n                            </TableRow>\n                          ))\n                        ) : (\n                          <TableRow>\n                            <TableCell colSpan={5} className=\"text-center py-8 text-muted-foreground\">\n                              No data available\n                            </TableCell>\n                          </TableRow>\n                        )}\n                      </TableBody>\n                    </Table>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-transaction-volume\">\n                <CardHeader>\n                  <CardTitle>Transaction Volume</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ResponsiveContainer width=\"100%\" height={250}>\n                    <BarChart data={financialData.transactionVolume}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"date\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Bar dataKey=\"volume\" fill=\"hsl(var(--primary))\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </CardContent>\n              </Card>\n            </>\n          )}\n        </TabsContent>\n\n        {/* Engagement Tab */}\n        <TabsContent value=\"engagement\" className=\"space-y-4\">\n          {engagementLoading ? (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                {[...Array(3)].map((_, i) => (\n                  <Skeleton key={i} className=\"h-32\" />\n                ))}\n              </div>\n            </div>\n          ) : (\n            <>\n              <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n                <Card data-testid=\"card-avg-session\">\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">Avg Session Duration</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\" data-testid=\"text-avg-session\">\n                      {engagementData.avgSessionDuration}\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\">Per user session</p>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-bounce-rate\">\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">Bounce Rate</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\" data-testid=\"text-bounce-rate\">\n                      {engagementData.bounceRate}%\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\">Single page visits</p>\n                  </CardContent>\n                </Card>\n\n                <Card data-testid=\"card-pages-per-session\">\n                  <CardHeader className=\"pb-2\">\n                    <CardTitle className=\"text-sm font-medium\">Pages Per Session</CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"text-2xl font-bold\" data-testid=\"text-pages-per-session\">\n                      {engagementData.pagesPerSession}\n                    </div>\n                    <p className=\"text-xs text-muted-foreground\">Average pages</p>\n                  </CardContent>\n                </Card>\n              </div>\n\n              <Card data-testid=\"card-engagement-heatmap\">\n                <CardHeader>\n                  <CardTitle>Engagement Heatmap (Hourly Activity)</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <ResponsiveContainer width=\"100%\" height={300}>\n                    <BarChart data={engagementData.heatmapData}>\n                      <CartesianGrid strokeDasharray=\"3 3\" />\n                      <XAxis dataKey=\"hour\" />\n                      <YAxis />\n                      <Tooltip />\n                      <Legend />\n                      <Bar dataKey=\"activity\" fill=\"hsl(var(--primary))\" />\n                    </BarChart>\n                  </ResponsiveContainer>\n                </CardContent>\n              </Card>\n            </>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}