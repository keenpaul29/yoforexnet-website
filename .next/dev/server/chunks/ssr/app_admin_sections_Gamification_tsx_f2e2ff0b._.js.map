{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Gamification.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle, CardFooter } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Button } from \"@/components/ui/button\";\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger, DialogFooter } from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, LineChart, Line } from \"recharts\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Award, Trophy } from \"lucide-react\";\n\ninterface Badge {\n  id: string;\n  name: string;\n  description: string;\n  rarity: string;\n  imageUrl?: string;\n  totalEarned?: number;\n}\n\ninterface Achievement {\n  id: string;\n  name: string;\n  description: string;\n  criteria: string;\n  rewardCoins: number;\n  completionRate?: number;\n}\n\ninterface LeaderboardEntry {\n  id: string;\n  username: string;\n  score: number;\n}\n\ninterface Goal {\n  name: string;\n  participants: number;\n}\n\ninterface GoalCompletionPoint {\n  date: string;\n  completionRate: number;\n}\n\nexport default function Gamification() {\n  const { toast } = useToast();\n  const [isCreateBadgeOpen, setIsCreateBadgeOpen] = useState(false);\n  const [isCreateAchievementOpen, setIsCreateAchievementOpen] = useState(false);\n  const [leaderboardType, setLeaderboardType] = useState(\"contributors\");\n  const [timePeriod, setTimePeriod] = useState(\"all-time\");\n\n  const { data: badgesRaw, isLoading: badgesLoading } = useQuery<Badge[]>({\n    queryKey: [\"/api/admin/gamification/badges\"]\n  });\n\n  const badges = Array.isArray(badgesRaw) ? badgesRaw : [];\n\n  const { data: achievementsRaw, isLoading: achievementsLoading } = useQuery<Achievement[]>({\n    queryKey: [\"/api/admin/gamification/achievements\"]\n  });\n\n  const achievements = Array.isArray(achievementsRaw) ? achievementsRaw : [];\n\n  const { data: leaderboardRaw, isLoading: leaderboardLoading } = useQuery<LeaderboardEntry[]>({\n    queryKey: [\"/api/admin/gamification/leaderboard\", leaderboardType, timePeriod]\n  });\n\n  const leaderboard = Array.isArray(leaderboardRaw) ? leaderboardRaw : [];\n\n  const { data: goalsRaw, isLoading: goalsLoading } = useQuery<Goal[]>({\n    queryKey: [\"/api/admin/gamification/goals\"]\n  });\n\n  const goals = Array.isArray(goalsRaw) ? goalsRaw : [];\n\n  const { data: goalCompletionDataRaw, isLoading: goalCompletionLoading } = useQuery<GoalCompletionPoint[]>({\n    queryKey: [\"/api/admin/gamification/goal-completion\"]\n  });\n\n  const goalCompletionData = Array.isArray(goalCompletionDataRaw) ? goalCompletionDataRaw : [];\n\n  const createBadgeMutation = useMutation({\n    mutationFn: (data: any) => apiRequest(\"/api/admin/gamification/badges\", \"POST\", data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/gamification/badges\"] });\n      toast({ title: \"Badge created successfully\" });\n      setIsCreateBadgeOpen(false);\n    }\n  });\n\n  const createAchievementMutation = useMutation({\n    mutationFn: (data: any) => apiRequest(\"/api/admin/gamification/achievements\", \"POST\", data),\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/gamification/achievements\"] });\n      toast({ title: \"Achievement created successfully\" });\n      setIsCreateAchievementOpen(false);\n    }\n  });\n\n  const handleCreateBadge = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    createBadgeMutation.mutate({\n      name: formData.get(\"name\"),\n      description: formData.get(\"description\"),\n      imageUrl: formData.get(\"imageUrl\"),\n      rarity: formData.get(\"rarity\")\n    });\n  };\n\n  const handleCreateAchievement = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    const formData = new FormData(e.currentTarget);\n    createAchievementMutation.mutate({\n      name: formData.get(\"name\"),\n      description: formData.get(\"description\"),\n      criteria: formData.get(\"criteria\"),\n      rewardCoins: parseInt(formData.get(\"rewardCoins\") as string)\n    });\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold\">Gamification</h1>\n\n      <Tabs defaultValue=\"badges\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"badges\" data-testid=\"tab-badges\">Badges</TabsTrigger>\n          <TabsTrigger value=\"achievements\" data-testid=\"tab-achievements\">Achievements</TabsTrigger>\n          <TabsTrigger value=\"leaderboards\" data-testid=\"tab-leaderboards\">Leaderboards</TabsTrigger>\n          <TabsTrigger value=\"goals\" data-testid=\"tab-goals\">Goals</TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"badges\" className=\"space-y-4\">\n          <div className=\"flex justify-between items-center\">\n            <h2 className=\"text-xl font-semibold\">Badges</h2>\n            <Dialog open={isCreateBadgeOpen} onOpenChange={setIsCreateBadgeOpen}>\n              <DialogTrigger asChild>\n                <Button data-testid=\"button-create-badge\">Create Badge</Button>\n              </DialogTrigger>\n              <DialogContent>\n                <DialogHeader>\n                  <DialogTitle>Create New Badge</DialogTitle>\n                </DialogHeader>\n                <form onSubmit={handleCreateBadge} className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"name\">Badge Name</Label>\n                    <Input id=\"name\" name=\"name\" required data-testid=\"input-badge-name\" />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"description\">Description</Label>\n                    <Input id=\"description\" name=\"description\" required data-testid=\"input-badge-description\" />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"imageUrl\">Image URL</Label>\n                    <Input id=\"imageUrl\" name=\"imageUrl\" type=\"url\" required data-testid=\"input-badge-image\" />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"rarity\">Rarity</Label>\n                    <Select name=\"rarity\" required>\n                      <SelectTrigger data-testid=\"select-badge-rarity\">\n                        <SelectValue placeholder=\"Select rarity\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"common\">Common</SelectItem>\n                        <SelectItem value=\"rare\">Rare</SelectItem>\n                        <SelectItem value=\"epic\">Epic</SelectItem>\n                        <SelectItem value=\"legendary\">Legendary</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <DialogFooter>\n                    <Button type=\"submit\" disabled={createBadgeMutation.isPending} data-testid=\"button-submit-badge\">\n                      {createBadgeMutation.isPending ? \"Creating...\" : \"Create Badge\"}\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          {badgesLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {[...Array(6)].map((_, i) => <Skeleton key={i} className=\"h-48\" />)}\n            </div>\n          ) : (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n              {badges.map((badge) => (\n                <Card key={badge.id} data-testid={`badge-card-${badge.id}`}>\n                  <CardHeader className=\"flex flex-row items-center gap-4\">\n                    <div className=\"w-16 h-16 bg-muted rounded-lg flex items-center justify-center\">\n                      {badge.imageUrl ? (\n                        <img src={badge.imageUrl} alt={badge.name} className=\"w-12 h-12\" />\n                      ) : (\n                        <Award className=\"w-8 h-8\" />\n                      )}\n                    </div>\n                    <div className=\"flex-1\">\n                      <CardTitle className=\"text-lg\" data-testid={`badge-name-${badge.id}`}>{badge.name}</CardTitle>\n                      <Badge variant=\"secondary\">{badge.rarity}</Badge>\n                    </div>\n                  </CardHeader>\n                  <CardContent>\n                    <p className=\"text-sm text-muted-foreground\">{badge.description}</p>\n                  </CardContent>\n                  <CardFooter className=\"flex justify-between gap-2\">\n                    <div className=\"text-sm\">\n                      <span className=\"font-semibold\">{badge.totalEarned || 0}</span> earned\n                    </div>\n                  </CardFooter>\n                </Card>\n              ))}\n              {badges.length === 0 && (\n                <div className=\"col-span-full text-center py-12 text-muted-foreground\">\n                  No badges created yet\n                </div>\n              )}\n            </div>\n          )}\n        </TabsContent>\n\n        <TabsContent value=\"achievements\" className=\"space-y-4\">\n          <div className=\"flex justify-between items-center\">\n            <h2 className=\"text-xl font-semibold\">Achievements</h2>\n            <Dialog open={isCreateAchievementOpen} onOpenChange={setIsCreateAchievementOpen}>\n              <DialogTrigger asChild>\n                <Button data-testid=\"button-create-achievement\">Create Achievement</Button>\n              </DialogTrigger>\n              <DialogContent>\n                <DialogHeader>\n                  <DialogTitle>Create New Achievement</DialogTitle>\n                </DialogHeader>\n                <form onSubmit={handleCreateAchievement} className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"ach-name\">Achievement Name</Label>\n                    <Input id=\"ach-name\" name=\"name\" required data-testid=\"input-achievement-name\" />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"ach-description\">Description</Label>\n                    <Input id=\"ach-description\" name=\"description\" required data-testid=\"input-achievement-description\" />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"criteria\">Criteria</Label>\n                    <Input id=\"criteria\" name=\"criteria\" required data-testid=\"input-achievement-criteria\" />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"rewardCoins\">Reward Coins</Label>\n                    <Input id=\"rewardCoins\" name=\"rewardCoins\" type=\"number\" required data-testid=\"input-achievement-reward\" />\n                  </div>\n                  <DialogFooter>\n                    <Button type=\"submit\" disabled={createAchievementMutation.isPending} data-testid=\"button-submit-achievement\">\n                      {createAchievementMutation.isPending ? \"Creating...\" : \"Create Achievement\"}\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </DialogContent>\n            </Dialog>\n          </div>\n\n          <Card>\n            <CardContent className=\"p-0\">\n              {achievementsLoading ? (\n                <div className=\"p-4 space-y-2\">\n                  {[...Array(5)].map((_, i) => <Skeleton key={i} className=\"h-12\" />)}\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Name</TableHead>\n                        <TableHead>Description</TableHead>\n                        <TableHead>Criteria</TableHead>\n                        <TableHead>Reward</TableHead>\n                        <TableHead>Completion Rate</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {achievements.map((achievement) => (\n                        <TableRow key={achievement.id} data-testid={`achievement-${achievement.id}`}>\n                          <TableCell className=\"font-medium\" data-testid={`achievement-name-${achievement.id}`}>\n                            {achievement.name}\n                          </TableCell>\n                          <TableCell>{achievement.description}</TableCell>\n                          <TableCell>{achievement.criteria}</TableCell>\n                          <TableCell>{achievement.rewardCoins} coins</TableCell>\n                          <TableCell>\n                            <Badge variant=\"secondary\">{achievement.completionRate || 0}%</Badge>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                      {achievements.length === 0 && (\n                        <TableRow>\n                          <TableCell colSpan={5} className=\"text-center text-muted-foreground py-8\">\n                            No achievements created\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"leaderboards\" className=\"space-y-4\">\n          <div className=\"flex flex-wrap justify-between items-center gap-4\">\n            <h2 className=\"text-xl font-semibold\">Leaderboards</h2>\n            <div className=\"flex flex-wrap gap-2\">\n              <Select value={leaderboardType} onValueChange={setLeaderboardType}>\n                <SelectTrigger className=\"w-48\" data-testid=\"select-leaderboard-type\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"contributors\">Top Contributors</SelectItem>\n                  <SelectItem value=\"earners\">Top Earners</SelectItem>\n                  <SelectItem value=\"uploaders\">Top Uploaders</SelectItem>\n                </SelectContent>\n              </Select>\n              <Select value={timePeriod} onValueChange={setTimePeriod}>\n                <SelectTrigger className=\"w-40\" data-testid=\"select-time-period\">\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"weekly\">Weekly</SelectItem>\n                  <SelectItem value=\"monthly\">Monthly</SelectItem>\n                  <SelectItem value=\"all-time\">All Time</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </div>\n\n          <Card>\n            <CardContent className=\"p-0\">\n              {leaderboardLoading ? (\n                <div className=\"p-4 space-y-2\">\n                  {[...Array(10)].map((_, i) => <Skeleton key={i} className=\"h-12\" />)}\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead className=\"w-20\">Rank</TableHead>\n                        <TableHead>User</TableHead>\n                        <TableHead>Score</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {leaderboard.map((entry, index) => (\n                        <TableRow key={entry.id} data-testid={`leaderboard-${index}`}>\n                          <TableCell>\n                            <div className=\"flex items-center gap-2\">\n                              {index < 3 && <Trophy className={`w-4 h-4 ${index === 0 ? 'text-yellow-500' : index === 1 ? 'text-gray-400' : 'text-amber-700'}`} />}\n                              <span className=\"font-semibold\">#{index + 1}</span>\n                            </div>\n                          </TableCell>\n                          <TableCell data-testid={`leaderboard-user-${index}`}>{entry.username}</TableCell>\n                          <TableCell>\n                            <Badge>{entry.score}</Badge>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                      {leaderboard.length === 0 && (\n                        <TableRow>\n                          <TableCell colSpan={3} className=\"text-center text-muted-foreground py-8\">\n                            No data available\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"goals\" className=\"space-y-4\">\n          <h2 className=\"text-xl font-semibold\">User Goals Analytics</h2>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Goal Completion Rate</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {goalCompletionLoading ? (\n                <Skeleton className=\"h-64\" />\n              ) : goalCompletionData.length > 0 ? (\n                <ResponsiveContainer width=\"100%\" height={250}>\n                  <LineChart data={goalCompletionData}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"date\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Line type=\"monotone\" dataKey=\"completionRate\" stroke=\"hsl(var(--primary))\" strokeWidth={2} />\n                  </LineChart>\n                </ResponsiveContainer>\n              ) : (\n                <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n                  No data available\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Top Goals by Participation</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {goalsLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => <Skeleton key={i} className=\"h-12\" />)}\n                </div>\n              ) : goals.length > 0 ? (\n                <ResponsiveContainer width=\"100%\" height={250}>\n                  <BarChart data={goals}>\n                    <CartesianGrid strokeDasharray=\"3 3\" />\n                    <XAxis dataKey=\"name\" />\n                    <YAxis />\n                    <Tooltip />\n                    <Bar dataKey=\"participants\" fill=\"hsl(var(--primary))\" />\n                  </BarChart>\n                </ResponsiveContainer>\n              ) : (\n                <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n                  No data available\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}