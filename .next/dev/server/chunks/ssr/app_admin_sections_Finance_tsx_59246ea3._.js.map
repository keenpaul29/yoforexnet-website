{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Finance.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  DollarSign, \n  TrendingDown, \n  TrendingUp, \n  ArrowDownCircle, \n  ArrowRightLeft, \n  Trophy,\n  CheckCircle, \n  XCircle, \n  Eye,\n  Download,\n  Copy,\n  AlertTriangle,\n  FileText\n} from \"lucide-react\";\nimport { format, formatDistanceToNow, differenceInDays } from \"date-fns\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, Legend } from \"recharts\";\n\n// ============================================================================\n// CONSTANTS\n// ============================================================================\n\nconst COLORS = {\n  coinPurchases: 'hsl(var(--primary))',\n  subscriptions: 'hsl(142, 76%, 36%)',\n  marketplace: 'hsl(262, 83%, 58%)',\n  other: 'hsl(var(--muted))'\n};\n\n// ============================================================================\n// TYPE DEFINITIONS\n// ============================================================================\n\ninterface FinanceOverview {\n  totalRevenue: number;\n  revenueGrowth: number;\n  pendingWithdrawals: number;\n  pendingWithdrawalCount: number;\n  totalTransactions: number;\n  transactionsToday: number;\n  topEarner?: {\n    username: string;\n    earnings: number;\n    avatarUrl?: string;\n  };\n}\n\ninterface Transaction {\n  id: string;\n  userId: string;\n  username: string;\n  avatarUrl?: string;\n  type: string;\n  amount: number;\n  method?: string;\n  status?: string;\n  description?: string;\n  createdAt: string;\n  relatedItems?: any;\n}\n\ninterface Withdrawal {\n  id: number;\n  userId: string;\n  username: string;\n  avatarUrl?: string;\n  amount: number;\n  method?: string;\n  walletAddress?: string;\n  createdAt: string;\n  status?: string;\n  userBalance?: number;\n}\n\ninterface RevenueChartPoint {\n  date: string;\n  revenue: number;\n}\n\ninterface RevenueSourcePoint {\n  name: string;\n  value: number;\n}\n\n// ============================================================================\n// ZOD SCHEMAS\n// ============================================================================\n\nconst approveWithdrawalSchema = z.object({\n  adminNotes: z.string().optional(),\n  verified: z.boolean().refine((val) => val === true, {\n    message: \"You must verify all conditions before approving\"\n  })\n});\n\nconst rejectWithdrawalSchema = z.object({\n  reason: z.enum([\n    \"insufficient_balance\",\n    \"invalid_wallet\",\n    \"suspicious_activity\",\n    \"verification_required\",\n    \"other\"\n  ]),\n  detailedReason: z.string().min(10, \"Please provide a detailed reason (minimum 10 characters)\"),\n  notifyUser: z.boolean().default(true)\n});\n\nconst completeWithdrawalSchema = z.object({\n  transactionId: z.string().min(1, \"Transaction ID is required\"),\n  notes: z.string().optional(),\n  confirmed: z.boolean().refine((val) => val === true, {\n    message: \"You must confirm payment has been sent\"\n  })\n});\n\nconst exportTransactionsSchema = z.object({\n  dateFrom: z.string().optional(),\n  dateTo: z.string().optional(),\n  types: z.array(z.string()).min(1, \"Select at least one transaction type\"),\n  format: z.enum([\"csv\"]).default(\"csv\"),\n  includeNotes: z.boolean().default(false)\n});\n\n// ============================================================================\n// HELPER FUNCTIONS\n// ============================================================================\n\nfunction formatCurrency(amount: number): string {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 2,\n    maximumFractionDigits: 2\n  }).format(amount);\n}\n\nfunction formatNumber(num: number): string {\n  return new Intl.NumberFormat('en-US').format(num);\n}\n\nfunction getStatusColor(status: string): \"default\" | \"secondary\" | \"destructive\" | \"outline\" {\n  switch (status?.toLowerCase()) {\n    case 'completed': return 'default';\n    case 'pending': return 'secondary';\n    case 'failed': return 'destructive';\n    case 'refunded': return 'outline';\n    default: return 'outline';\n  }\n}\n\nfunction getTypeColor(type: string): \"default\" | \"secondary\" | \"destructive\" | \"outline\" {\n  switch (type?.toLowerCase()) {\n    case 'coin purchase': return 'default';\n    case 'subscription': return 'secondary';\n    case 'marketplace': return 'outline';\n    case 'withdrawal': return 'destructive';\n    default: return 'outline';\n  }\n}\n\nfunction copyToClipboard(text: string, toast: any) {\n  navigator.clipboard.writeText(text);\n  toast({ title: \"Copied to clipboard\" });\n}\n\n// ============================================================================\n// MAIN COMPONENT\n// ============================================================================\n\nexport default function AdminFinance() {\n  const [periodFilter, setPeriodFilter] = useState(\"30d\");\n  const { toast } = useToast();\n\n  // Modal states\n  const [approveWithdrawalId, setApproveWithdrawalId] = useState<number | null>(null);\n  const [rejectWithdrawalId, setRejectWithdrawalId] = useState<number | null>(null);\n  const [completeWithdrawalId, setCompleteWithdrawalId] = useState<number | null>(null);\n  const [viewWithdrawalId, setViewWithdrawalId] = useState<number | null>(null);\n  const [viewTransactionId, setViewTransactionId] = useState<string | null>(null);\n  const [showExportModal, setShowExportModal] = useState(false);\n\n  // ============================================================================\n  // QUERIES\n  // ============================================================================\n\n  const { data: overviewRaw, isLoading: overviewLoading } = useQuery<FinanceOverview>({\n    queryKey: [\"/api/admin/finance/overview\", periodFilter]\n  });\n\n  const overview: FinanceOverview = overviewRaw ?? {\n    totalRevenue: 0,\n    revenueGrowth: 0,\n    pendingWithdrawals: 0,\n    pendingWithdrawalCount: 0,\n    totalTransactions: 0,\n    transactionsToday: 0\n  };\n\n  const { data: transactionsRaw, isLoading: transactionsLoading } = useQuery<Transaction[]>({\n    queryKey: [\"/api/admin/finance/transactions/recent\", { limit: 20, period: periodFilter }]\n  });\n\n  const transactions = Array.isArray(transactionsRaw) ? transactionsRaw : [];\n\n  const { data: withdrawalsRaw, isLoading: withdrawalsLoading } = useQuery<Withdrawal[]>({\n    queryKey: [\"/api/admin/finance/withdrawals/pending\"]\n  });\n\n  const withdrawals = Array.isArray(withdrawalsRaw) ? withdrawalsRaw : [];\n\n  const { data: revenueChartRaw, isLoading: chartLoading } = useQuery<RevenueChartPoint[]>({\n    queryKey: [\"/api/admin/finance/revenue/trend\", { period: periodFilter }]\n  });\n\n  const revenueChart = Array.isArray(revenueChartRaw) ? revenueChartRaw : [];\n\n  const { data: revenueBySourceRaw, isLoading: sourceLoading } = useQuery<RevenueSourcePoint[]>({\n    queryKey: [\"/api/admin/finance/revenue/by-source\", { period: periodFilter }]\n  });\n\n  const revenueBySource = Array.isArray(revenueBySourceRaw) ? revenueBySourceRaw : [];\n\n  // Single withdrawal detail query\n  const { data: selectedWithdrawal } = useQuery<Withdrawal>({\n    queryKey: [\"/api/admin/finance/withdrawals\", viewWithdrawalId || approveWithdrawalId || rejectWithdrawalId || completeWithdrawalId],\n    enabled: !!(viewWithdrawalId || approveWithdrawalId || rejectWithdrawalId || completeWithdrawalId),\n    queryFn: async () => {\n      const id = viewWithdrawalId || approveWithdrawalId || rejectWithdrawalId || completeWithdrawalId;\n      const withdrawal = withdrawals.find(w => w.id === id);\n      if (withdrawal) return withdrawal;\n      // Fallback to API if not in list\n      const response = await fetch(`/api/admin/finance/withdrawals/${id}`);\n      if (!response.ok) throw new Error(\"Failed to fetch withdrawal\");\n      return response.json();\n    }\n  });\n\n  // Single transaction detail query\n  const { data: selectedTransaction } = useQuery<Transaction>({\n    queryKey: [\"/api/admin/finance/transactions\", viewTransactionId],\n    enabled: !!viewTransactionId,\n    queryFn: async () => {\n      const transaction = transactions.find(t => t.id === viewTransactionId);\n      if (transaction) return transaction;\n      // Fallback to API if not in list\n      const response = await fetch(`/api/admin/finance/transactions/${viewTransactionId}`);\n      if (!response.ok) throw new Error(\"Failed to fetch transaction\");\n      return response.json();\n    }\n  });\n\n  // ============================================================================\n  // FORMS\n  // ============================================================================\n\n  const approveForm = useForm<z.infer<typeof approveWithdrawalSchema>>({\n    resolver: zodResolver(approveWithdrawalSchema),\n    defaultValues: {\n      adminNotes: \"\",\n      verified: false\n    }\n  });\n\n  const rejectForm = useForm<z.infer<typeof rejectWithdrawalSchema>>({\n    resolver: zodResolver(rejectWithdrawalSchema),\n    defaultValues: {\n      reason: \"other\",\n      detailedReason: \"\",\n      notifyUser: true\n    }\n  });\n\n  const completeForm = useForm<z.infer<typeof completeWithdrawalSchema>>({\n    resolver: zodResolver(completeWithdrawalSchema),\n    defaultValues: {\n      transactionId: \"\",\n      notes: \"\",\n      confirmed: false\n    }\n  });\n\n  const exportForm = useForm<z.infer<typeof exportTransactionsSchema>>({\n    resolver: zodResolver(exportTransactionsSchema),\n    defaultValues: {\n      types: [],\n      format: \"csv\",\n      includeNotes: false\n    }\n  });\n\n  // ============================================================================\n  // MUTATIONS\n  // ============================================================================\n\n  const approveWithdrawalMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof approveWithdrawalSchema>) => {\n      if (!approveWithdrawalId) throw new Error(\"No withdrawal selected\");\n      return apiRequest(\"POST\", `/api/admin/finance/withdrawals/${approveWithdrawalId}/approve`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/finance\"] });\n      setApproveWithdrawalId(null);\n      approveForm.reset();\n      toast({ title: \"Withdrawal approved successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to approve withdrawal\", variant: \"destructive\" });\n    }\n  });\n\n  const rejectWithdrawalMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof rejectWithdrawalSchema>) => {\n      if (!rejectWithdrawalId) throw new Error(\"No withdrawal selected\");\n      return apiRequest(\"POST\", `/api/admin/finance/withdrawals/${rejectWithdrawalId}/reject`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/finance\"] });\n      setRejectWithdrawalId(null);\n      rejectForm.reset();\n      toast({ title: \"Withdrawal rejected successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to reject withdrawal\", variant: \"destructive\" });\n    }\n  });\n\n  const completeWithdrawalMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof completeWithdrawalSchema>) => {\n      if (!completeWithdrawalId) throw new Error(\"No withdrawal selected\");\n      return apiRequest(\"POST\", `/api/admin/finance/withdrawals/${completeWithdrawalId}/complete`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/finance\"] });\n      setCompleteWithdrawalId(null);\n      completeForm.reset();\n      toast({ title: \"Withdrawal marked as completed\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to complete withdrawal\", variant: \"destructive\" });\n    }\n  });\n\n  const exportTransactionsMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof exportTransactionsSchema>) => {\n      const params = new URLSearchParams();\n      if (data.dateFrom) params.set(\"dateFrom\", data.dateFrom);\n      if (data.dateTo) params.set(\"dateTo\", data.dateTo);\n      data.types.forEach(type => params.append(\"types\", type));\n      params.set(\"format\", data.format);\n      params.set(\"includeNotes\", data.includeNotes.toString());\n\n      const response = await fetch(`/api/admin/finance/transactions/export?${params.toString()}`);\n      if (!response.ok) throw new Error(\"Export failed\");\n      \n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = `transactions-${format(new Date(), 'yyyy-MM-dd')}.csv`;\n      document.body.appendChild(a);\n      a.click();\n      document.body.removeChild(a);\n      window.URL.revokeObjectURL(url);\n    },\n    onSuccess: () => {\n      setShowExportModal(false);\n      exportForm.reset();\n      toast({ title: \"Transactions exported successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to export transactions\", variant: \"destructive\" });\n    }\n  });\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Page Header */}\n      <div className=\"flex items-center justify-between gap-4 flex-wrap\">\n        <h1 className=\"text-3xl font-bold\" data-testid=\"title-finance-management\">Finance Management</h1>\n        <div className=\"flex gap-2\">\n          <Select value={periodFilter} onValueChange={setPeriodFilter}>\n            <SelectTrigger className=\"w-48\" data-testid=\"select-period-filter\">\n              <SelectValue placeholder=\"Select period\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"today\">Today</SelectItem>\n              <SelectItem value=\"7d\">Last 7 Days</SelectItem>\n              <SelectItem value=\"30d\">Last 30 Days</SelectItem>\n              <SelectItem value=\"90d\">Last 90 Days</SelectItem>\n              <SelectItem value=\"year\">This Year</SelectItem>\n              <SelectItem value=\"all\">All Time</SelectItem>\n            </SelectContent>\n          </Select>\n          <Button \n            variant=\"outline\" \n            onClick={() => setShowExportModal(true)}\n            data-testid=\"button-export-transactions\"\n          >\n            <Download className=\"h-4 w-4 mr-2\" />\n            Export\n          </Button>\n        </div>\n      </div>\n\n      {/* Financial Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        {/* Card 1: Total Revenue */}\n        <Card data-testid=\"card-total-revenue\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {overviewLoading ? (\n              <Skeleton className=\"h-8 w-24\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-finance-revenue\">\n                  {formatCurrency(overview.totalRevenue)}\n                </div>\n                <p className={`text-xs flex items-center gap-1 ${overview.revenueGrowth >= 0 ? 'text-green-600' : 'text-red-600'}`}>\n                  {overview.revenueGrowth >= 0 ? (\n                    <TrendingUp className=\"h-3 w-3\" />\n                  ) : (\n                    <TrendingDown className=\"h-3 w-3\" />\n                  )}\n                  {overview.revenueGrowth >= 0 ? '+' : ''}{overview.revenueGrowth}% vs last period\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Card 2: Pending Withdrawals */}\n        <Card data-testid=\"card-pending-withdrawals\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Withdrawals</CardTitle>\n            <ArrowDownCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {overviewLoading ? (\n              <Skeleton className=\"h-8 w-24\" />\n            ) : (\n              <>\n                <div className={`text-2xl font-bold ${overview.pendingWithdrawalCount > 0 ? 'text-orange-600' : ''}`} data-testid=\"text-pending-withdrawals\">\n                  {formatCurrency(overview.pendingWithdrawals)}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {overview.pendingWithdrawalCount} {overview.pendingWithdrawalCount === 1 ? 'request' : 'requests'}\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Card 3: Total Transactions */}\n        <Card data-testid=\"card-total-transactions\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Transactions</CardTitle>\n            <ArrowRightLeft className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {overviewLoading ? (\n              <Skeleton className=\"h-8 w-24\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-total-transactions\">\n                  {formatNumber(overview.totalTransactions)}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {overview.transactionsToday} today\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Card 4: Top Earner */}\n        <Card data-testid=\"card-top-earner\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Top Earner</CardTitle>\n            <Trophy className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {overviewLoading ? (\n              <Skeleton className=\"h-8 w-24\" />\n            ) : (\n              <>\n                <div className=\"flex items-center gap-2\">\n                  {overview.topEarner?.avatarUrl && (\n                    <Avatar className=\"h-6 w-6\">\n                      <AvatarImage src={overview.topEarner.avatarUrl} />\n                      <AvatarFallback>{overview.topEarner.username?.[0]?.toUpperCase()}</AvatarFallback>\n                    </Avatar>\n                  )}\n                  <div className=\"text-lg font-bold truncate\">\n                    {overview.topEarner?.username || 'N/A'}\n                  </div>\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {formatCurrency(overview.topEarner?.earnings || 0)} earned\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Charts Row */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        {/* Revenue Trend Chart */}\n        <Card data-testid=\"card-revenue-trend\">\n          <CardHeader>\n            <CardTitle>Revenue Trend</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {chartLoading ? (\n              <Skeleton className=\"h-64\" />\n            ) : revenueChart.length > 0 ? (\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <LineChart data={revenueChart}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip formatter={(value) => formatCurrency(Number(value))} />\n                  <Line \n                    type=\"monotone\" \n                    dataKey=\"revenue\" \n                    stroke=\"hsl(var(--primary))\" \n                    strokeWidth={2}\n                    dot={{ r: 3 }}\n                  />\n                </LineChart>\n              </ResponsiveContainer>\n            ) : (\n              <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n                No revenue data available\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        {/* Revenue by Source Chart */}\n        <Card data-testid=\"card-revenue-by-source\">\n          <CardHeader>\n            <CardTitle>Revenue by Source</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {sourceLoading ? (\n              <Skeleton className=\"h-64\" />\n            ) : revenueBySource.length > 0 ? (\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <PieChart>\n                  <Pie\n                    data={revenueBySource}\n                    dataKey=\"value\"\n                    nameKey=\"name\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={60}\n                    label={(entry) => `${entry.name}: ${formatCurrency(entry.value)}`}\n                  >\n                    {revenueBySource.map((entry, index) => {\n                      const colorKey = entry.name.toLowerCase().replace(/\\s+/g, '') as keyof typeof COLORS;\n                      return (\n                        <Cell \n                          key={`cell-${index}`} \n                          fill={COLORS[colorKey] || COLORS.other} \n                        />\n                      );\n                    })}\n                  </Pie>\n                  <Tooltip formatter={(value) => formatCurrency(Number(value))} />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n            ) : (\n              <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n                No source data available\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Pending Withdrawals Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Pending Withdrawals ({withdrawals.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {withdrawalsLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(5)].map((_, i) => (\n                <Skeleton key={i} className=\"h-16\" />\n              ))}\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>User</TableHead>\n                    <TableHead>Amount</TableHead>\n                    <TableHead>Method</TableHead>\n                    <TableHead>Wallet</TableHead>\n                    <TableHead>Requested</TableHead>\n                    <TableHead>Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {withdrawals.length > 0 ? (\n                    withdrawals.map((withdrawal) => {\n                      const daysWaiting = differenceInDays(new Date(), new Date(withdrawal.createdAt));\n                      const isUrgent = daysWaiting > 7;\n\n                      return (\n                        <TableRow key={withdrawal.id} data-testid={`withdrawal-row-${withdrawal.id}`}>\n                          <TableCell>\n                            <div className=\"flex items-center gap-2\">\n                              <Avatar className=\"h-8 w-8\">\n                                <AvatarImage src={withdrawal.avatarUrl} />\n                                <AvatarFallback>{withdrawal.username?.[0]?.toUpperCase()}</AvatarFallback>\n                              </Avatar>\n                              <div>\n                                <div className=\"font-medium\">{withdrawal.username}</div>\n                                {isUrgent && (\n                                  <Badge variant=\"destructive\" className=\"text-xs mt-1\">\n                                    <AlertTriangle className=\"h-3 w-3 mr-1\" />\n                                    Urgent\n                                  </Badge>\n                                )}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <span className=\"font-bold\" data-testid={`withdrawal-amount-${withdrawal.id}`}>\n                              {formatCurrency(withdrawal.amount)}\n                            </span>\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant=\"outline\">{withdrawal.method || 'USDT'}</Badge>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex items-center gap-2 max-w-xs\">\n                              <span className=\"truncate\">{withdrawal.walletAddress || 'N/A'}</span>\n                              {withdrawal.walletAddress && (\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"ghost\"\n                                  className=\"h-6 w-6 p-0\"\n                                  onClick={() => copyToClipboard(withdrawal.walletAddress!, toast)}\n                                >\n                                  <Copy className=\"h-3 w-3\" />\n                                </Button>\n                              )}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div>\n                              <div className=\"text-sm\">{format(new Date(withdrawal.createdAt), 'MMM dd, yyyy HH:mm')}</div>\n                              <div className=\"text-xs text-muted-foreground\">\n                                {formatDistanceToNow(new Date(withdrawal.createdAt), { addSuffix: true })}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex gap-2 flex-wrap\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                className=\"bg-green-50 hover:bg-green-100 text-green-700 border-green-200\"\n                                onClick={() => setApproveWithdrawalId(withdrawal.id)}\n                                data-testid={`approve-withdrawal-${withdrawal.id}`}\n                              >\n                                <CheckCircle className=\"h-4 w-4 mr-1\" />\n                                Approve\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                className=\"bg-red-50 hover:bg-red-100 text-red-700 border-red-200\"\n                                onClick={() => setRejectWithdrawalId(withdrawal.id)}\n                                data-testid={`reject-withdrawal-${withdrawal.id}`}\n                              >\n                                <XCircle className=\"h-4 w-4 mr-1\" />\n                                Reject\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={() => setViewWithdrawalId(withdrawal.id)}\n                                data-testid={`view-withdrawal-${withdrawal.id}`}\n                              >\n                                <Eye className=\"h-4 w-4\" />\n                              </Button>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      );\n                    })\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\n                        No pending withdrawals\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Recent Transactions Table */}\n      <Card>\n        <CardHeader className=\"flex flex-row items-center justify-between\">\n          <CardTitle>Recent Transactions ({transactions.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {transactionsLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(5)].map((_, i) => (\n                <Skeleton key={i} className=\"h-16\" />\n              ))}\n            </div>\n          ) : (\n            <>\n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>User</TableHead>\n                      <TableHead>Type</TableHead>\n                      <TableHead>Amount</TableHead>\n                      <TableHead>Method</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Date</TableHead>\n                      <TableHead>Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {transactions.length > 0 ? (\n                      transactions.map((txn) => {\n                        const isIncome = ['coin purchase', 'subscription', 'marketplace'].includes(txn.type?.toLowerCase() || '');\n                        \n                        return (\n                          <TableRow \n                            key={txn.id} \n                            data-testid={`transaction-row-${txn.id}`}\n                            className=\"cursor-pointer hover:bg-muted/50\"\n                            onClick={() => setViewTransactionId(txn.id)}\n                          >\n                            <TableCell>\n                              <div className=\"flex items-center gap-2\">\n                                <Avatar className=\"h-8 w-8\">\n                                  <AvatarImage src={txn.avatarUrl} />\n                                  <AvatarFallback>{txn.username?.[0]?.toUpperCase()}</AvatarFallback>\n                                </Avatar>\n                                <span className=\"font-medium\">{txn.username}</span>\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Badge variant={getTypeColor(txn.type)}>\n                                {txn.type || 'Unknown'}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              <span \n                                className={`font-semibold ${isIncome ? 'text-green-600' : 'text-red-600'}`}\n                                data-testid={`transaction-amount-${txn.id}`}\n                              >\n                                {isIncome ? '+' : '-'}{formatCurrency(txn.amount)}\n                              </span>\n                            </TableCell>\n                            <TableCell>\n                              <span className=\"text-sm\">{txn.method || 'N/A'}</span>\n                            </TableCell>\n                            <TableCell>\n                              <Badge variant={getStatusColor(txn.status || 'pending')}>\n                                {txn.status || 'Pending'}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"text-sm\">\n                                {formatDistanceToNow(new Date(txn.createdAt), { addSuffix: true })}\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={(e) => {\n                                  e.stopPropagation();\n                                  setViewTransactionId(txn.id);\n                                }}\n                                data-testid={`view-transaction-${txn.id}`}\n                              >\n                                <Eye className=\"h-4 w-4\" />\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        );\n                      })\n                    ) : (\n                      <TableRow>\n                        <TableCell colSpan={7} className=\"text-center py-8 text-muted-foreground\">\n                          No recent transactions\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </div>\n              {transactions.length > 0 && (\n                <div className=\"mt-4 flex justify-center\">\n                  <Button variant=\"outline\">\n                    View All Transactions\n                  </Button>\n                </div>\n              )}\n            </>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* ============================================================================ */}\n      {/* MODALS */}\n      {/* ============================================================================ */}\n\n      {/* Modal 1: Approve Withdrawal */}\n      <Dialog open={!!approveWithdrawalId} onOpenChange={(open) => !open && setApproveWithdrawalId(null)}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Approve Withdrawal Request</DialogTitle>\n            <DialogDescription>\n              Review and approve this withdrawal request\n            </DialogDescription>\n          </DialogHeader>\n\n          {selectedWithdrawal && (\n            <div className=\"space-y-4\">\n              {/* User Info */}\n              <div className=\"flex items-center gap-3 p-4 bg-muted/50 rounded-lg\">\n                <Avatar className=\"h-12 w-12\">\n                  <AvatarImage src={selectedWithdrawal.avatarUrl} />\n                  <AvatarFallback>{selectedWithdrawal.username?.[0]?.toUpperCase()}</AvatarFallback>\n                </Avatar>\n                <div>\n                  <div className=\"font-semibold\">{selectedWithdrawal.username}</div>\n                  <div className=\"text-sm text-muted-foreground\">Current Balance: {formatCurrency(selectedWithdrawal.userBalance || 0)}</div>\n                </div>\n              </div>\n\n              {/* Withdrawal Details */}\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <div className=\"text-sm text-muted-foreground\">Amount Requested</div>\n                  <div className=\"text-2xl font-bold\">{formatCurrency(selectedWithdrawal.amount)}</div>\n                </div>\n                <div>\n                  <div className=\"text-sm text-muted-foreground\">Method</div>\n                  <div className=\"text-lg font-semibold\">{selectedWithdrawal.method || 'USDT'}</div>\n                </div>\n                <div className=\"col-span-2\">\n                  <div className=\"text-sm text-muted-foreground\">Wallet Address</div>\n                  <div className=\"font-mono text-sm break-all\">{selectedWithdrawal.walletAddress || 'N/A'}</div>\n                </div>\n              </div>\n\n              <Form {...approveForm}>\n                <form onSubmit={approveForm.handleSubmit((data) => approveWithdrawalMutation.mutate(data))} className=\"space-y-4\">\n                  {/* Verification Checklist */}\n                  <div className=\"space-y-2 p-4 bg-green-50 dark:bg-green-950 rounded-lg\">\n                    <div className=\"font-medium mb-2\">Verification Checklist:</div>\n                    <div className=\"flex items-center gap-2 text-sm\">\n                      <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                      <span>User has sufficient balance</span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm\">\n                      <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                      <span>Wallet address is valid</span>\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm\">\n                      <CheckCircle className=\"h-4 w-4 text-green-600\" />\n                      <span>No suspicious activity detected</span>\n                    </div>\n                  </div>\n\n                  {/* Admin Notes */}\n                  <FormField\n                    control={approveForm.control}\n                    name=\"adminNotes\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Admin Notes (Optional)</FormLabel>\n                        <FormControl>\n                          <Textarea {...field} placeholder=\"Add any internal notes...\" />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Confirmation */}\n                  <FormField\n                    control={approveForm.control}\n                    name=\"verified\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                        <FormControl>\n                          <Checkbox\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                          />\n                        </FormControl>\n                        <div className=\"space-y-1 leading-none\">\n                          <FormLabel>\n                            I confirm all verification checks have been completed\n                          </FormLabel>\n                          <FormMessage />\n                        </div>\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Warning */}\n                  <div className=\"p-3 bg-yellow-50 dark:bg-yellow-950 border border-yellow-200 dark:border-yellow-800 rounded-lg\">\n                    <div className=\"flex gap-2\">\n                      <AlertTriangle className=\"h-5 w-5 text-yellow-600 flex-shrink-0\" />\n                      <div className=\"text-sm\">\n                        <strong>Warning:</strong> Amount will be deducted from user's balance immediately upon approval.\n                      </div>\n                    </div>\n                  </div>\n\n                  <DialogFooter>\n                    <Button type=\"button\" variant=\"outline\" onClick={() => setApproveWithdrawalId(null)}>\n                      Cancel\n                    </Button>\n                    <Button \n                      type=\"submit\" \n                      className=\"bg-green-600 hover:bg-green-700\"\n                      disabled={approveWithdrawalMutation.isPending}\n                    >\n                      {approveWithdrawalMutation.isPending ? 'Processing...' : 'Approve & Process'}\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </Form>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Modal 2: Reject Withdrawal */}\n      <Dialog open={!!rejectWithdrawalId} onOpenChange={(open) => !open && setRejectWithdrawalId(null)}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Reject Withdrawal Request</DialogTitle>\n            <DialogDescription>\n              Provide a reason for rejecting this withdrawal request\n            </DialogDescription>\n          </DialogHeader>\n\n          {selectedWithdrawal && (\n            <div className=\"space-y-4\">\n              {/* User Info */}\n              <div className=\"flex items-center gap-3 p-4 bg-muted/50 rounded-lg\">\n                <Avatar className=\"h-12 w-12\">\n                  <AvatarImage src={selectedWithdrawal.avatarUrl} />\n                  <AvatarFallback>{selectedWithdrawal.username?.[0]?.toUpperCase()}</AvatarFallback>\n                </Avatar>\n                <div>\n                  <div className=\"font-semibold\">{selectedWithdrawal.username}</div>\n                  <div className=\"text-sm text-muted-foreground\">\n                    Requested: {formatCurrency(selectedWithdrawal.amount)}\n                  </div>\n                </div>\n              </div>\n\n              <Form {...rejectForm}>\n                <form onSubmit={rejectForm.handleSubmit((data) => rejectWithdrawalMutation.mutate(data))} className=\"space-y-4\">\n                  {/* Rejection Reason */}\n                  <FormField\n                    control={rejectForm.control}\n                    name=\"reason\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Rejection Reason</FormLabel>\n                        <Select onValueChange={field.onChange} defaultValue={field.value}>\n                          <FormControl>\n                            <SelectTrigger>\n                              <SelectValue placeholder=\"Select a reason\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"insufficient_balance\">Insufficient Balance</SelectItem>\n                            <SelectItem value=\"invalid_wallet\">Invalid Wallet Details</SelectItem>\n                            <SelectItem value=\"suspicious_activity\">Suspicious Activity</SelectItem>\n                            <SelectItem value=\"verification_required\">Verification Required</SelectItem>\n                            <SelectItem value=\"other\">Other</SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Detailed Reason */}\n                  <FormField\n                    control={rejectForm.control}\n                    name=\"detailedReason\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Detailed Reason (shown to user)</FormLabel>\n                        <FormControl>\n                          <Textarea \n                            {...field} \n                            placeholder=\"Provide a clear explanation that will be shown to the user...\"\n                            rows={4}\n                          />\n                        </FormControl>\n                        <FormDescription>\n                          This message will be sent to the user, so please be clear and professional.\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Notify User */}\n                  <FormField\n                    control={rejectForm.control}\n                    name=\"notifyUser\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                        <FormControl>\n                          <Checkbox\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                          />\n                        </FormControl>\n                        <div className=\"space-y-1 leading-none\">\n                          <FormLabel>Notify user by email</FormLabel>\n                        </div>\n                      </FormItem>\n                    )}\n                  />\n\n                  <DialogFooter>\n                    <Button type=\"button\" variant=\"outline\" onClick={() => setRejectWithdrawalId(null)}>\n                      Cancel\n                    </Button>\n                    <Button \n                      type=\"submit\" \n                      variant=\"destructive\"\n                      disabled={rejectWithdrawalMutation.isPending}\n                    >\n                      {rejectWithdrawalMutation.isPending ? 'Processing...' : 'Reject Request'}\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </Form>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Modal 3: Complete Withdrawal */}\n      <Dialog open={!!completeWithdrawalId} onOpenChange={(open) => !open && setCompleteWithdrawalId(null)}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Mark Withdrawal as Completed</DialogTitle>\n            <DialogDescription>\n              Confirm that payment has been successfully sent\n            </DialogDescription>\n          </DialogHeader>\n\n          {selectedWithdrawal && (\n            <div className=\"space-y-4\">\n              {/* Request Details */}\n              <div className=\"p-4 bg-muted/50 rounded-lg space-y-2\">\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-muted-foreground\">User:</span>\n                  <span className=\"font-medium\">{selectedWithdrawal.username}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-muted-foreground\">Amount:</span>\n                  <span className=\"font-bold\">{formatCurrency(selectedWithdrawal.amount)}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-muted-foreground\">Method:</span>\n                  <span>{selectedWithdrawal.method || 'USDT'}</span>\n                </div>\n                <div className=\"flex justify-between\">\n                  <span className=\"text-sm text-muted-foreground\">Wallet:</span>\n                  <span className=\"font-mono text-xs\">{selectedWithdrawal.walletAddress}</span>\n                </div>\n              </div>\n\n              <Form {...completeForm}>\n                <form onSubmit={completeForm.handleSubmit((data) => completeWithdrawalMutation.mutate(data))} className=\"space-y-4\">\n                  {/* Transaction ID */}\n                  <FormField\n                    control={completeForm.control}\n                    name=\"transactionId\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Transaction ID / Payment Reference *</FormLabel>\n                        <FormControl>\n                          <Input {...field} placeholder=\"Enter transaction ID or payment reference\" />\n                        </FormControl>\n                        <FormDescription>\n                          The transaction hash or payment reference from the payment gateway\n                        </FormDescription>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Additional Notes */}\n                  <FormField\n                    control={completeForm.control}\n                    name=\"notes\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel>Additional Notes (Optional)</FormLabel>\n                        <FormControl>\n                          <Textarea {...field} placeholder=\"Add any additional information...\" />\n                        </FormControl>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n\n                  {/* Confirmation */}\n                  <FormField\n                    control={completeForm.control}\n                    name=\"confirmed\"\n                    render={({ field }) => (\n                      <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                        <FormControl>\n                          <Checkbox\n                            checked={field.value}\n                            onCheckedChange={field.onChange}\n                          />\n                        </FormControl>\n                        <div className=\"space-y-1 leading-none\">\n                          <FormLabel>\n                            I confirm that payment has been sent successfully\n                          </FormLabel>\n                          <FormMessage />\n                        </div>\n                      </FormItem>\n                    )}\n                  />\n\n                  <DialogFooter>\n                    <Button type=\"button\" variant=\"outline\" onClick={() => setCompleteWithdrawalId(null)}>\n                      Cancel\n                    </Button>\n                    <Button \n                      type=\"submit\" \n                      className=\"bg-green-600 hover:bg-green-700\"\n                      disabled={completeWithdrawalMutation.isPending}\n                    >\n                      {completeWithdrawalMutation.isPending ? 'Processing...' : 'Mark as Completed'}\n                    </Button>\n                  </DialogFooter>\n                </form>\n              </Form>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Modal 4: View Transaction Details */}\n      <Dialog open={!!viewTransactionId} onOpenChange={(open) => !open && setViewTransactionId(null)}>\n        <DialogContent className=\"max-w-3xl\">\n          <DialogHeader>\n            <DialogTitle>Transaction Details</DialogTitle>\n            <DialogDescription>\n              Complete information about this transaction\n            </DialogDescription>\n          </DialogHeader>\n\n          {selectedTransaction && (\n            <div className=\"space-y-4\">\n              {/* Transaction Info Grid */}\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"col-span-2 p-4 bg-muted/50 rounded-lg\">\n                  <div className=\"text-sm text-muted-foreground\">Transaction ID</div>\n                  <div className=\"font-mono text-sm\">{selectedTransaction.id}</div>\n                </div>\n                \n                <div>\n                  <div className=\"text-sm text-muted-foreground\">Type</div>\n                  <Badge variant={getTypeColor(selectedTransaction.type)} className=\"mt-1\">\n                    {selectedTransaction.type}\n                  </Badge>\n                </div>\n                \n                <div>\n                  <div className=\"text-sm text-muted-foreground\">Status</div>\n                  <Badge variant={getStatusColor(selectedTransaction.status || 'pending')} className=\"mt-1\">\n                    {selectedTransaction.status || 'Pending'}\n                  </Badge>\n                </div>\n                \n                <div>\n                  <div className=\"text-sm text-muted-foreground\">Amount</div>\n                  <div className=\"text-xl font-bold\">{formatCurrency(selectedTransaction.amount)}</div>\n                </div>\n                \n                <div>\n                  <div className=\"text-sm text-muted-foreground\">Payment Method</div>\n                  <div className=\"font-medium\">{selectedTransaction.method || 'N/A'}</div>\n                </div>\n                \n                <div className=\"col-span-2\">\n                  <div className=\"text-sm text-muted-foreground\">User</div>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarImage src={selectedTransaction.avatarUrl} />\n                      <AvatarFallback>{selectedTransaction.username?.[0]?.toUpperCase()}</AvatarFallback>\n                    </Avatar>\n                    <span className=\"font-medium\">{selectedTransaction.username}</span>\n                  </div>\n                </div>\n                \n                <div className=\"col-span-2\">\n                  <div className=\"text-sm text-muted-foreground\">Date & Time</div>\n                  <div>{format(new Date(selectedTransaction.createdAt), 'PPpp')}</div>\n                  <div className=\"text-xs text-muted-foreground\">\n                    {formatDistanceToNow(new Date(selectedTransaction.createdAt), { addSuffix: true })}\n                  </div>\n                </div>\n\n                {selectedTransaction.description && (\n                  <div className=\"col-span-2\">\n                    <div className=\"text-sm text-muted-foreground\">Description</div>\n                    <div className=\"text-sm\">{selectedTransaction.description}</div>\n                  </div>\n                )}\n              </div>\n\n              <DialogFooter>\n                <Button variant=\"outline\" onClick={() => {\n                  toast({ title: \"Receipt download feature coming soon\" });\n                }}>\n                  <Download className=\"h-4 w-4 mr-2\" />\n                  Download Receipt\n                </Button>\n                <Button onClick={() => setViewTransactionId(null)}>\n                  Close\n                </Button>\n              </DialogFooter>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Modal 5: Export Transactions */}\n      <Dialog open={showExportModal} onOpenChange={setShowExportModal}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Export Transactions</DialogTitle>\n            <DialogDescription>\n              Select filters and export transactions to CSV\n            </DialogDescription>\n          </DialogHeader>\n\n          <Form {...exportForm}>\n            <form onSubmit={exportForm.handleSubmit((data) => exportTransactionsMutation.mutate(data))} className=\"space-y-4\">\n              {/* Date Range */}\n              <div className=\"grid grid-cols-2 gap-4\">\n                <FormField\n                  control={exportForm.control}\n                  name=\"dateFrom\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>From Date</FormLabel>\n                      <FormControl>\n                        <Input type=\"date\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                \n                <FormField\n                  control={exportForm.control}\n                  name=\"dateTo\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel>To Date</FormLabel>\n                      <FormControl>\n                        <Input type=\"date\" {...field} />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n              </div>\n\n              {/* Transaction Types */}\n              <FormField\n                control={exportForm.control}\n                name=\"types\"\n                render={() => (\n                  <FormItem>\n                    <FormLabel>Transaction Types</FormLabel>\n                    <div className=\"space-y-2\">\n                      {['Coin Purchases', 'Subscriptions', 'Marketplace', 'Withdrawals'].map((type) => (\n                        <FormField\n                          key={type}\n                          control={exportForm.control}\n                          name=\"types\"\n                          render={({ field }) => (\n                            <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                              <FormControl>\n                                <Checkbox\n                                  checked={field.value?.includes(type)}\n                                  onCheckedChange={(checked) => {\n                                    return checked\n                                      ? field.onChange([...field.value, type])\n                                      : field.onChange(field.value?.filter((value) => value !== type))\n                                  }}\n                                />\n                              </FormControl>\n                              <FormLabel className=\"font-normal\">\n                                {type}\n                              </FormLabel>\n                            </FormItem>\n                          )}\n                        />\n                      ))}\n                    </div>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              {/* Format */}\n              <FormField\n                control={exportForm.control}\n                name=\"format\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Export Format</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select format\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"csv\">CSV</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              {/* Include Notes */}\n              <FormField\n                control={exportForm.control}\n                name=\"includeNotes\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0\">\n                    <FormControl>\n                      <Checkbox\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                      />\n                    </FormControl>\n                    <div className=\"space-y-1 leading-none\">\n                      <FormLabel>Include detailed notes</FormLabel>\n                    </div>\n                  </FormItem>\n                )}\n              />\n\n              <DialogFooter>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowExportModal(false)}>\n                  Cancel\n                </Button>\n                <Button \n                  type=\"submit\" \n                  disabled={exportTransactionsMutation.isPending}\n                  data-testid=\"button-export-submit\"\n                >\n                  {exportTransactionsMutation.isPending ? 'Exporting...' : 'Export'}\n                </Button>\n              </DialogFooter>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n\n      {/* View Withdrawal Details Modal (simplified) */}\n      <Dialog open={!!viewWithdrawalId} onOpenChange={(open) => !open && setViewWithdrawalId(null)}>\n        <DialogContent className=\"max-w-2xl\">\n          <DialogHeader>\n            <DialogTitle>Withdrawal Details</DialogTitle>\n          </DialogHeader>\n\n          {selectedWithdrawal && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div className=\"col-span-2\">\n                  <div className=\"text-sm text-muted-foreground\">User</div>\n                  <div className=\"flex items-center gap-2 mt-1\">\n                    <Avatar className=\"h-10 w-10\">\n                      <AvatarImage src={selectedWithdrawal.avatarUrl} />\n                      <AvatarFallback>{selectedWithdrawal.username?.[0]?.toUpperCase()}</AvatarFallback>\n                    </Avatar>\n                    <div>\n                      <div className=\"font-semibold\">{selectedWithdrawal.username}</div>\n                      <div className=\"text-xs text-muted-foreground\">\n                        Balance: {formatCurrency(selectedWithdrawal.userBalance || 0)}\n                      </div>\n                    </div>\n                  </div>\n                </div>\n\n                <div>\n                  <div className=\"text-sm text-muted-foreground\">Amount</div>\n                  <div className=\"text-2xl font-bold\">{formatCurrency(selectedWithdrawal.amount)}</div>\n                </div>\n\n                <div>\n                  <div className=\"text-sm text-muted-foreground\">Method</div>\n                  <div className=\"font-medium\">{selectedWithdrawal.method || 'USDT'}</div>\n                </div>\n\n                <div className=\"col-span-2\">\n                  <div className=\"text-sm text-muted-foreground\">Wallet Address</div>\n                  <div className=\"font-mono text-sm break-all bg-muted/50 p-2 rounded\">\n                    {selectedWithdrawal.walletAddress || 'N/A'}\n                  </div>\n                </div>\n\n                <div className=\"col-span-2\">\n                  <div className=\"text-sm text-muted-foreground\">Requested</div>\n                  <div>{format(new Date(selectedWithdrawal.createdAt), 'PPpp')}</div>\n                  <div className=\"text-xs text-muted-foreground\">\n                    {formatDistanceToNow(new Date(selectedWithdrawal.createdAt), { addSuffix: true })}\n                  </div>\n                </div>\n              </div>\n\n              <DialogFooter>\n                <Button onClick={() => setViewWithdrawalId(null)}>Close</Button>\n              </DialogFooter>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}