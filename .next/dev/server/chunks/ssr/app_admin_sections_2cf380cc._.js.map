{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Overview.tsx"],"sourcesContent":["\"use client\";\n\nimport { useQuery } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Users, FileText, DollarSign, AlertCircle } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { LineChart, Line, BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ninterface OverviewStats {\n  users: {\n    total: number;\n    new24h: number;\n  };\n  content: {\n    total: number;\n    new24h: number;\n  };\n  revenue: {\n    total: number;\n    today: number;\n  };\n  moderation: {\n    pending: number;\n    reports: number;\n  };\n}\n\ninterface ActivityFeedItem {\n  id: string;\n  adminUsername: string;\n  actionType: string;\n  targetType: string;\n  status: string;\n  createdAt: string;\n}\n\ninterface UserGrowthDataPoint {\n  date: string;\n  users: number;\n}\n\ninterface ContentTrendDataPoint {\n  date: string;\n  count: number;\n}\n\nexport default function AdminOverview() {\n  const { data: statsRaw, isLoading: statsLoading } = useQuery<OverviewStats>({\n    queryKey: [\"/api/admin/overview/stats\"],\n    refetchInterval: 30000, // Refresh every 30 seconds\n  });\n\n  const stats: OverviewStats = statsRaw || {\n    users: { total: 0, new24h: 0 },\n    content: { total: 0, new24h: 0 },\n    revenue: { total: 0, today: 0 },\n    moderation: { pending: 0, reports: 0 }\n  };\n\n  const { data: activityFeedRaw, isLoading: activityLoading } = useQuery<ActivityFeedItem[]>({\n    queryKey: [\"/api/admin/overview/activity-feed\"],\n    refetchInterval: 15000, // Refresh every 15 seconds (more frequent for activity)\n  });\n\n  const activityFeed: ActivityFeedItem[] = Array.isArray(activityFeedRaw) ? activityFeedRaw : [];\n\n  const { data: userGrowthRaw, isLoading: growthLoading } = useQuery<UserGrowthDataPoint[]>({\n    queryKey: [\"/api/admin/overview/user-growth\"],\n    refetchInterval: 60000, // Refresh every 60 seconds (charts less critical)\n  });\n\n  const userGrowth: UserGrowthDataPoint[] = Array.isArray(userGrowthRaw) ? userGrowthRaw : [];\n\n  const { data: contentTrendRaw, isLoading: trendLoading } = useQuery<ContentTrendDataPoint[]>({\n    queryKey: [\"/api/admin/overview/content-trend\"],\n    refetchInterval: 60000, // Refresh every 60 seconds (charts less critical)\n  });\n\n  const contentTrend: ContentTrendDataPoint[] = Array.isArray(contentTrendRaw) ? contentTrendRaw : [];\n\n  if (statsLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <Skeleton className=\"h-10 w-64\" />\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n          {[...Array(4)].map((_, i) => (\n            <Skeleton key={i} className=\"h-32\" />\n          ))}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold\">Overview Dashboard</h1>\n      \n      {/* Stat Cards Grid */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card data-testid=\"card-total-users\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Users</CardTitle>\n            <Users className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\" data-testid=\"text-total-users\">\n              {stats.users.total}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              +{stats.users.new24h} in last 24h\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-total-content\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Content</CardTitle>\n            <FileText className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\" data-testid=\"text-total-content\">\n              {stats.content.total}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              +{stats.content.new24h} in last 24h\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-total-revenue\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\" data-testid=\"text-total-revenue\">\n              ${stats.revenue.total}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              +${stats.revenue.today} today\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-pending-moderation\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Moderation</CardTitle>\n            <AlertCircle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-2xl font-bold\" data-testid=\"text-pending-moderation\">\n              {stats.moderation.pending}\n            </div>\n            <p className=\"text-xs text-muted-foreground\">\n              {stats.moderation.reports} reports\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Charts Row */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <Card data-testid=\"card-user-growth-chart\">\n          <CardHeader>\n            <CardTitle>User Growth (Last 7 Days)</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {growthLoading ? (\n              <Skeleton className=\"h-64\" />\n            ) : userGrowth.length > 0 ? (\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <LineChart data={userGrowth}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Line type=\"monotone\" dataKey=\"users\" stroke=\"hsl(var(--primary))\" strokeWidth={2} />\n                </LineChart>\n              </ResponsiveContainer>\n            ) : (\n              <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n                No data available\n              </div>\n            )}\n          </CardContent>\n        </Card>\n        \n        <Card data-testid=\"card-content-trend-chart\">\n          <CardHeader>\n            <CardTitle>Content Trend (Last 7 Days)</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {trendLoading ? (\n              <Skeleton className=\"h-64\" />\n            ) : contentTrend.length > 0 ? (\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <BarChart data={contentTrend}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Bar dataKey=\"count\" fill=\"hsl(var(--primary))\" />\n                </BarChart>\n              </ResponsiveContainer>\n            ) : (\n              <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n                No data available\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Activity Feed */}\n      <Card data-testid=\"card-activity-feed\">\n        <CardHeader>\n          <CardTitle>Recent Admin Activity</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {activityLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(5)].map((_, i) => (\n                <Skeleton key={i} className=\"h-12\" />\n              ))}\n            </div>\n          ) : activityFeed.length > 0 ? (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Admin</TableHead>\n                    <TableHead>Action</TableHead>\n                    <TableHead>Target</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead>Time</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {activityFeed.map((activity) => (\n                    <TableRow key={activity.id} data-testid={`activity-${activity.id}`}>\n                      <TableCell data-testid={`activity-admin-${activity.id}`}>\n                        {activity.adminUsername || 'System'}\n                      </TableCell>\n                      <TableCell data-testid={`activity-action-${activity.id}`}>\n                        {activity.actionType}\n                      </TableCell>\n                      <TableCell data-testid={`activity-target-${activity.id}`}>\n                        {activity.targetType}\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant={activity.status === 'success' ? 'default' : 'destructive'}>\n                          {activity.status}\n                        </Badge>\n                      </TableCell>\n                      <TableCell data-testid={`activity-time-${activity.id}`}>\n                        {formatDistanceToNow(new Date(activity.createdAt), { addSuffix: true })}\n                      </TableCell>\n                    </TableRow>\n                  ))}\n                </TableBody>\n              </Table>\n            </div>\n          ) : (\n            <p className=\"text-muted-foreground text-center py-8\">No recent activity</p>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 767, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Users.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Search, Ban, UserCheck, Coins } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\ninterface AdminUser {\n  id: number;\n  username: string;\n  email: string;\n  role: string;\n  status: 'active' | 'suspended' | 'banned';\n  coinBalance: number;\n  createdAt: string;\n  reputation: number;\n}\n\nexport default function AdminUsers() {\n  const [search, setSearch] = useState(\"\");\n  const [roleFilter, setRoleFilter] = useState(\"all\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n  const [selectedUser, setSelectedUser] = useState<AdminUser | null>(null);\n  const { toast } = useToast();\n\n  const { data: usersRaw, isLoading } = useQuery<AdminUser[]>({\n    queryKey: [\"/api/admin/users\", { search, role: roleFilter, status: statusFilter }]\n  });\n\n  const users: AdminUser[] = Array.isArray(usersRaw) ? usersRaw : [];\n\n  const banUserMutation = useMutation({\n    mutationFn: async ({ userId, reason }: { userId: number; reason: string }) => {\n      return apiRequest(\"POST\", `/api/admin/users/${userId}/ban`, { reason });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/users\"] });\n      toast({ title: \"User banned successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to ban user\", variant: \"destructive\" });\n    }\n  });\n\n  const adjustCoinsMutation = useMutation({\n    mutationFn: async ({ userId, amount, reason }: { userId: number; amount: number; reason: string }) => {\n      return apiRequest(\"POST\", `/api/admin/users/${userId}/adjust-coins`, { amount, reason });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/users\"] });\n      toast({ title: \"Coins adjusted successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to adjust coins\", variant: \"destructive\" });\n    }\n  });\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <Skeleton className=\"h-10 w-64\" />\n        <Skeleton className=\"h-96\" />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between gap-4 flex-wrap\">\n        <h1 className=\"text-3xl font-bold\">User Management</h1>\n      </div>\n\n      {/* Filters */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Search & Filters</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex flex-col md:flex-row gap-4\">\n            <div className=\"relative flex-1\">\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search by username or email...\"\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n                className=\"pl-9\"\n                data-testid=\"input-user-search\"\n              />\n            </div>\n            <Select value={roleFilter} onValueChange={setRoleFilter}>\n              <SelectTrigger className=\"w-full md:w-48\" data-testid=\"select-role-filter\">\n                <SelectValue placeholder=\"Filter by role\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Roles</SelectItem>\n                <SelectItem value=\"user\">User</SelectItem>\n                <SelectItem value=\"moderator\">Moderator</SelectItem>\n                <SelectItem value=\"admin\">Admin</SelectItem>\n              </SelectContent>\n            </Select>\n            <Select value={statusFilter} onValueChange={setStatusFilter}>\n              <SelectTrigger className=\"w-full md:w-48\" data-testid=\"select-status-filter\">\n                <SelectValue placeholder=\"Filter by status\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Status</SelectItem>\n                <SelectItem value=\"active\">Active</SelectItem>\n                <SelectItem value=\"suspended\">Suspended</SelectItem>\n                <SelectItem value=\"banned\">Banned</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Users Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Users ({users.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>User</TableHead>\n                  <TableHead>Email</TableHead>\n                  <TableHead>Role</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Coins</TableHead>\n                  <TableHead>Joined</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {users.length > 0 ? (\n                  users.map((user) => (\n                    <TableRow key={user.id} data-testid={`user-row-${user.id}`}>\n                      <TableCell data-testid={`user-name-${user.id}`}>\n                        {user.username}\n                      </TableCell>\n                      <TableCell>{user.email}</TableCell>\n                      <TableCell>\n                        <Badge variant=\"outline\">{user.role}</Badge>\n                      </TableCell>\n                      <TableCell>\n                        <Badge variant={user.status === 'active' ? 'default' : 'destructive'}>\n                          {user.status}\n                        </Badge>\n                      </TableCell>\n                      <TableCell data-testid={`user-coins-${user.id}`}>\n                        {user.coinBalance}\n                      </TableCell>\n                      <TableCell>\n                        {formatDistanceToNow(new Date(user.createdAt), { addSuffix: true })}\n                      </TableCell>\n                      <TableCell>\n                        <div className=\"flex gap-2 flex-wrap\">\n                          <Button\n                            size=\"sm\"\n                            variant=\"outline\"\n                            onClick={() => setSelectedUser(user)}\n                            data-testid={`button-view-user-${user.id}`}\n                          >\n                            <UserCheck className=\"h-4 w-4 mr-1\" />\n                            View\n                          </Button>\n                          <Button\n                            size=\"sm\"\n                            variant=\"destructive\"\n                            onClick={() => banUserMutation.mutate({ userId: user.id, reason: \"Manual ban\" })}\n                            disabled={user.status === 'banned'}\n                            data-testid={`button-ban-user-${user.id}`}\n                          >\n                            <Ban className=\"h-4 w-4 mr-1\" />\n                            Ban\n                          </Button>\n                        </div>\n                      </TableCell>\n                    </TableRow>\n                  ))\n                ) : (\n                  <TableRow>\n                    <TableCell colSpan={7} className=\"text-center py-8 text-muted-foreground\">\n                      No users found\n                    </TableCell>\n                  </TableRow>\n                )}\n              </TableBody>\n            </Table>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* User Detail Dialog */}\n      <Dialog open={!!selectedUser} onOpenChange={() => setSelectedUser(null)}>\n        <DialogContent data-testid=\"dialog-user-detail\">\n          <DialogHeader>\n            <DialogTitle>User Details</DialogTitle>\n            <DialogDescription>\n              Detailed information and actions for {selectedUser?.username}\n            </DialogDescription>\n          </DialogHeader>\n          {selectedUser && (\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Username</p>\n                  <p className=\"font-medium\">{selectedUser.username}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Email</p>\n                  <p className=\"font-medium\">{selectedUser.email}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Coin Balance</p>\n                  <p className=\"font-medium\">{selectedUser.coinBalance}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Reputation</p>\n                  <p className=\"font-medium\">{selectedUser.reputation}</p>\n                </div>\n              </div>\n              <div className=\"flex gap-2 flex-wrap\">\n                <Button\n                  onClick={() => {\n                    adjustCoinsMutation.mutate({ \n                      userId: selectedUser.id, \n                      amount: 100, \n                      reason: \"Admin adjustment\" \n                    });\n                    setSelectedUser(null);\n                  }}\n                  data-testid=\"button-add-coins\"\n                >\n                  <Coins className=\"h-4 w-4 mr-1\" />\n                  Add 100 Coins\n                </Button>\n              </div>\n            </div>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1562, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Content.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { CheckCircle, XCircle, Trash2, Eye } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\n// Type definitions for API responses\ninterface ContentItem {\n  id: number;\n  title: string;\n  type: string;\n  authorUsername: string;\n  status: string;\n  createdAt: string;\n}\n\nexport default function AdminContent() {\n  const [typeFilter, setTypeFilter] = useState(\"all\");\n  const [statusFilter, setStatusFilter] = useState(\"pending\");\n  const { toast } = useToast();\n\n  const { data: moderationQueueData, isLoading: queueLoading } = useQuery<ContentItem[]>({\n    queryKey: [\"/api/admin/content/moderation-queue\", { type: typeFilter, status: statusFilter }]\n  });\n\n  const moderationQueue: ContentItem[] = Array.isArray(moderationQueueData) ? moderationQueueData : [];\n\n  const { data: reportedContentData, isLoading: reportsLoading } = useQuery<ContentItem[]>({\n    queryKey: [\"/api/admin/content/reported\"]\n  });\n\n  const reportedContent: ContentItem[] = Array.isArray(reportedContentData) ? reportedContentData : [];\n\n  const approveMutation = useMutation({\n    mutationFn: async (contentId: number) => {\n      return apiRequest(\"POST\", `/api/admin/content/${contentId}/approve`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/content\"] });\n      toast({ title: \"Content approved successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to approve content\", variant: \"destructive\" });\n    }\n  });\n\n  const rejectMutation = useMutation({\n    mutationFn: async ({ contentId, reason }: { contentId: number; reason: string }) => {\n      return apiRequest(\"POST\", `/api/admin/content/${contentId}/reject`, { reason });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/content\"] });\n      toast({ title: \"Content rejected successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to reject content\", variant: \"destructive\" });\n    }\n  });\n\n  const deleteMutation = useMutation({\n    mutationFn: async (contentId: number) => {\n      return apiRequest(\"DELETE\", `/api/admin/content/${contentId}`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/content\"] });\n      toast({ title: \"Content deleted successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to delete content\", variant: \"destructive\" });\n    }\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between gap-4 flex-wrap\">\n        <h1 className=\"text-3xl font-bold\">Content Moderation</h1>\n      </div>\n\n      <Tabs defaultValue=\"queue\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"queue\" data-testid=\"tab-moderation-queue\">\n            Moderation Queue\n          </TabsTrigger>\n          <TabsTrigger value=\"reported\" data-testid=\"tab-reported-content\">\n            Reported Content\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"queue\" className=\"space-y-4\">\n          {/* Filters */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Filters</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"flex flex-col md:flex-row gap-4\">\n                <Select value={typeFilter} onValueChange={setTypeFilter}>\n                  <SelectTrigger className=\"w-full md:w-48\" data-testid=\"select-content-type\">\n                    <SelectValue placeholder=\"Content type\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"all\">All Types</SelectItem>\n                    <SelectItem value=\"thread\">Threads</SelectItem>\n                    <SelectItem value=\"reply\">Replies</SelectItem>\n                    <SelectItem value=\"ea\">EAs</SelectItem>\n                    <SelectItem value=\"article\">Articles</SelectItem>\n                  </SelectContent>\n                </Select>\n                <Select value={statusFilter} onValueChange={setStatusFilter}>\n                  <SelectTrigger className=\"w-full md:w-48\" data-testid=\"select-content-status\">\n                    <SelectValue placeholder=\"Status\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"pending\">Pending</SelectItem>\n                    <SelectItem value=\"approved\">Approved</SelectItem>\n                    <SelectItem value=\"rejected\">Rejected</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Moderation Queue Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Content Queue ({moderationQueue?.length || 0})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {queueLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Title</TableHead>\n                        <TableHead>Type</TableHead>\n                        <TableHead>Author</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Submitted</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {moderationQueue && moderationQueue.length > 0 ? (\n                        moderationQueue.map((content: any) => (\n                          <TableRow key={content.id} data-testid={`content-row-${content.id}`}>\n                            <TableCell data-testid={`content-title-${content.id}`}>\n                              {content.title || 'Untitled'}\n                            </TableCell>\n                            <TableCell>\n                              <Badge variant=\"outline\">{content.type}</Badge>\n                            </TableCell>\n                            <TableCell>{content.authorUsername}</TableCell>\n                            <TableCell>\n                              <Badge \n                                variant={\n                                  content.status === 'approved' ? 'default' : \n                                  content.status === 'rejected' ? 'destructive' : \n                                  'secondary'\n                                }\n                              >\n                                {content.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              {formatDistanceToNow(new Date(content.createdAt), { addSuffix: true })}\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex gap-2 flex-wrap\">\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  onClick={() => approveMutation.mutate(content.id)}\n                                  disabled={content.status === 'approved'}\n                                  data-testid={`button-approve-${content.id}`}\n                                >\n                                  <CheckCircle className=\"h-4 w-4 mr-1\" />\n                                  Approve\n                                </Button>\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"destructive\"\n                                  onClick={() => rejectMutation.mutate({ contentId: content.id, reason: \"Violates guidelines\" })}\n                                  disabled={content.status === 'rejected'}\n                                  data-testid={`button-reject-${content.id}`}\n                                >\n                                  <XCircle className=\"h-4 w-4 mr-1\" />\n                                  Reject\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\n                            No content in moderation queue\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"reported\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Reported Content ({reportedContent?.length || 0})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {reportsLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Content</TableHead>\n                        <TableHead>Reason</TableHead>\n                        <TableHead>Reporter</TableHead>\n                        <TableHead>Reports</TableHead>\n                        <TableHead>Reported</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {reportedContent && reportedContent.length > 0 ? (\n                        reportedContent.map((report: any) => (\n                          <TableRow key={report.id} data-testid={`report-row-${report.id}`}>\n                            <TableCell>{report.contentTitle || 'Content'}</TableCell>\n                            <TableCell>{report.reason}</TableCell>\n                            <TableCell>{report.reporterUsername}</TableCell>\n                            <TableCell>\n                              <Badge>{report.reportCount || 1}</Badge>\n                            </TableCell>\n                            <TableCell>\n                              {formatDistanceToNow(new Date(report.createdAt), { addSuffix: true })}\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex gap-2 flex-wrap\">\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  data-testid={`button-view-report-${report.id}`}\n                                >\n                                  <Eye className=\"h-4 w-4 mr-1\" />\n                                  View\n                                </Button>\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"destructive\"\n                                  onClick={() => deleteMutation.mutate(report.contentId)}\n                                  data-testid={`button-delete-reported-${report.id}`}\n                                >\n                                  <Trash2 className=\"h-4 w-4 mr-1\" />\n                                  Delete\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\n                            No reported content\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2434, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/AddContentDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Plus, Upload } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst addContentSchema = z.object({\n  type: z.enum([\"ea\", \"indicator\", \"article\", \"source_code\"]),\n  title: z.string().min(10, \"Title must be at least 10 characters\").max(120),\n  description: z.string().min(300, \"Description must be at least 300 characters\"),\n  category: z.string().min(1, \"Category is required\"),\n  priceCoins: z.number().min(0).max(10000),\n  isFree: z.boolean(),\n  platform: z.enum([\"MT4\", \"MT5\", \"Both\"]).optional(),\n  version: z.string().optional(),\n  tags: z.string().optional(),\n  license: z.string().optional(),\n  minDeposit: z.number().optional(),\n  hedging: z.boolean().optional(),\n  changelog: z.string().optional(),\n});\n\ntype AddContentFormData = z.infer<typeof addContentSchema>;\n\ninterface AddContentDialogProps {\n  trigger?: React.ReactNode;\n}\n\nexport default function AddContentDialog({ trigger }: AddContentDialogProps) {\n  const { toast } = useToast();\n  const [open, setOpen] = useState(false);\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n\n  const form = useForm<AddContentFormData>({\n    resolver: zodResolver(addContentSchema),\n    defaultValues: {\n      type: \"ea\",\n      title: \"\",\n      description: \"\",\n      category: \"\",\n      priceCoins: 0,\n      isFree: true,\n      platform: \"MT4\",\n      version: \"1.0\",\n      tags: \"\",\n      license: \"Standard\",\n      minDeposit: undefined,\n      hedging: false,\n      changelog: \"\",\n    },\n  });\n\n  const createContentMutation = useMutation({\n    mutationFn: async (data: AddContentFormData) => {\n      // Convert tags string to array\n      const tagsArray = data.tags\n        ? data.tags.split(\",\").map(tag => tag.trim()).filter(Boolean)\n        : [];\n\n      const payload = {\n        ...data,\n        tags: tagsArray,\n        // Set status to approved since admin is creating it\n        status: \"approved\",\n        files: [],\n        images: [],\n      };\n\n      const response = await apiRequest(\"POST\", \"/api/admin/content\", payload);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Content Created!\",\n        description: \"The marketplace content has been successfully added.\",\n      });\n      form.reset();\n      setSelectedTags([]);\n      setOpen(false);\n      // Invalidate all marketplace-related queries\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/stats\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/items\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/top-selling\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/revenue-chart\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/content\"] });\n    },\n    onError: (error: Error) => {\n      toast({\n        variant: \"destructive\",\n        title: \"Failed to Create Content\",\n        description: error.message || \"Could not create marketplace content. Please try again.\",\n      });\n    },\n  });\n\n  const onSubmit = (data: AddContentFormData) => {\n    createContentMutation.mutate(data);\n  };\n\n  const commonCategories = [\n    \"Expert Advisors\",\n    \"Indicators\",\n    \"Scripts\",\n    \"Templates\",\n    \"Trading Systems\",\n    \"Libraries\",\n    \"Utilities\",\n    \"Educational\",\n  ];\n\n  const commonTags = [\n    \"Scalping\",\n    \"Day Trading\",\n    \"Swing Trading\",\n    \"Grid\",\n    \"Martingale\",\n    \"Breakout\",\n    \"Trend Following\",\n    \"Mean Reversion\",\n    \"News Trading\",\n    \"High Frequency\",\n    \"Performance Report\",\n  ];\n\n  const handleTagToggle = (tag: string) => {\n    const newTags = selectedTags.includes(tag)\n      ? selectedTags.filter(t => t !== tag)\n      : [...selectedTags, tag];\n    \n    setSelectedTags(newTags);\n    form.setValue(\"tags\", newTags.join(\", \"));\n  };\n\n  const isFree = form.watch(\"isFree\");\n\n  useEffect(() => {\n    if (isFree) {\n      form.setValue(\"priceCoins\", 0);\n    }\n  }, [isFree, form]);\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        {trigger || (\n          <Button data-testid=\"button-add-content\">\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add Content\n          </Button>\n        )}\n      </DialogTrigger>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Add Marketplace Content</DialogTitle>\n          <DialogDescription>\n            Create new marketplace content (EA, Indicator, Article, or Source Code). All fields marked with * are required.\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {/* Content Type */}\n            <FormField\n              control={form.control}\n              name=\"type\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Content Type *</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-content-type\">\n                        <SelectValue />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"ea\">Expert Advisor (EA)</SelectItem>\n                      <SelectItem value=\"indicator\">Indicator</SelectItem>\n                      <SelectItem value=\"article\">Article</SelectItem>\n                      <SelectItem value=\"source_code\">Source Code</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Title */}\n            <FormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Title *</FormLabel>\n                  <FormControl>\n                    <Input\n                      placeholder=\"e.g., Gold Scalper Pro EA v2.5\"\n                      {...field}\n                      data-testid=\"input-content-title\"\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    {field.value.length}/120 characters\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Description */}\n            <FormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Description *</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Detailed description of the content, features, benefits, and usage instructions...\"\n                      className=\"min-h-[150px]\"\n                      {...field}\n                      data-testid=\"textarea-content-description\"\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    {field.value.length} characters (minimum 300)\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Category */}\n            <FormField\n              control={form.control}\n              name=\"category\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Category *</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value || undefined}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-category\">\n                        <SelectValue placeholder=\"Select a category...\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      {commonCategories.map((cat) => (\n                        <SelectItem key={cat} value={cat}>\n                          {cat}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Platform */}\n            <FormField\n              control={form.control}\n              name=\"platform\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Platform</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value || undefined}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-platform\">\n                        <SelectValue />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"MT4\">MT4</SelectItem>\n                      <SelectItem value=\"MT5\">MT5</SelectItem>\n                      <SelectItem value=\"Both\">Both MT4 & MT5</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Pricing */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"isFree\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\n                    <FormControl>\n                      <Checkbox\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                        data-testid=\"checkbox-is-free\"\n                      />\n                    </FormControl>\n                    <div className=\"space-y-1 leading-none\">\n                      <FormLabel>Free Content</FormLabel>\n                      <FormDescription>\n                        Check if this content is free\n                      </FormDescription>\n                    </div>\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"priceCoins\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Price (Coins) *</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        min={0}\n                        max={10000}\n                        disabled={isFree}\n                        {...field}\n                        onChange={(e) => field.onChange(parseInt(e.target.value) || 0)}\n                        data-testid=\"input-price-coins\"\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      0-10,000 coins\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Tags */}\n            <FormField\n              control={form.control}\n              name=\"tags\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Tags</FormLabel>\n                  <div className=\"flex flex-wrap gap-2 mb-3\">\n                    {commonTags.map((tag) => (\n                      <Badge\n                        key={tag}\n                        variant={selectedTags.includes(tag) ? \"default\" : \"outline\"}\n                        className=\"cursor-pointer\"\n                        onClick={() => handleTagToggle(tag)}\n                        data-testid={`tag-${tag.toLowerCase().replace(/\\s+/g, \"-\")}`}\n                      >\n                        {tag}\n                      </Badge>\n                    ))}\n                  </div>\n                  <FormControl>\n                    <Input\n                      placeholder=\"Or enter custom tags separated by commas...\"\n                      {...field}\n                      data-testid=\"input-tags\"\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    Click tags above or enter custom tags separated by commas (max 8)\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Version */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"version\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Version</FormLabel>\n                    <FormControl>\n                      <Input\n                        placeholder=\"e.g., 1.0, 2.5.1\"\n                        {...field}\n                        data-testid=\"input-version\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"license\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>License</FormLabel>\n                    <FormControl>\n                      <Input\n                        placeholder=\"e.g., Standard, Extended, GPL\"\n                        {...field}\n                        data-testid=\"input-license\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Optional Fields */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"minDeposit\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Minimum Deposit</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        placeholder=\"e.g., 100\"\n                        {...field}\n                        onChange={(e) => field.onChange(e.target.value ? parseInt(e.target.value) : undefined)}\n                        value={field.value || \"\"}\n                        data-testid=\"input-min-deposit\"\n                      />\n                    </FormControl>\n                    <FormDescription>Minimum account balance required</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"hedging\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4 mt-2\">\n                    <FormControl>\n                      <Checkbox\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                        data-testid=\"checkbox-hedging\"\n                      />\n                    </FormControl>\n                    <div className=\"space-y-1 leading-none\">\n                      <FormLabel>Supports Hedging</FormLabel>\n                      <FormDescription>\n                        Check if this EA supports hedging\n                      </FormDescription>\n                    </div>\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Changelog */}\n            <FormField\n              control={form.control}\n              name=\"changelog\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Changelog</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Version history and updates...\"\n                      className=\"min-h-[100px]\"\n                      {...field}\n                      data-testid=\"textarea-changelog\"\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    Document version changes and improvements\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Submit Buttons */}\n            <div className=\"flex gap-3 pt-4\">\n              <Button\n                type=\"submit\"\n                disabled={createContentMutation.isPending}\n                data-testid=\"button-submit-content\"\n              >\n                {createContentMutation.isPending ? \"Creating...\" : \"Create Content\"}\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => {\n                  form.reset();\n                  setSelectedTags([]);\n                  setOpen(false);\n                }}\n                data-testid=\"button-cancel\"\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 3553, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Marketplace.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { DollarSign, TrendingUp, Package, CheckCircle, XCircle } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport AddContentDialog from \"./AddContentDialog\";\n\ninterface MarketplaceStats {\n  totalItems: number;\n  pendingItems: number;\n  totalSales: number;\n  salesThisWeek: number;\n  totalRevenue: number;\n  revenueThisWeek: number;\n}\n\ninterface MarketplaceItem {\n  id: number;\n  title: string;\n  sellerUsername: string;\n  coinPrice: number;\n  sales: number;\n  status: string;\n  createdAt: string;\n}\n\ninterface TopSellingItem {\n  id: number;\n  title: string;\n  sales: number;\n  coinPrice: number;\n}\n\ninterface RevenueDataPoint {\n  date: string;\n  revenue: number;\n}\n\nexport default function AdminMarketplace() {\n  const { toast } = useToast();\n\n  const { data: statsRaw, isLoading: statsLoading } = useQuery<MarketplaceStats>({\n    queryKey: [\"/api/admin/marketplace/stats\"]\n  });\n\n  const stats: MarketplaceStats = statsRaw || {\n    totalItems: 0,\n    pendingItems: 0,\n    totalSales: 0,\n    salesThisWeek: 0,\n    totalRevenue: 0,\n    revenueThisWeek: 0\n  };\n\n  const { data: itemsRaw, isLoading: itemsLoading } = useQuery<MarketplaceItem[]>({\n    queryKey: [\"/api/admin/marketplace/items\"]\n  });\n\n  const items: MarketplaceItem[] = Array.isArray(itemsRaw) ? itemsRaw : [];\n\n  const { data: topSellingRaw, isLoading: topLoading } = useQuery<TopSellingItem[]>({\n    queryKey: [\"/api/admin/marketplace/top-selling\"]\n  });\n\n  const topSelling: TopSellingItem[] = Array.isArray(topSellingRaw) ? topSellingRaw : [];\n\n  const { data: revenueDataRaw, isLoading: revenueLoading } = useQuery<RevenueDataPoint[]>({\n    queryKey: [\"/api/admin/marketplace/revenue-chart\"]\n  });\n\n  const revenueData: RevenueDataPoint[] = Array.isArray(revenueDataRaw) ? revenueDataRaw : [];\n\n  const approveItemMutation = useMutation({\n    mutationFn: async (itemId: number) => {\n      return apiRequest(\"POST\", `/api/admin/marketplace/${itemId}/approve`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace\"] });\n      toast({ title: \"Item approved successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to approve item\", variant: \"destructive\" });\n    }\n  });\n\n  const rejectItemMutation = useMutation({\n    mutationFn: async (itemId: number) => {\n      return apiRequest(\"POST\", `/api/admin/marketplace/${itemId}/reject`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace\"] });\n      toast({ title: \"Item rejected successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to reject item\", variant: \"destructive\" });\n    }\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-3xl font-bold\">Marketplace Management</h1>\n        <AddContentDialog />\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card data-testid=\"card-total-items\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Items</CardTitle>\n            <Package className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-total-items\">\n                  {stats.totalItems}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {stats.pendingItems} pending approval\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-total-sales\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Sales</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-total-sales\">\n                  {stats.totalSales}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  +{stats.salesThisWeek} this week\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-total-revenue\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-marketplace-revenue\">\n                  ${stats.totalRevenue}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  +${stats.revenueThisWeek} this week\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Revenue Chart */}\n      <Card data-testid=\"card-revenue-chart\">\n        <CardHeader>\n          <CardTitle>Revenue Trend (Last 30 Days)</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {revenueLoading ? (\n            <Skeleton className=\"h-64\" />\n          ) : revenueData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <LineChart data={revenueData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"hsl(var(--primary))\" strokeWidth={2} />\n              </LineChart>\n            </ResponsiveContainer>\n          ) : (\n            <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n              No revenue data available\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Top Selling Items */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Top Selling Items</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {topLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(3)].map((_, i) => (\n                <Skeleton key={i} className=\"h-12\" />\n              ))}\n            </div>\n          ) : topSelling.length > 0 ? (\n            <div className=\"space-y-3\">\n              {topSelling.map((item, index) => (\n                <div key={item.id} className=\"flex items-center justify-between p-3 rounded-lg border\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"text-lg font-bold text-muted-foreground\">#{index + 1}</div>\n                    <div>\n                      <p className=\"font-medium\">{item.title}</p>\n                      <p className=\"text-sm text-muted-foreground\">{item.sales} sales</p>\n                    </div>\n                  </div>\n                  <Badge>{item.coinPrice} coins</Badge>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"text-muted-foreground text-center py-8\">No sales data available</p>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Marketplace Items Table */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Marketplace Items ({items.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {itemsLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(5)].map((_, i) => (\n                <Skeleton key={i} className=\"h-16\" />\n              ))}\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>Title</TableHead>\n                    <TableHead>Seller</TableHead>\n                    <TableHead>Price</TableHead>\n                    <TableHead>Sales</TableHead>\n                    <TableHead>Status</TableHead>\n                    <TableHead>Listed</TableHead>\n                    <TableHead>Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {items.length > 0 ? (\n                    items.map((item) => (\n                      <TableRow key={item.id} data-testid={`item-row-${item.id}`}>\n                        <TableCell data-testid={`item-title-${item.id}`}>\n                          {item.title}\n                        </TableCell>\n                        <TableCell>{item.sellerUsername}</TableCell>\n                        <TableCell>{item.coinPrice} coins</TableCell>\n                        <TableCell>{item.sales}</TableCell>\n                        <TableCell>\n                          <Badge variant={item.status === 'approved' ? 'default' : 'secondary'}>\n                            {item.status}\n                          </Badge>\n                        </TableCell>\n                        <TableCell>\n                          {formatDistanceToNow(new Date(item.createdAt), { addSuffix: true })}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex gap-2 flex-wrap\">\n                            <Button\n                              size=\"sm\"\n                              variant=\"outline\"\n                              onClick={() => approveItemMutation.mutate(item.id)}\n                              disabled={item.status === 'approved'}\n                              data-testid={`button-approve-item-${item.id}`}\n                            >\n                              <CheckCircle className=\"h-4 w-4 mr-1\" />\n                              Approve\n                            </Button>\n                            <Button\n                              size=\"sm\"\n                              variant=\"destructive\"\n                              onClick={() => rejectItemMutation.mutate(item.id)}\n                              disabled={item.status === 'rejected'}\n                              data-testid={`button-reject-item-${item.id}`}\n                            >\n                              <XCircle className=\"h-4 w-4 mr-1\" />\n                              Reject\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={7} className=\"text-center py-8 text-muted-foreground\">\n                        No marketplace items found\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4406, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Brokers.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { Search, CheckCircle, XCircle, AlertTriangle, Eye } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\n\n// Type definitions for API responses\ninterface Broker {\n  id: number;\n  name: string;\n  country?: string;\n  regulation?: string;\n  verified: boolean;\n  reviewCount?: number;\n  rating?: number;\n}\n\ninterface ScamReport {\n  id: number;\n  brokerName: string;\n  reporterUsername: string;\n  reason: string;\n  status: string;\n  createdAt: string;\n}\n\ninterface Review {\n  id: number;\n  brokerName: string;\n  reviewerUsername: string;\n  rating: number;\n  comment?: string;\n  createdAt: string;\n}\n\nexport default function AdminBrokers() {\n  const [search, setSearch] = useState(\"\");\n  const { toast } = useToast();\n\n  // Add explicit type annotations to ensure TypeScript knows the structure\n  const { data: brokersData, isLoading: brokersLoading } = useQuery<Broker[]>({\n    queryKey: [\"/api/admin/brokers\", { search }]\n  });\n\n  // Defensive programming: ensure arrays are always defined\n  const brokers: Broker[] = Array.isArray(brokersData) ? brokersData : [];\n\n  const { data: scamReportsData, isLoading: reportsLoading } = useQuery<ScamReport[]>({\n    queryKey: [\"/api/admin/brokers/scam-reports\"]\n  });\n\n  const scamReports: ScamReport[] = Array.isArray(scamReportsData) ? scamReportsData : [];\n\n  const { data: reviewsData, isLoading: reviewsLoading } = useQuery<Review[]>({\n    queryKey: [\"/api/admin/brokers/reviews\"]\n  });\n\n  const reviews: Review[] = Array.isArray(reviewsData) ? reviewsData : [];\n\n  const verifyBrokerMutation = useMutation({\n    mutationFn: async (brokerId: number) => {\n      return apiRequest(\"POST\", `/api/admin/brokers/${brokerId}/verify`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      toast({ title: \"Broker verified successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to verify broker\", variant: \"destructive\" });\n    }\n  });\n\n  const unverifyBrokerMutation = useMutation({\n    mutationFn: async (brokerId: number) => {\n      return apiRequest(\"POST\", `/api/admin/brokers/${brokerId}/unverify`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      toast({ title: \"Broker verification removed\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to unverify broker\", variant: \"destructive\" });\n    }\n  });\n\n  const resolveScamReportMutation = useMutation({\n    mutationFn: async ({ reportId, action }: { reportId: number; action: string }) => {\n      return apiRequest(\"POST\", `/api/admin/brokers/scam-reports/${reportId}/resolve`, { action });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      toast({ title: \"Scam report resolved\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to resolve report\", variant: \"destructive\" });\n    }\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold\">Broker Management</h1>\n\n      <Tabs defaultValue=\"brokers\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"brokers\" data-testid=\"tab-brokers\">\n            Brokers\n          </TabsTrigger>\n          <TabsTrigger value=\"scam-reports\" data-testid=\"tab-scam-reports\">\n            Scam Reports ({scamReports.length})\n          </TabsTrigger>\n          <TabsTrigger value=\"reviews\" data-testid=\"tab-broker-reviews\">\n            Reviews\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"brokers\" className=\"space-y-4\">\n          {/* Search */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Search Brokers</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"relative\">\n                <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n                <Input\n                  placeholder=\"Search by broker name...\"\n                  value={search}\n                  onChange={(e) => setSearch(e.target.value)}\n                  className=\"pl-9\"\n                  data-testid=\"input-broker-search\"\n                />\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Brokers Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Brokers ({brokers.length})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {brokersLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Broker Name</TableHead>\n                        <TableHead>Country</TableHead>\n                        <TableHead>Regulation</TableHead>\n                        <TableHead>Verified</TableHead>\n                        <TableHead>Reviews</TableHead>\n                        <TableHead>Rating</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {brokers.length > 0 ? (\n                        brokers.map((broker: Broker) => (\n                          <TableRow key={broker.id} data-testid={`broker-row-${broker.id}`}>\n                            <TableCell data-testid={`broker-name-${broker.id}`}>\n                              {broker.name}\n                            </TableCell>\n                            <TableCell>{broker.country || 'N/A'}</TableCell>\n                            <TableCell>\n                              {broker.regulation ? (\n                                <Badge variant=\"outline\">{broker.regulation}</Badge>\n                              ) : (\n                                <span className=\"text-muted-foreground\">N/A</span>\n                              )}\n                            </TableCell>\n                            <TableCell>\n                              <Badge variant={broker.verified ? 'default' : 'secondary'}>\n                                {broker.verified ? 'Verified' : 'Unverified'}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>{broker.reviewCount || 0}</TableCell>\n                            <TableCell>\n                              <Badge variant=\"outline\">\n                                {broker.rating ? broker.rating.toFixed(1) : 'N/A'}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex gap-2 flex-wrap\">\n                                {!broker.verified ? (\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"outline\"\n                                    onClick={() => verifyBrokerMutation.mutate(broker.id)}\n                                    data-testid={`button-verify-broker-${broker.id}`}\n                                  >\n                                    <CheckCircle className=\"h-4 w-4 mr-1\" />\n                                    Verify\n                                  </Button>\n                                ) : (\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"outline\"\n                                    onClick={() => unverifyBrokerMutation.mutate(broker.id)}\n                                    data-testid={`button-unverify-broker-${broker.id}`}\n                                  >\n                                    <XCircle className=\"h-4 w-4 mr-1\" />\n                                    Unverify\n                                  </Button>\n                                )}\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={7} className=\"text-center py-8 text-muted-foreground\">\n                            No brokers found\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"scam-reports\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Scam Reports ({scamReports.length})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {reportsLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Broker</TableHead>\n                        <TableHead>Reporter</TableHead>\n                        <TableHead>Reason</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Reported</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {scamReports.length > 0 ? (\n                        scamReports.map((report: ScamReport) => (\n                          <TableRow key={report.id} data-testid={`scam-report-${report.id}`}>\n                            <TableCell>{report.brokerName}</TableCell>\n                            <TableCell>{report.reporterUsername}</TableCell>\n                            <TableCell>{report.reason}</TableCell>\n                            <TableCell>\n                              <Badge variant={report.status === 'resolved' ? 'default' : 'destructive'}>\n                                {report.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              {formatDistanceToNow(new Date(report.createdAt), { addSuffix: true })}\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex gap-2 flex-wrap\">\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  onClick={() => resolveScamReportMutation.mutate({ \n                                    reportId: report.id, \n                                    action: 'verified' \n                                  })}\n                                  disabled={report.status === 'resolved'}\n                                  data-testid={`button-resolve-report-${report.id}`}\n                                >\n                                  <CheckCircle className=\"h-4 w-4 mr-1\" />\n                                  Resolve\n                                </Button>\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  data-testid={`button-view-report-${report.id}`}\n                                >\n                                  <Eye className=\"h-4 w-4 mr-1\" />\n                                  View\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\n                            No scam reports\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"reviews\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Recent Broker Reviews ({reviews.length})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {reviewsLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Broker</TableHead>\n                        <TableHead>Reviewer</TableHead>\n                        <TableHead>Rating</TableHead>\n                        <TableHead>Review</TableHead>\n                        <TableHead>Posted</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {reviews.length > 0 ? (\n                        reviews.map((review: Review) => (\n                          <TableRow key={review.id} data-testid={`review-row-${review.id}`}>\n                            <TableCell>{review.brokerName}</TableCell>\n                            <TableCell>{review.reviewerUsername}</TableCell>\n                            <TableCell>\n                              <Badge variant=\"outline\">{review.rating}/5</Badge>\n                            </TableCell>\n                            <TableCell className=\"max-w-xs truncate\">\n                              {review.comment || 'No comment'}\n                            </TableCell>\n                            <TableCell>\n                              {formatDistanceToNow(new Date(review.createdAt), { addSuffix: true })}\n                            </TableCell>\n                            <TableCell>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                data-testid={`button-view-review-${review.id}`}\n                              >\n                                <Eye className=\"h-4 w-4 mr-1\" />\n                                View\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\n                            No reviews found\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 5428, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Finance.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { DollarSign, TrendingDown, TrendingUp, Coins, CheckCircle, XCircle } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell } from \"recharts\";\n\nconst COLORS = ['hsl(var(--primary))', 'hsl(var(--secondary))', 'hsl(var(--accent))', 'hsl(var(--muted))'];\n\ninterface FinanceOverview {\n  totalRevenue: number;\n  revenueGrowth: number;\n  pendingWithdrawals: number;\n  pendingWithdrawalCount: number;\n  totalTransactions: number;\n  transactionsToday: number;\n  topEarner?: {\n    username: string;\n    earnings: number;\n  };\n}\n\ninterface Transaction {\n  id: string;\n  username: string;\n  type: string;\n  amount: number;\n  description?: string;\n  createdAt: string;\n}\n\ninterface Withdrawal {\n  id: number;\n  username: string;\n  amount: number;\n  method?: string;\n  walletAddress?: string;\n  createdAt: string;\n}\n\ninterface RevenueChartPoint {\n  date: string;\n  revenue: number;\n}\n\ninterface RevenueSourcePoint {\n  name: string;\n  value: number;\n}\n\nexport default function AdminFinance() {\n  const [periodFilter, setPeriodFilter] = useState(\"30d\");\n  const { toast } = useToast();\n\n  const { data: overviewRaw, isLoading: overviewLoading } = useQuery<FinanceOverview>({\n    queryKey: [\"/api/admin/finance/overview\"]\n  });\n\n  const overview: FinanceOverview = overviewRaw ?? {\n    totalRevenue: 0,\n    revenueGrowth: 0,\n    pendingWithdrawals: 0,\n    pendingWithdrawalCount: 0,\n    totalTransactions: 0,\n    transactionsToday: 0\n  };\n\n  const { data: transactionsRaw, isLoading: transactionsLoading } = useQuery<Transaction[]>({\n    queryKey: [\"/api/admin/finance/transactions\", { period: periodFilter }]\n  });\n\n  const transactions = Array.isArray(transactionsRaw) ? transactionsRaw : [];\n\n  const { data: withdrawalsRaw, isLoading: withdrawalsLoading } = useQuery<Withdrawal[]>({\n    queryKey: [\"/api/admin/finance/withdrawals/pending\"]\n  });\n\n  const withdrawals = Array.isArray(withdrawalsRaw) ? withdrawalsRaw : [];\n\n  const { data: revenueChartRaw, isLoading: chartLoading } = useQuery<RevenueChartPoint[]>({\n    queryKey: [\"/api/admin/finance/revenue-chart\", { period: periodFilter }]\n  });\n\n  const revenueChart = Array.isArray(revenueChartRaw) ? revenueChartRaw : [];\n\n  const { data: revenueBySourceRaw, isLoading: sourceLoading } = useQuery<RevenueSourcePoint[]>({\n    queryKey: [\"/api/admin/finance/revenue-by-source\"]\n  });\n\n  const revenueBySource = Array.isArray(revenueBySourceRaw) ? revenueBySourceRaw : [];\n\n  const approveWithdrawalMutation = useMutation({\n    mutationFn: async (withdrawalId: number) => {\n      return apiRequest(\"POST\", `/api/admin/finance/withdrawals/${withdrawalId}/approve`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/finance\"] });\n      toast({ title: \"Withdrawal approved successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to approve withdrawal\", variant: \"destructive\" });\n    }\n  });\n\n  const rejectWithdrawalMutation = useMutation({\n    mutationFn: async ({ withdrawalId, reason }: { withdrawalId: number; reason: string }) => {\n      return apiRequest(\"POST\", `/api/admin/finance/withdrawals/${withdrawalId}/reject`, { reason });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/finance\"] });\n      toast({ title: \"Withdrawal rejected successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to reject withdrawal\", variant: \"destructive\" });\n    }\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between gap-4 flex-wrap\">\n        <h1 className=\"text-3xl font-bold\">Finance Management</h1>\n        <Select value={periodFilter} onValueChange={setPeriodFilter}>\n          <SelectTrigger className=\"w-48\" data-testid=\"select-period-filter\">\n            <SelectValue placeholder=\"Select period\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"7d\">Last 7 Days</SelectItem>\n            <SelectItem value=\"30d\">Last 30 Days</SelectItem>\n            <SelectItem value=\"90d\">Last 90 Days</SelectItem>\n          </SelectContent>\n        </Select>\n      </div>\n\n      {/* Financial Overview Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n        <Card data-testid=\"card-total-revenue\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {overviewLoading ? (\n              <Skeleton className=\"h-8 w-24\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-finance-revenue\">\n                  ${overview.totalRevenue}\n                </div>\n                <p className=\"text-xs text-muted-foreground flex items-center gap-1\">\n                  <TrendingUp className=\"h-3 w-3\" />\n                  +{overview.revenueGrowth}% vs last period\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-pending-withdrawals\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Pending Withdrawals</CardTitle>\n            <TrendingDown className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {overviewLoading ? (\n              <Skeleton className=\"h-8 w-24\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-pending-withdrawals\">\n                  ${overview.pendingWithdrawals}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {overview.pendingWithdrawalCount} requests\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-total-transactions\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Transactions</CardTitle>\n            <Coins className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {overviewLoading ? (\n              <Skeleton className=\"h-8 w-24\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-total-transactions\">\n                  {overview.totalTransactions}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {overview.transactionsToday} today\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-top-earner\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Top Earner</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {overviewLoading ? (\n              <Skeleton className=\"h-8 w-24\" />\n            ) : (\n              <>\n                <div className=\"text-lg font-bold truncate\">\n                  {overview.topEarner?.username || 'N/A'}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  ${overview.topEarner?.earnings || 0} earned\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Charts Row */}\n      <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n        <Card data-testid=\"card-revenue-trend\">\n          <CardHeader>\n            <CardTitle>Revenue Trend</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {chartLoading ? (\n              <Skeleton className=\"h-64\" />\n            ) : revenueChart.length > 0 ? (\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <LineChart data={revenueChart}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"date\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"hsl(var(--primary))\" strokeWidth={2} />\n                </LineChart>\n              </ResponsiveContainer>\n            ) : (\n              <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n                No revenue data available\n              </div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-revenue-by-source\">\n          <CardHeader>\n            <CardTitle>Revenue by Source</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {sourceLoading ? (\n              <Skeleton className=\"h-64\" />\n            ) : revenueBySource.length > 0 ? (\n              <ResponsiveContainer width=\"100%\" height={250}>\n                <PieChart>\n                  <Pie\n                    data={revenueBySource}\n                    dataKey=\"value\"\n                    nameKey=\"name\"\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    outerRadius={80}\n                    label\n                  >\n                    {revenueBySource.map((entry, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                </PieChart>\n              </ResponsiveContainer>\n            ) : (\n              <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n                No source data available\n              </div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Pending Withdrawals */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Pending Withdrawals ({withdrawals.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {withdrawalsLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(5)].map((_, i) => (\n                <Skeleton key={i} className=\"h-16\" />\n              ))}\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>User</TableHead>\n                    <TableHead>Amount</TableHead>\n                    <TableHead>Method</TableHead>\n                    <TableHead>Wallet</TableHead>\n                    <TableHead>Requested</TableHead>\n                    <TableHead>Actions</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {withdrawals.length > 0 ? (\n                    withdrawals.map((withdrawal) => (\n                      <TableRow key={withdrawal.id} data-testid={`withdrawal-row-${withdrawal.id}`}>\n                        <TableCell data-testid={`withdrawal-user-${withdrawal.id}`}>\n                          {withdrawal.username}\n                        </TableCell>\n                        <TableCell data-testid={`withdrawal-amount-${withdrawal.id}`}>\n                          ${withdrawal.amount}\n                        </TableCell>\n                        <TableCell>\n                          <Badge variant=\"outline\">{withdrawal.method || 'USDT'}</Badge>\n                        </TableCell>\n                        <TableCell className=\"max-w-xs truncate\">\n                          {withdrawal.walletAddress || 'N/A'}\n                        </TableCell>\n                        <TableCell>\n                          {formatDistanceToNow(new Date(withdrawal.createdAt), { addSuffix: true })}\n                        </TableCell>\n                        <TableCell>\n                          <div className=\"flex gap-2 flex-wrap\">\n                            <Button\n                              size=\"sm\"\n                              variant=\"outline\"\n                              onClick={() => approveWithdrawalMutation.mutate(withdrawal.id)}\n                              data-testid={`button-approve-withdrawal-${withdrawal.id}`}\n                            >\n                              <CheckCircle className=\"h-4 w-4 mr-1\" />\n                              Approve\n                            </Button>\n                            <Button\n                              size=\"sm\"\n                              variant=\"destructive\"\n                              onClick={() => rejectWithdrawalMutation.mutate({ \n                                withdrawalId: withdrawal.id, \n                                reason: \"Manual rejection\" \n                              })}\n                              data-testid={`button-reject-withdrawal-${withdrawal.id}`}\n                            >\n                              <XCircle className=\"h-4 w-4 mr-1\" />\n                              Reject\n                            </Button>\n                          </div>\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={6} className=\"text-center py-8 text-muted-foreground\">\n                        No pending withdrawals\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Recent Transactions */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Transactions ({transactions.length})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {transactionsLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(5)].map((_, i) => (\n                <Skeleton key={i} className=\"h-16\" />\n              ))}\n            </div>\n          ) : (\n            <div className=\"overflow-x-auto\">\n              <Table>\n                <TableHeader>\n                  <TableRow>\n                    <TableHead>User</TableHead>\n                    <TableHead>Type</TableHead>\n                    <TableHead>Amount</TableHead>\n                    <TableHead>Description</TableHead>\n                    <TableHead>Date</TableHead>\n                  </TableRow>\n                </TableHeader>\n                <TableBody>\n                  {transactions.length > 0 ? (\n                    transactions.map((txn) => (\n                      <TableRow key={txn.id} data-testid={`transaction-row-${txn.id}`}>\n                        <TableCell>{txn.username}</TableCell>\n                        <TableCell>\n                          <Badge variant={txn.type === 'credit' ? 'default' : 'secondary'}>\n                            {txn.type}\n                          </Badge>\n                        </TableCell>\n                        <TableCell data-testid={`transaction-amount-${txn.id}`}>\n                          {txn.type === 'credit' ? '+' : '-'}{txn.amount} coins\n                        </TableCell>\n                        <TableCell className=\"max-w-xs truncate\">\n                          {txn.description || 'N/A'}\n                        </TableCell>\n                        <TableCell>\n                          {formatDistanceToNow(new Date(txn.createdAt), { addSuffix: true })}\n                        </TableCell>\n                      </TableRow>\n                    ))\n                  ) : (\n                    <TableRow>\n                      <TableCell colSpan={5} className=\"text-center py-8 text-muted-foreground\">\n                        No transactions found\n                      </TableCell>\n                    </TableRow>\n                  )}\n                </TableBody>\n              </Table>\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 6585, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/SitemapManagement.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { \n  RefreshCw, \n  CheckCircle2, \n  XCircle, \n  Clock, \n  Globe, \n  FileText,\n  ExternalLink,\n  AlertTriangle\n} from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface SitemapLog {\n  id: number;\n  action: string;\n  status: string;\n  urlCount: number | null;\n  submittedTo: string | null;\n  errorMessage: string | null;\n  createdAt: string;\n}\n\ninterface SitemapStatus {\n  lastGeneration: SitemapLog | null;\n  lastError: SitemapLog | null;\n  recentLogs: SitemapLog[];\n}\n\nexport default function SitemapManagement() {\n  const { toast } = useToast();\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  // Fetch status with auto-refresh every 30 seconds\n  const { data: status, isLoading } = useQuery<SitemapStatus>({\n    queryKey: ['/api/admin/sitemap/status'],\n    refetchInterval: 30000,\n  });\n\n  // Generate sitemap mutation\n  const generateMutation = useMutation({\n    mutationFn: async () => {\n      setIsGenerating(true);\n      const response = await apiRequest('POST', '/api/admin/sitemap/generate', {});\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setIsGenerating(false);\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/sitemap/status'] });\n      toast({\n        title: \"Sitemap Generated Successfully!\",\n        description: `${data.urlCount} URLs added. Submitted to search engines.`,\n      });\n    },\n    onError: (error) => {\n      setIsGenerating(false);\n      toast({\n        title: \"Failed to Generate Sitemap\",\n        description: error instanceof Error ? error.message : \"Unknown error\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const getActionBadge = (action: string) => {\n    switch (action) {\n      case 'generate':\n        return <Badge variant=\"outline\"><FileText className=\"w-3 h-3 mr-1\" />Generate</Badge>;\n      case 'submit_google':\n        return <Badge variant=\"outline\"><Globe className=\"w-3 h-3 mr-1\" />Google</Badge>;\n      case 'submit_indexnow':\n        return <Badge variant=\"outline\"><Globe className=\"w-3 h-3 mr-1\" />IndexNow</Badge>;\n      default:\n        return <Badge variant=\"outline\">{action}</Badge>;\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'success':\n        return <Badge variant=\"default\" className=\"bg-green-600\"><CheckCircle2 className=\"w-3 h-3 mr-1\" />Success</Badge>;\n      case 'error':\n        return <Badge variant=\"destructive\"><XCircle className=\"w-3 h-3 mr-1\" />Error</Badge>;\n      case 'pending':\n        return <Badge variant=\"secondary\"><Clock className=\"w-3 h-3 mr-1\" />Pending</Badge>;\n      default:\n        return <Badge>{status}</Badge>;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <Skeleton className=\"h-10 w-64\" />\n        <div className=\"grid gap-4 md:grid-cols-3\">\n          {[1, 2, 3].map(i => <Skeleton key={i} className=\"h-32\" />)}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Sitemap Management</h1>\n          <p className=\"text-muted-foreground\">Automated sitemap generation and search engine submission</p>\n        </div>\n        <Button \n          onClick={() => generateMutation.mutate()}\n          disabled={isGenerating}\n          size=\"lg\"\n          data-testid=\"button-generate-sitemap\"\n        >\n          {isGenerating ? (\n            <>\n              <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n              Generating...\n            </>\n          ) : (\n            <>\n              <RefreshCw className=\"w-4 h-4 mr-2\" />\n              Generate Now\n            </>\n          )}\n        </Button>\n      </div>\n\n      {/* Status Cards */}\n      <div className=\"grid gap-4 md:grid-cols-3\">\n        <Card data-testid=\"card-last-generation\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">Last Generation</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {status?.lastGeneration ? (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-url-count\">\n                  {status.lastGeneration.urlCount} URLs\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {formatDistanceToNow(new Date(status.lastGeneration.createdAt), { addSuffix: true })}\n                </p>\n              </>\n            ) : (\n              <p className=\"text-sm text-muted-foreground\">Never generated</p>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-automation-status\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">Automation Status</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center gap-2\">\n              <CheckCircle2 className=\"w-5 h-5 text-green-600\" />\n              <span className=\"font-semibold\">Active</span>\n            </div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Runs daily at 2:00 AM\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-sitemap-url\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">Sitemap URL</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <a \n              href=\"/sitemap.xml\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-sm text-blue-600 hover:underline flex items-center gap-1\"\n              data-testid=\"link-sitemap-xml\"\n            >\n              /sitemap.xml\n              <ExternalLink className=\"w-3 h-3\" />\n            </a>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Public sitemap file\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Error Alert */}\n      {status?.lastError && (\n        <Alert variant=\"destructive\" data-testid=\"alert-last-error\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>\n            <strong>Last Error:</strong> {status.lastError.errorMessage}\n            <br />\n            <span className=\"text-xs\">\n              {formatDistanceToNow(new Date(status.lastError.createdAt), { addSuffix: true })}\n            </span>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Recent Activity Log */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Activity</CardTitle>\n          <CardDescription>Last 20 sitemap operations</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Action</TableHead>\n                <TableHead>Status</TableHead>\n                <TableHead>URLs</TableHead>\n                <TableHead>Submitted To</TableHead>\n                <TableHead>Time</TableHead>\n                <TableHead>Details</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {status?.recentLogs && status.recentLogs.length > 0 ? (\n                status.recentLogs.map(log => (\n                  <TableRow key={log.id} data-testid={`row-log-${log.id}`}>\n                    <TableCell>{getActionBadge(log.action)}</TableCell>\n                    <TableCell>{getStatusBadge(log.status)}</TableCell>\n                    <TableCell>{log.urlCount || '-'}</TableCell>\n                    <TableCell>{log.submittedTo || '-'}</TableCell>\n                    <TableCell className=\"text-sm text-muted-foreground\">\n                      {formatDistanceToNow(new Date(log.createdAt), { addSuffix: true })}\n                    </TableCell>\n                    <TableCell className=\"text-sm text-muted-foreground\">\n                      {log.errorMessage ? (\n                        <span className=\"text-red-600 truncate max-w-xs block\">\n                          {log.errorMessage}\n                        </span>\n                      ) : (\n                        <span className=\"text-green-600\">OK</span>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={6} className=\"text-center text-muted-foreground\">\n                    No activity yet. Click \"Generate Now\" to create your first sitemap.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n\n      {/* Setup Instructions */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Setup Instructions</CardTitle>\n          <CardDescription>Configure your environment for optimal search engine submission</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div>\n            <h4 className=\"font-semibold mb-2\">1. IndexNow API Key (Bing & Yandex)</h4>\n            <p className=\"text-sm text-muted-foreground mb-2\">\n              Generate an API key and set <code className=\"bg-muted px-1 py-0.5 rounded\">INDEXNOW_API_KEY</code> environment variable.\n            </p>\n            <a \n              href=\"https://www.bing.com/indexnow/getstarted\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-sm text-blue-600 hover:underline inline-flex items-center gap-1\"\n            >\n              Get IndexNow Key <ExternalLink className=\"w-3 h-3\" />\n            </a>\n          </div>\n\n          <div>\n            <h4 className=\"font-semibold mb-2\">2. Add Sitemap to robots.txt</h4>\n            <p className=\"text-sm text-muted-foreground mb-2\">\n              Add this line to your <code className=\"bg-muted px-1 py-0.5 rounded\">/public/robots.txt</code>:\n            </p>\n            <code className=\"block bg-muted px-3 py-2 rounded text-sm\">\n              Sitemap: https://yoforex.net/sitemap.xml\n            </code>\n          </div>\n\n          <div>\n            <h4 className=\"font-semibold mb-2\">3. Verify in Search Console</h4>\n            <p className=\"text-sm text-muted-foreground\">\n              Submit your sitemap manually in{' '}\n              <a href=\"https://search.google.com/search-console\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                Google Search Console\n              </a>{' '}\n              and{' '}\n              <a href=\"https://www.bing.com/webmasters\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                Bing Webmaster Tools\n              </a>.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}