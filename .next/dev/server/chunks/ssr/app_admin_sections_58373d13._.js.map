{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/AddContentDialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation } from \"@tanstack/react-query\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Plus, Upload } from \"lucide-react\";\nimport { Badge } from \"@/components/ui/badge\";\n\nconst addContentSchema = z.object({\n  type: z.enum([\"ea\", \"indicator\", \"article\", \"source_code\"]),\n  title: z.string().min(10, \"Title must be at least 10 characters\").max(120),\n  description: z.string().min(300, \"Description must be at least 300 characters\"),\n  category: z.string().min(1, \"Category is required\"),\n  priceCoins: z.number().min(0).max(10000),\n  isFree: z.boolean(),\n  platform: z.enum([\"MT4\", \"MT5\", \"Both\"]).optional(),\n  version: z.string().optional(),\n  tags: z.string().optional(),\n  license: z.string().optional(),\n  minDeposit: z.number().optional(),\n  hedging: z.boolean().optional(),\n  changelog: z.string().optional(),\n});\n\ntype AddContentFormData = z.infer<typeof addContentSchema>;\n\ninterface AddContentDialogProps {\n  trigger?: React.ReactNode;\n}\n\nexport default function AddContentDialog({ trigger }: AddContentDialogProps) {\n  const { toast } = useToast();\n  const [open, setOpen] = useState(false);\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\n\n  const form = useForm<AddContentFormData>({\n    resolver: zodResolver(addContentSchema),\n    defaultValues: {\n      type: \"ea\",\n      title: \"\",\n      description: \"\",\n      category: \"\",\n      priceCoins: 0,\n      isFree: true,\n      platform: \"MT4\",\n      version: \"1.0\",\n      tags: \"\",\n      license: \"Standard\",\n      minDeposit: undefined,\n      hedging: false,\n      changelog: \"\",\n    },\n  });\n\n  const createContentMutation = useMutation({\n    mutationFn: async (data: AddContentFormData) => {\n      // Convert tags string to array\n      const tagsArray = data.tags\n        ? data.tags.split(\",\").map(tag => tag.trim()).filter(Boolean)\n        : [];\n\n      const payload = {\n        ...data,\n        tags: tagsArray,\n        // Set status to approved since admin is creating it\n        status: \"approved\",\n        files: [],\n        images: [],\n      };\n\n      const response = await apiRequest(\"POST\", \"/api/admin/content\", payload);\n      return response.json();\n    },\n    onSuccess: () => {\n      toast({\n        title: \"Content Created!\",\n        description: \"The marketplace content has been successfully added.\",\n      });\n      form.reset();\n      setSelectedTags([]);\n      setOpen(false);\n      // Invalidate all marketplace-related queries\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/stats\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/items\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/top-selling\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/revenue-chart\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/content\"] });\n    },\n    onError: (error: Error) => {\n      toast({\n        variant: \"destructive\",\n        title: \"Failed to Create Content\",\n        description: error.message || \"Could not create marketplace content. Please try again.\",\n      });\n    },\n  });\n\n  const onSubmit = (data: AddContentFormData) => {\n    createContentMutation.mutate(data);\n  };\n\n  const commonCategories = [\n    \"Expert Advisors\",\n    \"Indicators\",\n    \"Scripts\",\n    \"Templates\",\n    \"Trading Systems\",\n    \"Libraries\",\n    \"Utilities\",\n    \"Educational\",\n  ];\n\n  const commonTags = [\n    \"Scalping\",\n    \"Day Trading\",\n    \"Swing Trading\",\n    \"Grid\",\n    \"Martingale\",\n    \"Breakout\",\n    \"Trend Following\",\n    \"Mean Reversion\",\n    \"News Trading\",\n    \"High Frequency\",\n    \"Performance Report\",\n  ];\n\n  const handleTagToggle = (tag: string) => {\n    const newTags = selectedTags.includes(tag)\n      ? selectedTags.filter(t => t !== tag)\n      : [...selectedTags, tag];\n    \n    setSelectedTags(newTags);\n    form.setValue(\"tags\", newTags.join(\", \"));\n  };\n\n  const isFree = form.watch(\"isFree\");\n\n  useEffect(() => {\n    if (isFree) {\n      form.setValue(\"priceCoins\", 0);\n    }\n  }, [isFree, form]);\n\n  return (\n    <Dialog open={open} onOpenChange={setOpen}>\n      <DialogTrigger asChild>\n        {trigger || (\n          <Button data-testid=\"button-add-content\">\n            <Plus className=\"h-4 w-4 mr-2\" />\n            Add Content\n          </Button>\n        )}\n      </DialogTrigger>\n      <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n        <DialogHeader>\n          <DialogTitle>Add Marketplace Content</DialogTitle>\n          <DialogDescription>\n            Create new marketplace content (EA, Indicator, Article, or Source Code). All fields marked with * are required.\n          </DialogDescription>\n        </DialogHeader>\n\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n            {/* Content Type */}\n            <FormField\n              control={form.control}\n              name=\"type\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Content Type *</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-content-type\">\n                        <SelectValue />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"ea\">Expert Advisor (EA)</SelectItem>\n                      <SelectItem value=\"indicator\">Indicator</SelectItem>\n                      <SelectItem value=\"article\">Article</SelectItem>\n                      <SelectItem value=\"source_code\">Source Code</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Title */}\n            <FormField\n              control={form.control}\n              name=\"title\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Title *</FormLabel>\n                  <FormControl>\n                    <Input\n                      placeholder=\"e.g., Gold Scalper Pro EA v2.5\"\n                      {...field}\n                      data-testid=\"input-content-title\"\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    {field.value.length}/120 characters\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Description */}\n            <FormField\n              control={form.control}\n              name=\"description\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Description *</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Detailed description of the content, features, benefits, and usage instructions...\"\n                      className=\"min-h-[150px]\"\n                      {...field}\n                      data-testid=\"textarea-content-description\"\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    {field.value.length} characters (minimum 300)\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Category */}\n            <FormField\n              control={form.control}\n              name=\"category\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Category *</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value || undefined}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-category\">\n                        <SelectValue placeholder=\"Select a category...\" />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      {commonCategories.map((cat) => (\n                        <SelectItem key={cat} value={cat}>\n                          {cat}\n                        </SelectItem>\n                      ))}\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Platform */}\n            <FormField\n              control={form.control}\n              name=\"platform\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Platform</FormLabel>\n                  <Select onValueChange={field.onChange} value={field.value || undefined}>\n                    <FormControl>\n                      <SelectTrigger data-testid=\"select-platform\">\n                        <SelectValue />\n                      </SelectTrigger>\n                    </FormControl>\n                    <SelectContent>\n                      <SelectItem value=\"MT4\">MT4</SelectItem>\n                      <SelectItem value=\"MT5\">MT5</SelectItem>\n                      <SelectItem value=\"Both\">Both MT4 & MT5</SelectItem>\n                    </SelectContent>\n                  </Select>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Pricing */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"isFree\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4\">\n                    <FormControl>\n                      <Checkbox\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                        data-testid=\"checkbox-is-free\"\n                      />\n                    </FormControl>\n                    <div className=\"space-y-1 leading-none\">\n                      <FormLabel>Free Content</FormLabel>\n                      <FormDescription>\n                        Check if this content is free\n                      </FormDescription>\n                    </div>\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"priceCoins\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Price (Coins) *</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        min={0}\n                        max={10000}\n                        disabled={isFree}\n                        {...field}\n                        onChange={(e) => field.onChange(parseInt(e.target.value) || 0)}\n                        data-testid=\"input-price-coins\"\n                      />\n                    </FormControl>\n                    <FormDescription>\n                      0-10,000 coins\n                    </FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Tags */}\n            <FormField\n              control={form.control}\n              name=\"tags\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Tags</FormLabel>\n                  <div className=\"flex flex-wrap gap-2 mb-3\">\n                    {commonTags.map((tag) => (\n                      <Badge\n                        key={tag}\n                        variant={selectedTags.includes(tag) ? \"default\" : \"outline\"}\n                        className=\"cursor-pointer\"\n                        onClick={() => handleTagToggle(tag)}\n                        data-testid={`tag-${tag.toLowerCase().replace(/\\s+/g, \"-\")}`}\n                      >\n                        {tag}\n                      </Badge>\n                    ))}\n                  </div>\n                  <FormControl>\n                    <Input\n                      placeholder=\"Or enter custom tags separated by commas...\"\n                      {...field}\n                      data-testid=\"input-tags\"\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    Click tags above or enter custom tags separated by commas (max 8)\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Version */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"version\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Version</FormLabel>\n                    <FormControl>\n                      <Input\n                        placeholder=\"e.g., 1.0, 2.5.1\"\n                        {...field}\n                        data-testid=\"input-version\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"license\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>License</FormLabel>\n                    <FormControl>\n                      <Input\n                        placeholder=\"e.g., Standard, Extended, GPL\"\n                        {...field}\n                        data-testid=\"input-license\"\n                      />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Optional Fields */}\n            <div className=\"grid grid-cols-2 gap-4\">\n              <FormField\n                control={form.control}\n                name=\"minDeposit\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Minimum Deposit</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        placeholder=\"e.g., 100\"\n                        {...field}\n                        onChange={(e) => field.onChange(e.target.value ? parseInt(e.target.value) : undefined)}\n                        value={field.value || \"\"}\n                        data-testid=\"input-min-deposit\"\n                      />\n                    </FormControl>\n                    <FormDescription>Minimum account balance required</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"hedging\"\n                render={({ field }) => (\n                  <FormItem className=\"flex flex-row items-start space-x-3 space-y-0 rounded-md border p-4 mt-2\">\n                    <FormControl>\n                      <Checkbox\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                        data-testid=\"checkbox-hedging\"\n                      />\n                    </FormControl>\n                    <div className=\"space-y-1 leading-none\">\n                      <FormLabel>Supports Hedging</FormLabel>\n                      <FormDescription>\n                        Check if this EA supports hedging\n                      </FormDescription>\n                    </div>\n                  </FormItem>\n                )}\n              />\n            </div>\n\n            {/* Changelog */}\n            <FormField\n              control={form.control}\n              name=\"changelog\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Changelog</FormLabel>\n                  <FormControl>\n                    <Textarea\n                      placeholder=\"Version history and updates...\"\n                      className=\"min-h-[100px]\"\n                      {...field}\n                      data-testid=\"textarea-changelog\"\n                    />\n                  </FormControl>\n                  <FormDescription>\n                    Document version changes and improvements\n                  </FormDescription>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            {/* Submit Buttons */}\n            <div className=\"flex gap-3 pt-4\">\n              <Button\n                type=\"submit\"\n                disabled={createContentMutation.isPending}\n                data-testid=\"button-submit-content\"\n              >\n                {createContentMutation.isPending ? \"Creating...\" : \"Create Content\"}\n              </Button>\n              <Button\n                type=\"button\"\n                variant=\"outline\"\n                onClick={() => {\n                  form.reset();\n                  setSelectedTags([]);\n                  setOpen(false);\n                }}\n                data-testid=\"button-cancel\"\n              >\n                Cancel\n              </Button>\n            </div>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1123, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/SitemapManagement.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { \n  RefreshCw, \n  CheckCircle2, \n  XCircle, \n  Clock, \n  Globe, \n  FileText,\n  ExternalLink,\n  AlertTriangle\n} from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { apiRequest, queryClient } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\n\ninterface SitemapLog {\n  id: number;\n  action: string;\n  status: string;\n  urlCount: number | null;\n  submittedTo: string | null;\n  errorMessage: string | null;\n  createdAt: string;\n}\n\ninterface SitemapStatus {\n  lastGeneration: SitemapLog | null;\n  lastError: SitemapLog | null;\n  recentLogs: SitemapLog[];\n}\n\nexport default function SitemapManagement() {\n  const { toast } = useToast();\n  const [isGenerating, setIsGenerating] = useState(false);\n\n  // Fetch status with auto-refresh every 30 seconds\n  const { data: status, isLoading } = useQuery<SitemapStatus>({\n    queryKey: ['/api/admin/sitemap/status'],\n    refetchInterval: 30000,\n  });\n\n  // Generate sitemap mutation\n  const generateMutation = useMutation({\n    mutationFn: async () => {\n      setIsGenerating(true);\n      const response = await apiRequest('POST', '/api/admin/sitemap/generate', {});\n      return response.json();\n    },\n    onSuccess: (data) => {\n      setIsGenerating(false);\n      queryClient.invalidateQueries({ queryKey: ['/api/admin/sitemap/status'] });\n      toast({\n        title: \"Sitemap Generated Successfully!\",\n        description: `${data.urlCount} URLs added. Submitted to search engines.`,\n      });\n    },\n    onError: (error) => {\n      setIsGenerating(false);\n      toast({\n        title: \"Failed to Generate Sitemap\",\n        description: error instanceof Error ? error.message : \"Unknown error\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const getActionBadge = (action: string) => {\n    switch (action) {\n      case 'generate':\n        return <Badge variant=\"outline\"><FileText className=\"w-3 h-3 mr-1\" />Generate</Badge>;\n      case 'submit_google':\n        return <Badge variant=\"outline\"><Globe className=\"w-3 h-3 mr-1\" />Google</Badge>;\n      case 'submit_indexnow':\n        return <Badge variant=\"outline\"><Globe className=\"w-3 h-3 mr-1\" />IndexNow</Badge>;\n      default:\n        return <Badge variant=\"outline\">{action}</Badge>;\n    }\n  };\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'success':\n        return <Badge variant=\"default\" className=\"bg-green-600\"><CheckCircle2 className=\"w-3 h-3 mr-1\" />Success</Badge>;\n      case 'error':\n        return <Badge variant=\"destructive\"><XCircle className=\"w-3 h-3 mr-1\" />Error</Badge>;\n      case 'pending':\n        return <Badge variant=\"secondary\"><Clock className=\"w-3 h-3 mr-1\" />Pending</Badge>;\n      default:\n        return <Badge>{status}</Badge>;\n    }\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"space-y-6\">\n        <Skeleton className=\"h-10 w-64\" />\n        <div className=\"grid gap-4 md:grid-cols-3\">\n          {[1, 2, 3].map(i => <Skeleton key={i} className=\"h-32\" />)}\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Sitemap Management</h1>\n          <p className=\"text-muted-foreground\">Automated sitemap generation and search engine submission</p>\n        </div>\n        <Button \n          onClick={() => generateMutation.mutate()}\n          disabled={isGenerating}\n          size=\"lg\"\n          data-testid=\"button-generate-sitemap\"\n        >\n          {isGenerating ? (\n            <>\n              <RefreshCw className=\"w-4 h-4 mr-2 animate-spin\" />\n              Generating...\n            </>\n          ) : (\n            <>\n              <RefreshCw className=\"w-4 h-4 mr-2\" />\n              Generate Now\n            </>\n          )}\n        </Button>\n      </div>\n\n      {/* Status Cards */}\n      <div className=\"grid gap-4 md:grid-cols-3\">\n        <Card data-testid=\"card-last-generation\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">Last Generation</CardTitle>\n          </CardHeader>\n          <CardContent>\n            {status?.lastGeneration ? (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-url-count\">\n                  {status.lastGeneration.urlCount} URLs\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {formatDistanceToNow(new Date(status.lastGeneration.createdAt), { addSuffix: true })}\n                </p>\n              </>\n            ) : (\n              <p className=\"text-sm text-muted-foreground\">Never generated</p>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-automation-status\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">Automation Status</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"flex items-center gap-2\">\n              <CheckCircle2 className=\"w-5 h-5 text-green-600\" />\n              <span className=\"font-semibold\">Active</span>\n            </div>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Runs daily at 2:00 AM\n            </p>\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-sitemap-url\">\n          <CardHeader className=\"pb-3\">\n            <CardTitle className=\"text-sm font-medium\">Sitemap URL</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <a \n              href=\"/sitemap.xml\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-sm text-blue-600 hover:underline flex items-center gap-1\"\n              data-testid=\"link-sitemap-xml\"\n            >\n              /sitemap.xml\n              <ExternalLink className=\"w-3 h-3\" />\n            </a>\n            <p className=\"text-xs text-muted-foreground mt-1\">\n              Public sitemap file\n            </p>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Error Alert */}\n      {status?.lastError && (\n        <Alert variant=\"destructive\" data-testid=\"alert-last-error\">\n          <AlertTriangle className=\"h-4 w-4\" />\n          <AlertDescription>\n            <strong>Last Error:</strong> {status.lastError.errorMessage}\n            <br />\n            <span className=\"text-xs\">\n              {formatDistanceToNow(new Date(status.lastError.createdAt), { addSuffix: true })}\n            </span>\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Recent Activity Log */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Recent Activity</CardTitle>\n          <CardDescription>Last 20 sitemap operations</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Table>\n            <TableHeader>\n              <TableRow>\n                <TableHead>Action</TableHead>\n                <TableHead>Status</TableHead>\n                <TableHead>URLs</TableHead>\n                <TableHead>Submitted To</TableHead>\n                <TableHead>Time</TableHead>\n                <TableHead>Details</TableHead>\n              </TableRow>\n            </TableHeader>\n            <TableBody>\n              {status?.recentLogs && status.recentLogs.length > 0 ? (\n                status.recentLogs.map(log => (\n                  <TableRow key={log.id} data-testid={`row-log-${log.id}`}>\n                    <TableCell>{getActionBadge(log.action)}</TableCell>\n                    <TableCell>{getStatusBadge(log.status)}</TableCell>\n                    <TableCell>{log.urlCount || '-'}</TableCell>\n                    <TableCell>{log.submittedTo || '-'}</TableCell>\n                    <TableCell className=\"text-sm text-muted-foreground\">\n                      {formatDistanceToNow(new Date(log.createdAt), { addSuffix: true })}\n                    </TableCell>\n                    <TableCell className=\"text-sm text-muted-foreground\">\n                      {log.errorMessage ? (\n                        <span className=\"text-red-600 truncate max-w-xs block\">\n                          {log.errorMessage}\n                        </span>\n                      ) : (\n                        <span className=\"text-green-600\">OK</span>\n                      )}\n                    </TableCell>\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell colSpan={6} className=\"text-center text-muted-foreground\">\n                    No activity yet. Click \"Generate Now\" to create your first sitemap.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </CardContent>\n      </Card>\n\n      {/* Setup Instructions */}\n      <Card>\n        <CardHeader>\n          <CardTitle>Setup Instructions</CardTitle>\n          <CardDescription>Configure your environment for optimal search engine submission</CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <div>\n            <h4 className=\"font-semibold mb-2\">1. IndexNow API Key (Bing & Yandex)</h4>\n            <p className=\"text-sm text-muted-foreground mb-2\">\n              Generate an API key and set <code className=\"bg-muted px-1 py-0.5 rounded\">INDEXNOW_API_KEY</code> environment variable.\n            </p>\n            <a \n              href=\"https://www.bing.com/indexnow/getstarted\" \n              target=\"_blank\" \n              rel=\"noopener noreferrer\"\n              className=\"text-sm text-blue-600 hover:underline inline-flex items-center gap-1\"\n            >\n              Get IndexNow Key <ExternalLink className=\"w-3 h-3\" />\n            </a>\n          </div>\n\n          <div>\n            <h4 className=\"font-semibold mb-2\">2. Add Sitemap to robots.txt</h4>\n            <p className=\"text-sm text-muted-foreground mb-2\">\n              Add this line to your <code className=\"bg-muted px-1 py-0.5 rounded\">/public/robots.txt</code>:\n            </p>\n            <code className=\"block bg-muted px-3 py-2 rounded text-sm\">\n              Sitemap: https://yoforex.net/sitemap.xml\n            </code>\n          </div>\n\n          <div>\n            <h4 className=\"font-semibold mb-2\">3. Verify in Search Console</h4>\n            <p className=\"text-sm text-muted-foreground\">\n              Submit your sitemap manually in{' '}\n              <a href=\"https://search.google.com/search-console\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                Google Search Console\n              </a>{' '}\n              and{' '}\n              <a href=\"https://www.bing.com/webmasters\" target=\"_blank\" rel=\"noopener noreferrer\" className=\"text-blue-600 hover:underline\">\n                Bing Webmaster Tools\n              </a>.\n            </p>\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}