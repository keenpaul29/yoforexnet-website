{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 14, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/thread/%5Bslug%5D/page.tsx"],"sourcesContent":["import type { Metadata } from 'next';\nimport { notFound } from 'next/navigation';\nimport { NextResponse } from 'next/server';\nimport { headers } from 'next/headers';\nimport type { ForumThread, ForumReply } from '@shared/schema';\nimport ThreadDetailClient from './ThreadDetailClient';\nimport { getThreadUrl } from '@/lib/category-path';\n\ninterface PageProps {\n  params: Promise<{ slug: string }>;\n}\n\nasync function fetchData(url: string) {\n  try {\n    const expressUrl = process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000';\n    const res = await fetch(`${expressUrl}${url}`, {\n      cache: 'no-store',\n      headers: {\n        'Accept': 'application/json',\n      },\n    });\n    \n    if (!res.ok) {\n      console.error(`Failed to fetch ${url}:`, res.status, res.statusText);\n      return null;\n    }\n    \n    return await res.json();\n  } catch (error) {\n    console.error(`Error fetching ${url}:`, error);\n    return null;\n  }\n}\n\nfunction stripHtml(html: string): string {\n  return html.replace(/<[^>]*>/g, '').replace(/&nbsp;/g, ' ').trim();\n}\n\nfunction createExcerpt(html: string, maxLength: number = 155): string {\n  const text = stripHtml(html);\n  if (text.length <= maxLength) return text;\n  return text.substring(0, maxLength).trim() + '...';\n}\n\nexport async function generateMetadata({ params }: PageProps): Promise<Metadata> {\n  const { slug } = await params;\n  const thread: ForumThread | null = await fetchData(`/api/threads/slug/${slug}`);\n\n  if (!thread) {\n    return {\n      title: 'Thread Not Found - YoForex',\n      description: 'The thread you are looking for does not exist.',\n    };\n  }\n\n  const description = thread.metaDescription || createExcerpt(thread.body || '');\n  const title = `${thread.title} - YoForex Forum`;\n\n  return {\n    title,\n    description,\n    keywords: [\n      thread.categorySlug || 'forum',\n      'EA discussion',\n      'forex forum',\n      'expert advisor',\n      'trading discussion',\n      'MT4',\n      'MT5',\n    ],\n    openGraph: {\n      title,\n      description,\n      type: 'article',\n      url: `https://yoforex.com/thread/${slug}`,\n      siteName: 'YoForex',\n    },\n    twitter: {\n      card: 'summary_large_image',\n      title,\n      description,\n    },\n  };\n}\n\nexport default async function ThreadDetailPage({ params }: PageProps) {\n  const { slug } = await params;\n  \n  // Fetch thread data from Express API\n  const thread: ForumThread | null = await fetchData(`/api/threads/slug/${slug}`);\n  \n  // Return 404 if thread doesn't exist\n  if (!thread) {\n    notFound();\n  }\n  \n  // Generate hierarchical URL and redirect (301)\n  const hierarchicalUrl = await getThreadUrl(thread);\n  \n  // Use NextResponse.redirect with 301 status for permanent redirect (SEO)\n  const headersList = await headers();\n  const host = headersList.get('host') || 'localhost:5000';\n  const protocol = process.env.NODE_ENV === 'production' ? 'https' : 'http';\n  const baseUrl = `${protocol}://${host}`;\n  return NextResponse.redirect(new URL(hierarchicalUrl, baseUrl), 301);\n}\n"],"names":[],"mappings":";;;;;;AACA;AAAA;AACA;AACA;;;;;;;;;;AASA,eAAe,UAAU,GAAW;IAClC,IAAI;QACF,MAAM,aAAa,6DAAuC;QAC1D,MAAM,MAAM,MAAM,MAAM,GAAG,aAAa,KAAK,EAAE;YAC7C,OAAO;YACP,SAAS;gBACP,UAAU;YACZ;QACF;QAEA,IAAI,CAAC,IAAI,EAAE,EAAE;YACX,QAAQ,KAAK,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC,EAAE,IAAI,MAAM,EAAE,IAAI,UAAU;YACnE,OAAO;QACT;QAEA,OAAO,MAAM,IAAI,IAAI;IACvB,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC,EAAE;QACxC,OAAO;IACT;AACF;AAEA,SAAS,UAAU,IAAY;IAC7B,OAAO,KAAK,OAAO,CAAC,YAAY,IAAI,OAAO,CAAC,WAAW,KAAK,IAAI;AAClE;AAEA,SAAS,cAAc,IAAY,EAAE,YAAoB,GAAG;IAC1D,MAAM,OAAO,UAAU;IACvB,IAAI,KAAK,MAAM,IAAI,WAAW,OAAO;IACrC,OAAO,KAAK,SAAS,CAAC,GAAG,WAAW,IAAI,KAAK;AAC/C;AAEO,eAAe,iBAAiB,EAAE,MAAM,EAAa;IAC1D,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;IACvB,MAAM,SAA6B,MAAM,UAAU,CAAC,kBAAkB,EAAE,MAAM;IAE9E,IAAI,CAAC,QAAQ;QACX,OAAO;YACL,OAAO;YACP,aAAa;QACf;IACF;IAEA,MAAM,cAAc,OAAO,eAAe,IAAI,cAAc,OAAO,IAAI,IAAI;IAC3E,MAAM,QAAQ,GAAG,OAAO,KAAK,CAAC,gBAAgB,CAAC;IAE/C,OAAO;QACL;QACA;QACA,UAAU;YACR,OAAO,YAAY,IAAI;YACvB;YACA;YACA;YACA;YACA;YACA;SACD;QACD,WAAW;YACT;YACA;YACA,MAAM;YACN,KAAK,CAAC,2BAA2B,EAAE,MAAM;YACzC,UAAU;QACZ;QACA,SAAS;YACP,MAAM;YACN;YACA;QACF;IACF;AACF;AAEe,eAAe,iBAAiB,EAAE,MAAM,EAAa;IAClE,MAAM,EAAE,IAAI,EAAE,GAAG,MAAM;IAEvB,qCAAqC;IACrC,MAAM,SAA6B,MAAM,UAAU,CAAC,kBAAkB,EAAE,MAAM;IAE9E,qCAAqC;IACrC,IAAI,CAAC,QAAQ;QACX,IAAA,iMAAQ;IACV;IAEA,+CAA+C;IAC/C,MAAM,kBAAkB,MAAM,aAAa;IAE3C,yEAAyE;IACzE,MAAM,cAAc,MAAM,IAAA,0IAAO;IACjC,MAAM,OAAO,YAAY,GAAG,CAAC,WAAW;IACxC,MAAM,WAAW,sCAAwC,0BAAU;IACnE,MAAM,UAAU,GAAG,SAAS,GAAG,EAAE,MAAM;IACvC,OAAO,8IAAY,CAAC,QAAQ,CAAC,IAAI,IAAI,iBAAiB,UAAU;AAClE","debugId":null}}]
}