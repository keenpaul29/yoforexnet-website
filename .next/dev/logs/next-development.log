[00:00:01.057] Server  LOG      ✓ Ready in 693ms
[00:00:02.338] Server  WARN     ⚠ Cross origin request detected from 87945529-0b43-4f9c-9b13-1739264a6781-00-2zprv3dqpksyc.janeway.replit.dev to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
[00:00:02.666] Browser LOG     [Activity Tracker] User active for 26 seconds
[00:00:02.666] Browser LOG     [Activity Tracker] User active for 27 seconds
[00:00:02.666] Browser LOG     [Activity Tracker] User active for 28 seconds
[00:00:02.666] Browser LOG     [Activity Tracker] User active for 29 seconds
[00:00:02.666] Browser LOG     [Activity Tracker] User active for 30 seconds
[00:00:02.666] Browser LOG     [Activity Tracker] User active for 31 seconds
[00:00:02.666] Browser LOG     [Activity Tracker] User active for 32 seconds
[00:00:03.482] Browser LOG     [Activity Tracker] User active for 33 seconds
[00:00:04.567] Browser LOG     [Activity Tracker] User active for 34 seconds
[00:00:05.402] Browser LOG     [Activity Tracker] User active for 35 seconds
[00:00:05.682] Server  LOG      ○ Compiling /dashboard ...
[00:00:06.363] Browser LOG     [Activity Tracker] User active for 36 seconds
[00:00:07.371] Browser LOG     [Activity Tracker] User active for 37 seconds
[00:00:08.381] Browser LOG     [Activity Tracker] User active for 38 seconds
[00:00:09.384] Browser LOG     [Activity Tracker] User active for 39 seconds
[00:00:10.382] Browser LOG     [Activity Tracker] User active for 40 seconds
[00:00:11.385] Browser LOG     [Activity Tracker] User active for 41 seconds
[00:00:12.763] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:12.809] Browser LOG     [Activity Tracker] User active for 42 seconds
[00:00:13.363] Browser LOG     [Activity Tracker] User active for 43 seconds
[00:00:16.496] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackBoundary notFound={undefined} forbidden={undefined} unauthorized={undefined}>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/dashboard" tree={[...]} params={{}} cacheNode={{lazyData:null, ...}} ...>
            <SegmentViewNode type="page" pagePath="dashboard/...">
              <SegmentTrieNode>
              <DashboardPage>
                <DashboardClient>
                  <div className="min-h-scre...">
                    <Header>
                    <main>
                    <EnhancedFooter>
                      <footer className="border-t m...">
                        <div className="container ...">
                          <div>
                          <div className="border-t p...">
                            <p>
                            <div className="flex flex-...">
                              <p>
                              <p>
+                               1761726578690
-                               1761726619287
            ...
          ...

[00:00:18.645] Browser LOG     [Activity Tracker] User active for 0 seconds
[00:00:19.662] Browser LOG     [Activity Tracker] User active for 1 seconds
[00:00:20.663] Browser LOG     [Activity Tracker] User active for 2 seconds
[00:00:21.665] Browser LOG     [Activity Tracker] User active for 3 seconds
[00:00:22.663] Browser LOG     [Activity Tracker] User active for 4 seconds
[00:00:23.649] Browser LOG     [Activity Tracker] User active for 5 seconds
[00:00:24.668] Browser LOG     [Activity Tracker] User active for 6 seconds
[00:00:25.667] Browser LOG     [Activity Tracker] User active for 7 seconds
[00:00:26.657] Browser LOG     [Activity Tracker] User active for 8 seconds
[00:00:27.658] Browser LOG     [Activity Tracker] User active for 9 seconds
[00:00:28.664] Browser LOG     [Activity Tracker] User active for 10 seconds
[00:00:29.667] Browser LOG     [Activity Tracker] User active for 11 seconds
[00:00:30.651] Browser LOG     [Activity Tracker] User active for 12 seconds
[00:00:31.667] Browser LOG     [Activity Tracker] User active for 13 seconds
[00:00:32.656] Browser LOG     [Activity Tracker] User active for 14 seconds
[00:00:33.669] Browser LOG     [Activity Tracker] User active for 15 seconds
[00:00:34.671] Browser LOG     [Activity Tracker] User active for 16 seconds
[00:00:35.657] Browser LOG     [Activity Tracker] User active for 17 seconds
[00:00:36.670] Browser LOG     [Activity Tracker] User active for 18 seconds
[00:00:37.656] Browser LOG     [Activity Tracker] User active for 19 seconds
[00:00:38.650] Browser LOG     [Activity Tracker] User active for 20 seconds
[00:00:39.657] Browser LOG     [Activity Tracker] User active for 21 seconds
[00:00:40.657] Browser LOG     [Activity Tracker] User active for 22 seconds
[00:00:41.671] Browser LOG     [Activity Tracker] User active for 23 seconds
[00:00:42.658] Browser LOG     [Activity Tracker] User active for 24 seconds
[00:00:43.657] Browser LOG     [Activity Tracker] User active for 25 seconds
[00:00:44.657] Browser LOG     [Activity Tracker] User active for 26 seconds
[00:00:45.658] Browser LOG     [Activity Tracker] User active for 27 seconds
[00:00:46.662] Browser LOG     [Activity Tracker] User active for 28 seconds
[00:00:47.662] Browser LOG     [Activity Tracker] User active for 29 seconds
[00:00:48.664] Browser LOG     [Activity Tracker] User active for 30 seconds
[00:00:49.663] Browser LOG     [Activity Tracker] User active for 31 seconds
[00:00:50.661] Browser LOG     [Activity Tracker] User active for 32 seconds
[00:00:51.662] Browser LOG     [Activity Tracker] User active for 33 seconds
[00:00:52.665] Browser LOG     [Activity Tracker] User active for 34 seconds
[00:00:53.666] Browser LOG     [Activity Tracker] User active for 35 seconds
[00:00:54.664] Browser LOG     [Activity Tracker] User active for 36 seconds
[00:00:55.666] Browser LOG     [Activity Tracker] User active for 37 seconds
[00:00:56.650] Browser LOG     [Activity Tracker] User active for 38 seconds
[00:00:57.662] Browser LOG     [Activity Tracker] User active for 39 seconds
[00:00:58.651] Browser LOG     [Activity Tracker] User active for 40 seconds
[00:00:59.667] Browser LOG     [Activity Tracker] User active for 41 seconds
[00:01:00.669] Browser LOG     [Activity Tracker] User active for 42 seconds
[00:01:01.671] Browser LOG     [Activity Tracker] User active for 43 seconds
[00:01:02.657] Browser LOG     [Activity Tracker] User active for 44 seconds
[00:01:03.661] Browser LOG     [Activity Tracker] User active for 45 seconds
[00:01:04.667] Browser LOG     [Activity Tracker] User active for 46 seconds
[00:01:05.669] Browser LOG     [Activity Tracker] User active for 47 seconds
[00:01:06.656] Browser LOG     [Activity Tracker] User active for 48 seconds
[00:01:07.656] Browser LOG     [Activity Tracker] User active for 49 seconds
[00:01:08.656] Browser LOG     [Activity Tracker] User active for 50 seconds
[00:01:09.657] Browser LOG     [Activity Tracker] User active for 51 seconds
[00:01:12.549] Browser LOG     [Activity Tracker] User active for 53 seconds
[00:01:14.186] Browser LOG     [Activity Tracker] User active for 55 seconds
[00:01:14.660] Browser LOG     [Activity Tracker] User active for 56 seconds
[00:01:15.650] Browser LOG     [Activity Tracker] User active for 57 seconds
[00:01:16.665] Browser LOG     [Activity Tracker] User active for 58 seconds
[00:01:17.660] Browser LOG     [Activity Tracker] User active for 59 seconds
[00:01:18.661] Browser LOG     [Activity Tracker] User active for 60 seconds
[00:01:19.656] Browser LOG     [Activity Tracker] User active for 61 seconds
[00:01:21.533] Browser LOG     [Activity Tracker] User active for 62 seconds
[00:01:21.659] Browser LOG     [Activity Tracker] User active for 63 seconds
[00:01:24.556] Browser LOG     [Activity Tracker] User active for 65 seconds
[00:01:26.544] Browser LOG     [Activity Tracker] User active for 66 seconds
[00:01:27.557] Browser LOG     [Activity Tracker] User active for 68 seconds
[00:01:29.553] Browser LOG     [Activity Tracker] User active for 70 seconds
[00:01:31.556] Browser LOG     [Activity Tracker] User active for 72 seconds
[00:01:32.557] Browser LOG     [Activity Tracker] User active for 73 seconds
[00:01:34.554] Browser LOG     [Activity Tracker] User active for 75 seconds
[00:01:36.552] Browser LOG     [Activity Tracker] User active for 77 seconds
[00:01:37.551] Browser LOG     [Activity Tracker] User active for 78 seconds
[00:01:39.550] Browser LOG     [Activity Tracker] User active for 80 seconds
[00:01:41.553] Browser LOG     [Activity Tracker] User active for 82 seconds
[00:01:41.658] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:01:41.665] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:01:41.666] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:01:41.667] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:01:41.667] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:01:41.668] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:01:41.669] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:01:42.393] Server  WARN     ⚠ Cross origin request detected from 127.0.0.1 to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
[00:01:42.439] Browser INFO    %cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools font-weight:bold
[00:01:42.555] Browser LOG     [Activity Tracker] User active for 83 seconds
[00:01:43.059] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<SegmentViewNode>} forbidden={undefined} ...>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/" tree={[...]} params={{}} cacheNode={{lazyData:null, ...}} segmentPath={[...]} ...>
            <SegmentViewNode type="page" pagePath="page.tsx">
              <SegmentTrieNode>
              <HomePage>
                <HomeClient initialStats={{totalThreads:0, ...}} initialCategories={[...]} initialThreads={[...]}>
                  <div className="min-h-scre...">
                    <Header>
                    <StatsBar>
                    <main>
                    <EnhancedFooter>
                      <footer className="border-t m...">
                        <div className="container ...">
                          <div>
                          <div className="border-t p...">
                            <p>
                            <div className="flex flex-...">
                              <p>
                              <p>
+                               1761726708839
-                               1761726707991
            ...
          ...

[00:01:44.549] Browser LOG     [Activity Tracker] User active for 85 seconds
[00:01:46.547] Browser LOG     [Activity Tracker] User active for 87 seconds
[00:01:47.545] Browser LOG     [Activity Tracker] User active for 88 seconds
[00:01:49.544] Browser LOG     [Activity Tracker] User active for 90 seconds
[00:01:58.622] Browser LOG     [Activity Tracker] User active for 0 seconds
[00:01:59.636] Browser LOG     [Activity Tracker] User active for 1 seconds
[00:02:00.634] Browser LOG     [Activity Tracker] User active for 2 seconds
[00:02:01.636] Browser LOG     [Activity Tracker] User active for 3 seconds
[00:02:02.638] Browser LOG     [Activity Tracker] User active for 4 seconds
[00:02:03.642] Browser LOG     [Activity Tracker] User active for 5 seconds
[00:02:04.629] Browser LOG     [Activity Tracker] User active for 6 seconds
[00:02:05.648] Browser LOG     [Activity Tracker] User active for 7 seconds
[00:02:06.636] Browser LOG     [Activity Tracker] User active for 8 seconds
[00:02:07.635] Browser LOG     [Activity Tracker] User active for 9 seconds
[00:02:08.632] Browser LOG     [Activity Tracker] User active for 10 seconds
[00:02:09.635] Browser LOG     [Activity Tracker] User active for 11 seconds
[00:02:10.640] Browser LOG     [Activity Tracker] User active for 12 seconds
[00:02:11.656] Browser LOG     [Activity Tracker] User active for 13 seconds
[00:02:12.631] Browser LOG     [Activity Tracker] User active for 14 seconds
[00:02:13.641] Browser LOG     [Activity Tracker] User active for 15 seconds
[00:02:14.642] Browser LOG     [Activity Tracker] User active for 16 seconds
[00:02:15.625] Browser LOG     [Activity Tracker] User active for 17 seconds
[00:02:16.638] Browser LOG     [Activity Tracker] User active for 18 seconds
[00:02:17.630] Browser LOG     [Activity Tracker] User active for 19 seconds
[00:02:18.127] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:02:18.127] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/me
[00:02:18.193] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:02:18.194] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/publish/categories
[00:02:18.638] Browser LOG     [Activity Tracker] User active for 20 seconds
[00:02:22.473] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackBoundary notFound={undefined} forbidden={undefined} unauthorized={undefined}>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/publish" tree={[...]} params={{}} cacheNode={{lazyData:null, ...}} segmentPath={[...]} ...>
            <SegmentViewNode type="page" pagePath="publish/pa...">
              <SegmentTrieNode>
              <PublishPage>
                <PublishClient initialCategories={[...]}>
                  <div className="min-h-scre...">
                    <Header>
                    <main>
                    <EnhancedFooter>
                      <footer className="border-t m...">
                        <div className="container ...">
                          <div>
                          <div className="border-t p...">
                            <p>
                            <div className="flex flex-...">
                              <p>
                              <p>
+                               1761726704014
-                               1761726744456
            ...
          ...

[00:02:22.473] Browser LOG     [Activity Tracker] User active for 0 seconds
[00:02:23.462] Browser LOG     [Activity Tracker] User active for 1 seconds
[00:02:24.479] Browser LOG     [Activity Tracker] User active for 2 seconds
[00:02:25.233] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:02:25.233] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:02:25.234] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:02:25.234] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:02:25.235] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:02:25.236] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:02:28.737] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<SegmentViewNode>} forbidden={undefined} ...>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/" tree={[...]} params={{}} cacheNode={{lazyData:null, ...}} segmentPath={[...]} ...>
            <SegmentViewNode type="page" pagePath="page.tsx">
              <SegmentTrieNode>
              <HomePage>
                <HomeClient initialStats={{totalThreads:0, ...}} initialCategories={[...]} initialThreads={[...]}>
                  <div className="min-h-scre...">
                    <Header>
                    <StatsBar>
                    <main>
                    <EnhancedFooter>
                      <footer className="border-t m...">
                        <div className="container ...">
                          <div>
                          <div className="border-t p...">
                            <p>
                            <div className="flex flex-...">
                              <p>
                              <p>
+                               1761726710363
-                               1761726751422
            ...
          ...

