[00:00:01.137] Server  LOG      ✓ Ready in 731ms
[00:00:01.376] Server  WARN     ⚠ Cross origin request detected from 87945529-0b43-4f9c-9b13-1739264a6781-00-2zprv3dqpksyc.janeway.replit.dev to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
[00:00:02.707] Browser LOG     [Activity Tracker] User active for 43 seconds
[00:00:02.707] Browser LOG     [Activity Tracker] User active for 44 seconds
[00:00:02.707] Browser LOG     [Activity Tracker] User active for 45 seconds
[00:00:02.707] Browser LOG     [Activity Tracker] User active for 46 seconds
[00:00:02.707] Browser LOG     [Activity Tracker] User active for 47 seconds
[00:00:04.161] Server  LOG      ○ Compiling / ...
[00:00:14.718] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:14.740] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:14.740] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:14.745] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:14.745] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:14.747] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:14.747] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:14.860] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:15.137] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:15.137] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:15.139] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:15.139] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:15.140] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:15.141] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:15.182] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:15.182] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:15.183] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:15.183] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:15.185] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:15.185] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:20.032] Browser INFO    %cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools font-weight:bold
[00:00:21.500] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HotReload globalError={[...]} webSocket={WebSocket} staticIndicatorState={{pathname:null, ...}}>
      <AppDevOverlayErrorBoundary globalError={[...]}>
        <ReplaySsrOnlyErrors>
        <DevRootHTTPAccessFallbackBoundary>
          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>
            <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<NotAllowedRootHTTPFallbackError>} ...>
              <RedirectBoundary>
                <RedirectErrorBoundary router={{...}}>
                  <Head>
                  <__next_root_layout_boundary__>
                    <SegmentViewNode type="layout" pagePath="layout.tsx">
                      <SegmentTrieNode>
                      <link>
                      <script>
                      <script>
                      <script>
                      <RootLayout>
                        <html lang="en" suppressHydrationWarning={true}>
                          <head>
                            <script>
                            <script
                              dangerouslySetInnerHTML={{
+                               __html: "\n              window.dataLayer = window.dataLayer || [];\n              fun..."
-                               __html: ""
                              }}
-                             src="/__replco/static/devtools/injected.js"
-                             onerror={"parent.postMessage({event:'error',payload:'script.onerror: Failed to load '+e..."}
                            >
                          ...
                            <div className="border-t p...">
                              <p>
                              <div className="flex flex-...">
                                <p>
                                <p>
+                                 1761765933392
-                                 1761765929492
                  ...

[00:00:25.135] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HotReload globalError={[...]} webSocket={WebSocket} staticIndicatorState={{pathname:null, ...}}>
      <AppDevOverlayErrorBoundary globalError={[...]}>
        <ReplaySsrOnlyErrors>
        <DevRootHTTPAccessFallbackBoundary>
          <HTTPAccessFallbackBoundary notFound={<NotAllowedRootHTTPFallbackError>}>
            <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<NotAllowedRootHTTPFallbackError>} ...>
              <RedirectBoundary>
                <RedirectErrorBoundary router={{...}}>
                  <Head>
                  <__next_root_layout_boundary__>
                    <SegmentViewNode type="layout" pagePath="layout.tsx">
                      <SegmentTrieNode>
                      <link>
                      <script>
                      <script>
                      <script>
                      <RootLayout>
                        <html lang="en" suppressHydrationWarning={true}>
                          <head>
                            <script>
                            <script
                              dangerouslySetInnerHTML={{
+                               __html: "\n              window.dataLayer = window.dataLayer || [];\n              fun..."
-                               __html: ""
                              }}
-                             src="/__replco/static/devtools/injected.js"
-                             onerror={"parent.postMessage({event:'error',payload:'script.onerror: Failed to load '+e..."}
                            >
                          ...
                            <div className="border-t p...">
                              <p>
                              <div className="flex flex-...">
                                <p>
                                <p>
+                                 1761765936205
-                                 1761765929305
                  ...

[00:00:46.821] Browser LOG     [Activity Tracker] User active for 0 seconds
[00:00:47.820] Browser LOG     [Activity Tracker] User active for 1 seconds
[00:00:48.823] Browser LOG     [Activity Tracker] User active for 2 seconds
[00:00:49.820] Browser LOG     [Activity Tracker] User active for 3 seconds
[00:00:50.812] Browser LOG     [Activity Tracker] User active for 4 seconds
[00:00:51.820] Browser LOG     [Activity Tracker] User active for 5 seconds
[00:00:52.828] Browser LOG     [Activity Tracker] User active for 6 seconds
[00:00:53.826] Browser LOG     [Activity Tracker] User active for 7 seconds
[00:00:54.835] Browser LOG     [Activity Tracker] User active for 8 seconds
[00:00:55.823] Browser LOG     [Activity Tracker] User active for 9 seconds
[00:00:56.825] Browser LOG     [Activity Tracker] User active for 10 seconds
[00:00:57.825] Browser LOG     [Activity Tracker] User active for 11 seconds
[00:00:58.833] Browser LOG     [Activity Tracker] User active for 12 seconds
[00:00:59.828] Browser LOG     [Activity Tracker] User active for 13 seconds
[00:01:00.822] Browser LOG     [Activity Tracker] User active for 14 seconds
[00:01:01.823] Browser LOG     [Activity Tracker] User active for 15 seconds
[00:01:02.821] Browser LOG     [Activity Tracker] User active for 16 seconds
[00:01:03.823] Browser LOG     [Activity Tracker] User active for 17 seconds
[00:01:04.819] Browser LOG     [Activity Tracker] User active for 18 seconds
[00:01:07.556] Browser LOG     [Activity Tracker] User active for 19 seconds
[00:01:08.557] Browser LOG     [Activity Tracker] User active for 20 seconds
[00:01:09.325] Browser LOG     [Activity Tracker] User active for 21 seconds
[00:01:09.437] Browser LOG     [Activity Tracker] User active for 22 seconds
[00:01:09.825] Browser LOG     [Activity Tracker] User active for 23 seconds
[00:01:10.820] Browser LOG     [Activity Tracker] User active for 24 seconds
[00:01:11.832] Browser LOG     [Activity Tracker] User active for 25 seconds
[00:01:12.813] Browser LOG     [Activity Tracker] User active for 26 seconds
[00:01:13.837] Browser LOG     [Activity Tracker] User active for 27 seconds
[00:01:14.826] Browser LOG     [Activity Tracker] User active for 28 seconds
[00:01:15.829] Browser LOG     [Activity Tracker] User active for 29 seconds
[00:01:16.824] Browser LOG     [Activity Tracker] User active for 30 seconds
[00:01:17.836] Browser LOG     [Activity Tracker] User active for 31 seconds
[00:01:18.834] Browser LOG     [Activity Tracker] User active for 32 seconds
[00:01:19.835] Browser LOG     [Activity Tracker] User active for 33 seconds
[00:01:20.831] Browser LOG     [Activity Tracker] User active for 34 seconds
[00:01:21.833] Browser LOG     [Activity Tracker] User active for 35 seconds
[00:01:22.825] Browser LOG     [Activity Tracker] User active for 36 seconds
[00:01:23.826] Browser LOG     [Activity Tracker] User active for 37 seconds
[00:01:24.826] Browser LOG     [Activity Tracker] User active for 38 seconds
[00:01:25.829] Browser LOG     [Activity Tracker] User active for 39 seconds
[00:01:26.831] Browser LOG     [Activity Tracker] User active for 40 seconds
[00:01:27.834] Browser LOG     [Activity Tracker] User active for 41 seconds
[00:01:28.821] Browser LOG     [Activity Tracker] User active for 42 seconds
[00:01:29.834] Browser LOG     [Activity Tracker] User active for 43 seconds
[00:01:30.819] Browser LOG     [Activity Tracker] User active for 44 seconds
[00:01:31.834] Browser LOG     [Activity Tracker] User active for 45 seconds
[00:01:32.822] Browser LOG     [Activity Tracker] User active for 46 seconds
[00:01:33.824] Browser LOG     [Activity Tracker] User active for 47 seconds
[00:01:34.825] Browser LOG     [Activity Tracker] User active for 48 seconds
[00:01:35.824] Browser LOG     [Activity Tracker] User active for 49 seconds
[00:01:36.824] Browser LOG     [Activity Tracker] User active for 50 seconds
[00:01:37.822] Browser LOG     [Activity Tracker] User active for 51 seconds
[00:01:38.823] Browser LOG     [Activity Tracker] User active for 52 seconds
[00:01:39.824] Browser LOG     [Activity Tracker] User active for 53 seconds
[00:01:40.826] Browser LOG     [Activity Tracker] User active for 54 seconds
