[00:00:01.685] Server  LOG      ✓ Ready in 1285ms
[00:00:03.158] Server  WARN     ⚠ Cross origin request detected from 87945529-0b43-4f9c-9b13-1739264a6781-00-2zprv3dqpksyc.janeway.replit.dev to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
[00:00:04.706] Server  LOG      ○ Compiling / ...
[00:00:13.357] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.377] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.377] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:13.381] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.381] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:13.383] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.383] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:13.423] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.423] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:13.424] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.425] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:13.426] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.426] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:13.450] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.450] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:13.452] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.452] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:13.453] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.454] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:13.522] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:17.895] Browser INFO    %cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools font-weight:bold
[00:00:17.895] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<SegmentViewNode>} forbidden={undefined} ...>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/" tree={[...]} params={{}} cacheNode={{lazyData:null, ...}} segmentPath={[...]} ...>
            <SegmentViewNode type="page" pagePath="page.tsx">
              <SegmentTrieNode>
              <HomePage>
                <HomeClient initialStats={{totalThreads:0, ...}} initialCategories={[...]} initialThreads={[...]}>
                  <div className="min-h-scre...">
                    <Header>
                    <StatsBar>
                    <main>
                    <EnhancedFooter>
                      <footer className="border-t m...">
                        <div className="container ...">
                          <div>
                          <div className="border-t p...">
                            <p>
                            <div className="flex flex-...">
                              <p>
                              <p>
+                               1761734230358
-                               1761734270158
            ...
          ...

[00:00:18.883] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<SegmentViewNode>} forbidden={undefined} ...>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/" tree={[...]} params={{}} cacheNode={{lazyData:null, ...}} segmentPath={[...]} ...>
            <SegmentViewNode type="page" pagePath="page.tsx">
              <SegmentTrieNode>
              <HomePage>
                <HomeClient initialStats={{totalThreads:0, ...}} initialCategories={[...]} initialThreads={[...]}>
                  <div className="min-h-scre...">
                    <Header>
                    <StatsBar>
                    <main>
                    <EnhancedFooter>
                      <footer className="border-t m...">
                        <div className="container ...">
                          <div>
                          <div className="border-t p...">
                            <p>
                            <div className="flex flex-...">
                              <p>
                              <p>
+                               1761734230483
-                               1761734270337
            ...
          ...

[00:01:05.607] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:01:05.608] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:01:05.609] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:01:05.609] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:01:05.610] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:01:05.610] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:01:08.774] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<SegmentViewNode>} forbidden={undefined} ...>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/" tree={[...]} params={{}} cacheNode={{lazyData:null, ...}} segmentPath={[...]} ...>
            <SegmentViewNode type="page" pagePath="page.tsx">
              <SegmentTrieNode>
              <HomePage>
                <HomeClient initialStats={{totalThreads:0, ...}} initialCategories={[...]} initialThreads={[...]}>
                  <div className="min-h-scre...">
                    <Header>
                    <StatsBar>
                    <main>
                    <EnhancedFooter>
                      <footer className="border-t m...">
                        <div className="container ...">
                          <div>
                          <div className="border-t p...">
                            <p>
                            <div className="flex flex-...">
                              <p>
                              <p>
+                               1761734280917
-                               1761734321996
            ...
          ...

[00:01:26.560] Browser LOG     [Activity Tracker] User active for 0 seconds
[00:01:27.574] Browser LOG     [Activity Tracker] User active for 1 seconds
[00:01:28.576] Browser LOG     [Activity Tracker] User active for 2 seconds
[00:01:29.578] Browser LOG     [Activity Tracker] User active for 3 seconds
[00:01:30.575] Browser LOG     [Activity Tracker] User active for 4 seconds
[00:01:31.577] Browser LOG     [Activity Tracker] User active for 5 seconds
[00:01:32.572] Browser LOG     [Activity Tracker] User active for 6 seconds
[00:01:33.579] Browser LOG     [Activity Tracker] User active for 7 seconds
[00:01:34.572] Browser LOG     [Activity Tracker] User active for 8 seconds
[00:01:35.573] Browser LOG     [Activity Tracker] User active for 9 seconds
[00:01:36.580] Browser LOG     [Activity Tracker] User active for 10 seconds
[00:01:37.578] Browser LOG     [Activity Tracker] User active for 11 seconds
[00:01:38.579] Browser LOG     [Activity Tracker] User active for 12 seconds
[00:01:39.573] Browser LOG     [Activity Tracker] User active for 13 seconds
[00:01:40.583] Browser LOG     [Activity Tracker] User active for 14 seconds
[00:01:41.578] Browser LOG     [Activity Tracker] User active for 15 seconds
[00:01:42.578] Browser LOG     [Activity Tracker] User active for 16 seconds
[00:01:43.586] Browser LOG     [Activity Tracker] User active for 17 seconds
[00:01:44.581] Browser LOG     [Activity Tracker] User active for 18 seconds
[00:01:45.586] Browser LOG     [Activity Tracker] User active for 19 seconds
[00:01:46.578] Browser LOG     [Activity Tracker] User active for 20 seconds
[00:01:47.577] Browser LOG     [Activity Tracker] User active for 21 seconds
[00:01:48.569] Browser LOG     [Activity Tracker] User active for 22 seconds
[00:01:49.571] Browser LOG     [Activity Tracker] User active for 23 seconds
[00:01:50.577] Browser LOG     [Activity Tracker] User active for 24 seconds
[00:01:51.585] Browser LOG     [Activity Tracker] User active for 25 seconds
[00:01:52.575] Browser LOG     [Activity Tracker] User active for 26 seconds
[00:01:53.580] Browser LOG     [Activity Tracker] User active for 27 seconds
[00:01:54.574] Browser LOG     [Activity Tracker] User active for 28 seconds
[00:01:55.584] Browser LOG     [Activity Tracker] User active for 29 seconds
[00:01:56.573] Browser LOG     [Activity Tracker] User active for 30 seconds
[00:01:57.585] Browser LOG     [Activity Tracker] User active for 31 seconds
[00:01:58.573] Browser LOG     [Activity Tracker] User active for 32 seconds
