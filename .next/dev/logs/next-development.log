[00:00:01.982] Server  LOG      ✓ Ready in 1371ms
[00:00:01.986] Server  WARN     ⚠ Cross origin request detected from 87945529-0b43-4f9c-9b13-1739264a6781-00-2zprv3dqpksyc.janeway.replit.dev to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
[00:00:05.009] Server  LOG      ○ Compiling / ...
[00:00:13.648] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.664] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.664] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:13.667] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.667] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:13.668] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.669] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:13.738] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.802] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.809] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:13.810] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.811] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:13.812] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.812] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:13.840] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.840] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:13.841] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.841] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:13.842] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:13.843] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:19.191] Browser INFO    %cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools font-weight:bold
[00:00:19.191] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<SegmentViewNode>} forbidden={undefined} ...>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/" tree={[...]} params={{}} cacheNode={{lazyData:null, ...}} segmentPath={[...]} ...>
            <SegmentViewNode type="page" pagePath="page.tsx">
              <SegmentTrieNode>
              <HomePage>
                <HomeClient initialStats={{...}} initialCategories={[...]} initialThreads={[...]}>
                  <div className="min-h-scre...">
                    <Header>
                    <StatsBar>
                    <main>
                    <EnhancedFooter>
                      <footer className="border-t m...">
                        <div className="container ...">
                          <div>
                          <div className="border-t p...">
                            <p>
                            <div className="flex flex-...">
                              <p>
                              <p>
+                               1761742572271
-                               1761742611609
            ...
          ...

[00:00:20.390] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <HTTPAccessFallbackErrorBoundary pathname="/" notFound={<SegmentViewNode>} forbidden={undefined} ...>
      <RedirectBoundary>
        <RedirectErrorBoundary router={{...}}>
          <InnerLayoutRouter url="/" tree={[...]} params={{}} cacheNode={{lazyData:null, ...}} segmentPath={[...]} ...>
            <SegmentViewNode type="page" pagePath="page.tsx">
              <SegmentTrieNode>
              <HomePage>
                <HomeClient initialStats={{...}} initialCategories={[...]} initialThreads={[...]}>
                  <div className="min-h-scre...">
                    <Header>
                    <StatsBar>
                    <main>
                    <EnhancedFooter>
                      <footer className="border-t m...">
                        <div className="container ...">
                          <div>
                          <div className="border-t p...">
                            <p>
                            <div className="flex flex-...">
                              <p>
                              <p>
+                               1761742572791
-                               1761742611360
            ...
          ...

[00:00:31.143] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:31.144] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/stats
[00:00:31.144] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:31.145] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/categories/tree/top?limit=6
[00:00:31.146] Server  LOG     [API Config] Internal API URL: http://127.0.0.1:3001
[00:00:31.146] Server  LOG     [SSR Fetch] Fetching: http://127.0.0.1:3001/api/threads
[00:00:31.647] Server  WARN     ⚠ Cross origin request detected from 127.0.0.1 to /_next/* resource. In a future major version of Next.js, you will need to explicitly configure "allowedDevOrigins" in next.config to allow this.
Read more: https://nextjs.org/docs/app/api-reference/config/next-config-js/allowedDevOrigins
[00:00:31.734] Browser INFO    %cDownload the React DevTools for a better development experience: https://react.dev/link/react-devtools font-weight:bold
[00:00:32.470] Browser ERROR   uncaughtError: Error: Hydration failed because the server rendered text didn't match the client. As a result this tree will be regenerated on the client. This can happen if a SSR-ed Client Component used:

- A server/client branch `if (typeof window !== 'undefined')`.
- Variable input such as `Date.now()` or `Math.random()` which changes each time it's called.
- Date formatting in a user's locale which doesn't match the server.
- External changing data without sending a snapshot of it along with the HTML.
- Invalid HTML tag nesting.

It can also happen if the client has a browser extension installed which messes with the HTML before React loaded.

https://react.dev/link/hydration-mismatch

  ...
    <div className="grid grid-...">
      <aside>
      <div className="lg:col-spa...">
        <section>
        <section>
        <section>
          <div>
          <div className="space-y-2 ...">
            <ForumThreadCard id="32f6397f-e..." authorId="1e6a2fa2-2..." categorySlug="oscillator..." ...>
              <LinkComponent href="/thread/os..." data-testid="link-threa...">
                <a data-testid="link-threa..." ref={function} onClick={function onClick} ...>
                  <_c className={"\n      ..."} data-testid="card-forum...">
                    <div ref={null} className="shadcn-car..." data-testid="card-forum...">
                      <_c2>
                      <_c8 className="pt-0 pb-3">
                        <div ref={null} className="p-4 pt-0 pb-3">
                          <div className="flex items...">
                            <div>
                            <div className="flex items..." data-testid="stat-views">
                              <Eye>
                              <span>
+                               334
-                               328
                                ...
            ...
      ...

