{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Brokers.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  Building2, \n  CheckCircle2, \n  AlertTriangle, \n  Star, \n  Search, \n  ShieldCheck,\n  ShieldAlert,\n  MessageSquare,\n  Eye,\n  Edit,\n  Trash2,\n  Users\n} from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\n\n// ============================================================================\n// TYPE DEFINITIONS\n// ============================================================================\n\ninterface BrokerStats {\n  totalBrokers: number;\n  verifiedBrokers: number;\n  scamWarnings: number;\n  totalReviews: number;\n  pendingReviews: number;\n  pendingScamReports: number;\n}\n\ninterface BrokerItem {\n  id: string;\n  name: string;\n  slug: string;\n  country: string | null;\n  regulation: string | null;\n  isVerified: boolean;\n  scamWarning: boolean;\n  reviewCount: number;\n  overallRating: number;\n  scamReportCount: number;\n  status: string;\n  createdAt: Date;\n  verifiedBy: string | null;\n  verifiedAt: Date | null;\n}\n\ninterface PaginatedBrokersResponse {\n  items: BrokerItem[];\n  total: number;\n  page: number;\n  pageSize: number;\n}\n\ninterface ScamReportItem {\n  id: string;\n  brokerId: string;\n  brokerName: string;\n  brokerLogoUrl: string | null;\n  userId: string;\n  username: string;\n  rating: number;\n  reviewTitle: string;\n  reviewBody: string;\n  scamSeverity: \"low\" | \"medium\" | \"high\" | \"critical\" | null;\n  status: \"pending\" | \"approved\" | \"rejected\";\n  datePosted: Date;\n  approvedBy: string | null;\n  approvedAt: Date | null;\n  rejectedBy: string | null;\n  rejectedAt: Date | null;\n  rejectionReason: string | null;\n}\n\ninterface PaginatedScamReportsResponse {\n  items: ScamReportItem[];\n  total: number;\n  page: number;\n  pageSize: number;\n}\n\ninterface ReviewItem {\n  id: string;\n  brokerId: string;\n  brokerName: string;\n  userId: string;\n  username: string;\n  rating: number;\n  reviewTitle: string;\n  reviewBody: string;\n  status: \"pending\" | \"approved\" | \"rejected\";\n  datePosted: Date;\n  approvedBy: string | null;\n  approvedAt: Date | null;\n  rejectedBy: string | null;\n  rejectedAt: Date | null;\n  rejectionReason: string | null;\n}\n\ninterface PaginatedReviewsResponse {\n  items: ReviewItem[];\n  total: number;\n  page: number;\n  pageSize: number;\n}\n\n// ============================================================================\n// ZOD SCHEMAS\n// ============================================================================\n\nconst addBrokerSchema = z.object({\n  name: z.string().min(1, \"Name is required\"),\n  country: z.string().optional(),\n  regulation: z.string().optional(),\n  websiteUrl: z.string().url(\"Must be a valid URL\").optional(),\n  minDeposit: z.string().optional(),\n  leverage: z.string().optional(),\n  platform: z.string().optional(),\n  spreadType: z.string().optional(),\n  minSpread: z.string().optional(),\n});\n\nconst editBrokerSchema = addBrokerSchema;\n\nconst scamWarningSchema = z.object({\n  enabled: z.boolean(),\n  reason: z.string().optional(),\n  severity: z.enum([\"low\", \"medium\", \"high\", \"critical\"]).optional(),\n});\n\nconst rejectReviewSchema = z.object({\n  reason: z.string().min(10, \"Reason must be at least 10 characters\"),\n});\n\n// ============================================================================\n// MAIN COMPONENT\n// ============================================================================\n\nexport default function AdminBrokers() {\n  const { toast } = useToast();\n\n  // Active Tab\n  const [activeTab, setActiveTab] = useState(\"brokers\");\n\n  // Filter & Search States\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [debouncedSearchQuery, setDebouncedSearchQuery] = useState(\"\");\n  const [countryFilter, setCountryFilter] = useState(\"all\");\n  const [verificationFilter, setVerificationFilter] = useState(\"all\");\n  const [regulationFilter, setRegulationFilter] = useState(\"all\");\n\n  // Pagination States\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(20);\n\n  // Modal States (8 modals)\n  const [viewBrokerId, setViewBrokerId] = useState<string | null>(null);\n  const [editBrokerId, setEditBrokerId] = useState<string | null>(null);\n  const [deleteBrokerId, setDeleteBrokerId] = useState<string | null>(null);\n  const [verifyBrokerId, setVerifyBrokerId] = useState<string | null>(null);\n  const [scamWarningBrokerId, setScamWarningBrokerId] = useState<string | null>(null);\n  const [viewScamReportId, setViewScamReportId] = useState<string | null>(null);\n  const [viewReviewId, setViewReviewId] = useState<string | null>(null);\n  const [showAddBrokerModal, setShowAddBrokerModal] = useState(false);\n\n  // Delete Confirmation States\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n  const [verifyConfirmed, setVerifyConfirmed] = useState(false);\n\n  // Debounce search query (300ms)\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedSearchQuery(searchQuery);\n      setCurrentPage(1); // Reset to page 1 when search changes\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [searchQuery]);\n\n  // Reset to page 1 when filters change\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [countryFilter, verificationFilter, regulationFilter]);\n\n  // ============================================================================\n  // REACT QUERIES\n  // ============================================================================\n\n  // Stats Query\n  const { data: statsRaw, isLoading: statsLoading } = useQuery<BrokerStats>({\n    queryKey: [\"/api/admin/brokers/stats\"]\n  });\n\n  const stats: BrokerStats = statsRaw || {\n    totalBrokers: 0,\n    verifiedBrokers: 0,\n    scamWarnings: 0,\n    totalReviews: 0,\n    pendingReviews: 0,\n    pendingScamReports: 0,\n  };\n\n  // Brokers List Query\n  const { data: brokersResponse, isLoading: brokersLoading } = useQuery<PaginatedBrokersResponse>({\n    queryKey: [\n      \"/api/admin/brokers\",\n      debouncedSearchQuery,\n      countryFilter,\n      verificationFilter,\n      regulationFilter,\n      currentPage,\n      pageSize,\n    ],\n    queryFn: async () => {\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        pageSize: pageSize.toString(),\n      });\n\n      if (debouncedSearchQuery) params.set(\"search\", debouncedSearchQuery);\n      if (countryFilter !== \"all\") params.set(\"country\", countryFilter);\n      if (verificationFilter === \"verified\") params.set(\"isVerified\", \"true\");\n      if (verificationFilter === \"unverified\") params.set(\"isVerified\", \"false\");\n      if (verificationFilter === \"scam_warning\") params.set(\"scamWarning\", \"true\");\n      if (regulationFilter !== \"all\") params.set(\"regulation\", regulationFilter);\n\n      const response = await fetch(`/api/admin/brokers?${params.toString()}`);\n      if (!response.ok) throw new Error(\"Failed to fetch brokers\");\n      return response.json();\n    },\n    enabled: activeTab === \"brokers\",\n  });\n\n  const brokers = brokersResponse?.items || [];\n  const totalBrokers = brokersResponse?.total || 0;\n\n  // Scam Reports Query\n  const { data: scamReportsResponse, isLoading: scamReportsLoading } = useQuery<PaginatedScamReportsResponse>({\n    queryKey: [\"/api/admin/scam-reports\", currentPage, pageSize],\n    queryFn: async () => {\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        pageSize: pageSize.toString(),\n      });\n\n      const response = await fetch(`/api/admin/scam-reports?${params.toString()}`);\n      if (!response.ok) throw new Error(\"Failed to fetch scam reports\");\n      return response.json();\n    },\n    enabled: activeTab === \"scam-reports\",\n  });\n\n  const scamReports = scamReportsResponse?.items || [];\n  const totalScamReports = scamReportsResponse?.total || 0;\n\n  // Reviews Query\n  const { data: reviewsResponse, isLoading: reviewsLoading } = useQuery<PaginatedReviewsResponse>({\n    queryKey: [\"/api/admin/broker-reviews\", currentPage, pageSize],\n    queryFn: async () => {\n      const params = new URLSearchParams({\n        page: currentPage.toString(),\n        pageSize: pageSize.toString(),\n      });\n\n      const response = await fetch(`/api/admin/broker-reviews?${params.toString()}`);\n      if (!response.ok) throw new Error(\"Failed to fetch reviews\");\n      return response.json();\n    },\n    enabled: activeTab === \"reviews\",\n  });\n\n  const reviews = reviewsResponse?.items || [];\n  const totalReviews = reviewsResponse?.total || 0;\n\n  // ============================================================================\n  // FORMS\n  // ============================================================================\n\n  const addBrokerForm = useForm<z.infer<typeof addBrokerSchema>>({\n    resolver: zodResolver(addBrokerSchema),\n    defaultValues: {\n      name: \"\",\n      country: \"\",\n      regulation: \"\",\n      websiteUrl: \"\",\n      minDeposit: \"\",\n      leverage: \"\",\n      platform: \"\",\n      spreadType: \"\",\n      minSpread: \"\",\n    },\n  });\n\n  const editBrokerForm = useForm<z.infer<typeof editBrokerSchema>>({\n    resolver: zodResolver(editBrokerSchema),\n  });\n\n  const scamWarningForm = useForm<z.infer<typeof scamWarningSchema>>({\n    resolver: zodResolver(scamWarningSchema),\n    defaultValues: {\n      enabled: true,\n      reason: \"\",\n      severity: \"medium\",\n    },\n  });\n\n  const rejectReviewForm = useForm<z.infer<typeof rejectReviewSchema>>({\n    resolver: zodResolver(rejectReviewSchema),\n    defaultValues: {\n      reason: \"\",\n    },\n  });\n\n  // ============================================================================\n  // MUTATIONS\n  // ============================================================================\n\n  const addBrokerMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof addBrokerSchema>) => {\n      return apiRequest(\"POST\", \"/api/brokers\", data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers/stats\"] });\n      setShowAddBrokerModal(false);\n      addBrokerForm.reset();\n      toast({ title: \"Broker added successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to add broker\", variant: \"destructive\" });\n    },\n  });\n\n  const editBrokerMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof editBrokerSchema>) => {\n      if (!editBrokerId) throw new Error(\"No broker selected\");\n      return apiRequest(\"PATCH\", `/api/admin/brokers/${editBrokerId}`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers/stats\"] });\n      setEditBrokerId(null);\n      toast({ title: \"Broker updated successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to update broker\", variant: \"destructive\" });\n    },\n  });\n\n  const deleteBrokerMutation = useMutation({\n    mutationFn: async (brokerId: string) => {\n      return apiRequest(\"DELETE\", `/api/admin/brokers/${brokerId}`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers/stats\"] });\n      setDeleteBrokerId(null);\n      setDeleteConfirmed(false);\n      toast({ title: \"Broker deleted successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to delete broker\", variant: \"destructive\" });\n    },\n  });\n\n  const verifyBrokerMutation = useMutation({\n    mutationFn: async (brokerId: string) => {\n      return apiRequest(\"POST\", `/api/admin/brokers/${brokerId}/verify`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers/stats\"] });\n      setVerifyBrokerId(null);\n      setVerifyConfirmed(false);\n      toast({ title: \"Broker verified successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to verify broker\", variant: \"destructive\" });\n    },\n  });\n\n  const unverifyBrokerMutation = useMutation({\n    mutationFn: async (brokerId: string) => {\n      return apiRequest(\"POST\", `/api/admin/brokers/${brokerId}/unverify`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers/stats\"] });\n      toast({ title: \"Broker verification removed\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to unverify broker\", variant: \"destructive\" });\n    },\n  });\n\n  const scamWarningMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof scamWarningSchema>) => {\n      if (!scamWarningBrokerId) throw new Error(\"No broker selected\");\n      return apiRequest(\"POST\", `/api/admin/brokers/${scamWarningBrokerId}/scam-warning`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers/stats\"] });\n      setScamWarningBrokerId(null);\n      scamWarningForm.reset();\n      toast({ title: \"Scam warning updated successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to update scam warning\", variant: \"destructive\" });\n    },\n  });\n\n  const resolveScamReportMutation = useMutation({\n    mutationFn: async ({ reportId, resolution }: { reportId: string; resolution: \"confirmed\" | \"dismissed\" }) => {\n      return apiRequest(\"POST\", `/api/admin/scam-reports/${reportId}/resolve`, { resolution });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/scam-reports\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers/stats\"] });\n      setViewScamReportId(null);\n      toast({ title: \"Scam report resolved\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to resolve scam report\", variant: \"destructive\" });\n    },\n  });\n\n  const approveReviewMutation = useMutation({\n    mutationFn: async (reviewId: string) => {\n      return apiRequest(\"POST\", `/api/admin/broker-reviews/${reviewId}/approve`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/broker-reviews\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers/stats\"] });\n      setViewReviewId(null);\n      toast({ title: \"Review approved successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to approve review\", variant: \"destructive\" });\n    },\n  });\n\n  const rejectReviewMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof rejectReviewSchema>) => {\n      if (!viewReviewId) throw new Error(\"No review selected\");\n      return apiRequest(\"POST\", `/api/admin/broker-reviews/${viewReviewId}/reject`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/broker-reviews\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/brokers/stats\"] });\n      setViewReviewId(null);\n      rejectReviewForm.reset();\n      toast({ title: \"Review rejected\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to reject review\", variant: \"destructive\" });\n    },\n  });\n\n  // ============================================================================\n  // HANDLERS\n  // ============================================================================\n\n  const handleClearFilters = () => {\n    setSearchQuery(\"\");\n    setCountryFilter(\"all\");\n    setVerificationFilter(\"all\");\n    setRegulationFilter(\"all\");\n  };\n\n  const handlePageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n    window.scrollTo({ top: 0, behavior: \"smooth\" });\n  };\n\n  const onAddBrokerSubmit = (data: z.infer<typeof addBrokerSchema>) => {\n    addBrokerMutation.mutate(data);\n  };\n\n  const onEditBrokerSubmit = (data: z.infer<typeof editBrokerSchema>) => {\n    editBrokerMutation.mutate(data);\n  };\n\n  const onScamWarningSubmit = (data: z.infer<typeof scamWarningSchema>) => {\n    scamWarningMutation.mutate(data);\n  };\n\n  const onRejectReviewSubmit = (data: z.infer<typeof rejectReviewSchema>) => {\n    rejectReviewMutation.mutate(data);\n  };\n\n  const currentBroker = brokers.find((b) => b.id === viewBrokerId || b.id === editBrokerId || b.id === deleteBrokerId || b.id === verifyBrokerId || b.id === scamWarningBrokerId);\n  const currentScamReport = scamReports.find((r) => r.id === viewScamReportId);\n  const currentReview = reviews.find((r) => r.id === viewReviewId);\n\n  // ============================================================================\n  // RENDER\n  // ============================================================================\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-3xl font-bold\">Broker Management</h1>\n        <Button onClick={() => setShowAddBrokerModal(true)} data-testid=\"button-add-broker\">\n          + Add Broker\n        </Button>\n      </div>\n\n      {/* Stat Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card data-testid=\"stat-total-brokers\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Brokers</CardTitle>\n            <Building2 className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <div className=\"text-2xl font-bold\">{stats.totalBrokers}</div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"stat-verified-brokers\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Verified Brokers</CardTitle>\n            <CheckCircle2 className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <div className=\"text-2xl font-bold\">{stats.verifiedBrokers}</div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"stat-scam-warnings\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Scam Warnings</CardTitle>\n            <AlertTriangle className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <div className=\"text-2xl font-bold\">{stats.scamWarnings}</div>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"stat-total-reviews\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Reviews</CardTitle>\n            <MessageSquare className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <div className=\"text-2xl font-bold\">{stats.totalReviews}</div>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Tabs */}\n      <Tabs value={activeTab} onValueChange={setActiveTab} className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"brokers\" data-testid=\"tab-brokers\">\n            Brokers ({stats.totalBrokers})\n          </TabsTrigger>\n          <TabsTrigger value=\"scam-reports\" data-testid=\"tab-scam-reports\">\n            Scam Reports ({stats.pendingScamReports})\n          </TabsTrigger>\n          <TabsTrigger value=\"reviews\" data-testid=\"tab-reviews\">\n            Reviews ({stats.totalReviews})\n          </TabsTrigger>\n        </TabsList>\n\n        {/* BROKERS TAB */}\n        <TabsContent value=\"brokers\" className=\"space-y-4\">\n          {/* Search & Filters */}\n          <div className=\"flex flex-col md:flex-row gap-4\">\n            <div className=\"flex-1 relative\">\n              <Search className=\"absolute left-3 top-3 h-4 w-4 text-muted-foreground\" />\n              <Input\n                placeholder=\"Search by broker name...\"\n                value={searchQuery}\n                onChange={(e) => setSearchQuery(e.target.value)}\n                className=\"pl-9\"\n                data-testid=\"input-search-brokers\"\n              />\n            </div>\n\n            <Select value={countryFilter} onValueChange={setCountryFilter}>\n              <SelectTrigger className=\"w-full md:w-[180px]\" data-testid=\"select-country-filter\">\n                <SelectValue placeholder=\"All Countries\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Countries</SelectItem>\n                <SelectItem value=\"USA\">USA</SelectItem>\n                <SelectItem value=\"UK\">UK</SelectItem>\n                <SelectItem value=\"Cyprus\">Cyprus</SelectItem>\n                <SelectItem value=\"Australia\">Australia</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Select value={verificationFilter} onValueChange={setVerificationFilter}>\n              <SelectTrigger className=\"w-full md:w-[180px]\" data-testid=\"select-verification-filter\">\n                <SelectValue placeholder=\"Verification\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All</SelectItem>\n                <SelectItem value=\"verified\">Verified</SelectItem>\n                <SelectItem value=\"unverified\">Unverified</SelectItem>\n                <SelectItem value=\"scam_warning\">Scam Warning</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Select value={regulationFilter} onValueChange={setRegulationFilter}>\n              <SelectTrigger className=\"w-full md:w-[180px]\" data-testid=\"select-regulation-filter\">\n                <SelectValue placeholder=\"Regulation\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All</SelectItem>\n                <SelectItem value=\"FCA\">FCA</SelectItem>\n                <SelectItem value=\"ASIC\">ASIC</SelectItem>\n                <SelectItem value=\"CySEC\">CySEC</SelectItem>\n                <SelectItem value=\"CFTC\">CFTC</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Select value={pageSize.toString()} onValueChange={(value) => setPageSize(parseInt(value))}>\n              <SelectTrigger className=\"w-full md:w-[120px]\" data-testid=\"select-page-size\">\n                <SelectValue />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"10\">10 / page</SelectItem>\n                <SelectItem value=\"20\">20 / page</SelectItem>\n                <SelectItem value=\"50\">50 / page</SelectItem>\n                <SelectItem value=\"100\">100 / page</SelectItem>\n              </SelectContent>\n            </Select>\n\n            <Button variant=\"outline\" onClick={handleClearFilters} data-testid=\"button-clear-filters\">\n              Clear\n            </Button>\n          </div>\n\n          {/* Brokers Table */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Brokers ({totalBrokers})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {brokersLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : (\n                <>\n                  <div className=\"overflow-x-auto\">\n                    <Table>\n                      <TableHeader>\n                        <TableRow>\n                          <TableHead>Name</TableHead>\n                          <TableHead>Country</TableHead>\n                          <TableHead>Regulation</TableHead>\n                          <TableHead>Verified</TableHead>\n                          <TableHead>Reviews</TableHead>\n                          <TableHead>Rating</TableHead>\n                          <TableHead>Status</TableHead>\n                          <TableHead>Actions</TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {brokers.length > 0 ? (\n                          brokers.map((broker) => (\n                            <TableRow key={broker.id} data-testid={`row-broker-${broker.id}`}>\n                              <TableCell>\n                                <div className=\"flex items-center gap-2\">\n                                  <div>\n                                    <div className=\"font-medium\">{broker.name}</div>\n                                    {broker.scamWarning && (\n                                      <Badge variant=\"destructive\" className=\"text-xs\">\n                                        Scam Warning\n                                      </Badge>\n                                    )}\n                                  </div>\n                                </div>\n                              </TableCell>\n                              <TableCell>{broker.country || \"-\"}</TableCell>\n                              <TableCell>{broker.regulation || \"-\"}</TableCell>\n                              <TableCell>\n                                {broker.isVerified ? (\n                                  <Badge variant=\"default\">\n                                    <CheckCircle2 className=\"h-3 w-3 mr-1\" />\n                                    Verified\n                                  </Badge>\n                                ) : (\n                                  <Badge variant=\"secondary\">Unverified</Badge>\n                                )}\n                              </TableCell>\n                              <TableCell>{broker.reviewCount}</TableCell>\n                              <TableCell>\n                                <div className=\"flex items-center gap-1\">\n                                  <Star className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n                                  <span>{broker.overallRating || 0}</span>\n                                </div>\n                              </TableCell>\n                              <TableCell>\n                                <Badge variant={broker.status === \"approved\" ? \"default\" : \"secondary\"}>\n                                  {broker.status}\n                                </Badge>\n                              </TableCell>\n                              <TableCell>\n                                <div className=\"flex gap-2 flex-wrap\">\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"ghost\"\n                                    onClick={() => setViewBrokerId(broker.id)}\n                                    data-testid={`button-view-broker-${broker.id}`}\n                                  >\n                                    <Eye className=\"h-4 w-4\" />\n                                  </Button>\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"outline\"\n                                    onClick={() => {\n                                      setEditBrokerId(broker.id);\n                                      editBrokerForm.reset({\n                                        name: broker.name,\n                                        country: broker.country || \"\",\n                                        regulation: broker.regulation || \"\",\n                                      });\n                                    }}\n                                    data-testid={`button-edit-broker-${broker.id}`}\n                                  >\n                                    <Edit className=\"h-4 w-4\" />\n                                  </Button>\n                                  {broker.isVerified ? (\n                                    <Button\n                                      size=\"sm\"\n                                      variant=\"outline\"\n                                      onClick={() => unverifyBrokerMutation.mutate(broker.id)}\n                                      data-testid={`button-unverify-broker-${broker.id}`}\n                                    >\n                                      Unverify\n                                    </Button>\n                                  ) : (\n                                    <Button\n                                      size=\"sm\"\n                                      variant=\"outline\"\n                                      onClick={() => setVerifyBrokerId(broker.id)}\n                                      data-testid={`button-verify-broker-${broker.id}`}\n                                    >\n                                      <ShieldCheck className=\"h-4 w-4 mr-1\" />\n                                      Verify\n                                    </Button>\n                                  )}\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"outline\"\n                                    onClick={() => setScamWarningBrokerId(broker.id)}\n                                    data-testid={`button-scam-warning-${broker.id}`}\n                                  >\n                                    <ShieldAlert className=\"h-4 w-4\" />\n                                  </Button>\n                                  <Button\n                                    size=\"sm\"\n                                    variant=\"destructive\"\n                                    onClick={() => setDeleteBrokerId(broker.id)}\n                                    data-testid={`button-delete-broker-${broker.id}`}\n                                  >\n                                    <Trash2 className=\"h-4 w-4\" />\n                                  </Button>\n                                </div>\n                              </TableCell>\n                            </TableRow>\n                          ))\n                        ) : (\n                          <TableRow>\n                            <TableCell colSpan={8} className=\"text-center text-muted-foreground py-8\">\n                              No brokers found\n                            </TableCell>\n                          </TableRow>\n                        )}\n                      </TableBody>\n                    </Table>\n                  </div>\n\n                  {/* Pagination */}\n                  {totalBrokers > pageSize && (\n                    <div className=\"flex items-center justify-between mt-4\">\n                      <div className=\"text-sm text-muted-foreground\">\n                        Showing {(currentPage - 1) * pageSize + 1} to {Math.min(currentPage * pageSize, totalBrokers)} of {totalBrokers} brokers\n                      </div>\n                      <div className=\"flex gap-2\">\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handlePageChange(1)}\n                          disabled={currentPage === 1}\n                          data-testid=\"button-first-page\"\n                        >\n                          First\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handlePageChange(currentPage - 1)}\n                          disabled={currentPage === 1}\n                          data-testid=\"button-prev-page\"\n                        >\n                          Previous\n                        </Button>\n                        <div className=\"flex items-center gap-2 px-4\">\n                          <Input\n                            type=\"number\"\n                            min={1}\n                            max={Math.ceil(totalBrokers / pageSize)}\n                            value={currentPage}\n                            onChange={(e) => {\n                              const page = parseInt(e.target.value);\n                              if (page >= 1 && page <= Math.ceil(totalBrokers / pageSize)) {\n                                handlePageChange(page);\n                              }\n                            }}\n                            className=\"w-16 text-center\"\n                            data-testid=\"input-page-number\"\n                          />\n                          <span className=\"text-sm text-muted-foreground\">\n                            of {Math.ceil(totalBrokers / pageSize)}\n                          </span>\n                        </div>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handlePageChange(currentPage + 1)}\n                          disabled={currentPage >= Math.ceil(totalBrokers / pageSize)}\n                          data-testid=\"button-next-page\"\n                        >\n                          Next\n                        </Button>\n                        <Button\n                          size=\"sm\"\n                          variant=\"outline\"\n                          onClick={() => handlePageChange(Math.ceil(totalBrokers / pageSize))}\n                          disabled={currentPage >= Math.ceil(totalBrokers / pageSize)}\n                          data-testid=\"button-last-page\"\n                        >\n                          Last\n                        </Button>\n                      </div>\n                    </div>\n                  )}\n                </>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* SCAM REPORTS TAB */}\n        <TabsContent value=\"scam-reports\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Scam Reports ({totalScamReports})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {scamReportsLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Broker</TableHead>\n                        <TableHead>Reporter</TableHead>\n                        <TableHead>Severity</TableHead>\n                        <TableHead>Report</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Date</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {scamReports.length > 0 ? (\n                        scamReports.map((report) => (\n                          <TableRow key={report.id} data-testid={`row-scam-report-${report.id}`}>\n                            <TableCell>{report.brokerName}</TableCell>\n                            <TableCell>{report.username}</TableCell>\n                            <TableCell>\n                              {report.scamSeverity ? (\n                                <Badge\n                                  variant={\n                                    report.scamSeverity === \"critical\" || report.scamSeverity === \"high\"\n                                      ? \"destructive\"\n                                      : report.scamSeverity === \"medium\"\n                                      ? \"default\"\n                                      : \"secondary\"\n                                  }\n                                >\n                                  {report.scamSeverity}\n                                </Badge>\n                              ) : (\n                                \"-\"\n                              )}\n                            </TableCell>\n                            <TableCell className=\"max-w-xs truncate\">{report.reviewTitle}</TableCell>\n                            <TableCell>\n                              <Badge variant={report.status === \"approved\" ? \"default\" : \"secondary\"}>\n                                {report.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              {formatDistanceToNow(new Date(report.datePosted), { addSuffix: true })}\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex gap-2\">\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  onClick={() => setViewScamReportId(report.id)}\n                                  data-testid={`button-view-report-${report.id}`}\n                                >\n                                  <Eye className=\"h-4 w-4\" />\n                                </Button>\n                                {report.status === \"pending\" && (\n                                  <>\n                                    <Button\n                                      size=\"sm\"\n                                      variant=\"outline\"\n                                      onClick={() =>\n                                        resolveScamReportMutation.mutate({\n                                          reportId: report.id,\n                                          resolution: \"confirmed\",\n                                        })\n                                      }\n                                      disabled={resolveScamReportMutation.isPending}\n                                      data-testid={`button-confirm-scam-${report.id}`}\n                                    >\n                                      Confirm\n                                    </Button>\n                                    <Button\n                                      size=\"sm\"\n                                      variant=\"outline\"\n                                      onClick={() =>\n                                        resolveScamReportMutation.mutate({\n                                          reportId: report.id,\n                                          resolution: \"dismissed\",\n                                        })\n                                      }\n                                      disabled={resolveScamReportMutation.isPending}\n                                      data-testid={`button-dismiss-scam-${report.id}`}\n                                    >\n                                      Dismiss\n                                    </Button>\n                                  </>\n                                )}\n                              </div>\n                            </TableCell>\n                            </TableRow>\n                          ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={7} className=\"text-center text-muted-foreground py-8\">\n                            No scam reports found\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        {/* REVIEWS TAB */}\n        <TabsContent value=\"reviews\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Broker Reviews ({totalReviews})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {reviewsLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Broker</TableHead>\n                        <TableHead>Reviewer</TableHead>\n                        <TableHead>Rating</TableHead>\n                        <TableHead>Review</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Date</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {reviews.length > 0 ? (\n                        reviews.map((review) => (\n                          <TableRow key={review.id} data-testid={`row-review-${review.id}`}>\n                            <TableCell>{review.brokerName}</TableCell>\n                            <TableCell>{review.username}</TableCell>\n                            <TableCell>\n                              <div className=\"flex items-center gap-1\">\n                                <Star className=\"h-4 w-4 fill-yellow-400 text-yellow-400\" />\n                                <span>{review.rating}</span>\n                              </div>\n                            </TableCell>\n                            <TableCell className=\"max-w-xs truncate\">{review.reviewTitle}</TableCell>\n                            <TableCell>\n                              <Badge variant={review.status === \"approved\" ? \"default\" : \"secondary\"}>\n                                {review.status}\n                              </Badge>\n                            </TableCell>\n                            <TableCell>\n                              {formatDistanceToNow(new Date(review.datePosted), { addSuffix: true })}\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex gap-2\">\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  onClick={() => setViewReviewId(review.id)}\n                                  data-testid={`button-view-review-${review.id}`}\n                                >\n                                  <Eye className=\"h-4 w-4\" />\n                                </Button>\n                                {review.status === \"pending\" && (\n                                  <>\n                                    <Button\n                                      size=\"sm\"\n                                      variant=\"outline\"\n                                      onClick={() => approveReviewMutation.mutate(review.id)}\n                                      disabled={approveReviewMutation.isPending}\n                                      data-testid={`button-approve-review-${review.id}`}\n                                    >\n                                      Approve\n                                    </Button>\n                                  </>\n                                )}\n                              </div>\n                            </TableCell>\n                            </TableRow>\n                          ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={7} className=\"text-center text-muted-foreground py-8\">\n                            No reviews found\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n      </Tabs>\n\n      {/* ========================================================================\n          MODALS (8 total)\n      ======================================================================== */}\n\n      {/* 1. Add Broker Modal */}\n      <Dialog open={showAddBrokerModal} onOpenChange={setShowAddBrokerModal}>\n        <DialogContent data-testid=\"modal-add-broker\">\n          <DialogHeader>\n            <DialogTitle>Add New Broker</DialogTitle>\n            <DialogDescription>Add a new broker to the directory</DialogDescription>\n          </DialogHeader>\n          <Form {...addBrokerForm}>\n            <form onSubmit={addBrokerForm.handleSubmit(onAddBrokerSubmit)} className=\"space-y-4\">\n              <FormField\n                control={addBrokerForm.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Broker Name *</FormLabel>\n                    <FormControl>\n                      <Input {...field} data-testid=\"input-broker-name\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={addBrokerForm.control}\n                name=\"country\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Country</FormLabel>\n                    <FormControl>\n                      <Input {...field} data-testid=\"input-country\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={addBrokerForm.control}\n                name=\"regulation\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Regulation</FormLabel>\n                    <FormControl>\n                      <Input {...field} placeholder=\"e.g., FCA, ASIC\" data-testid=\"input-regulation\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={addBrokerForm.control}\n                name=\"websiteUrl\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Website URL</FormLabel>\n                    <FormControl>\n                      <Input {...field} type=\"url\" placeholder=\"https://...\" data-testid=\"input-website\" />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <DialogFooter>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setShowAddBrokerModal(false)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={addBrokerMutation.isPending} data-testid=\"button-submit-add-broker\">\n                  Add Broker\n                </Button>\n              </DialogFooter>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n\n      {/* 2. View Broker Modal */}\n      <Dialog open={!!viewBrokerId} onOpenChange={() => setViewBrokerId(null)}>\n        <DialogContent data-testid=\"modal-view-broker\">\n          <DialogHeader>\n            <DialogTitle>Broker Details</DialogTitle>\n          </DialogHeader>\n          {currentBroker && (\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Name</div>\n                <div className=\"text-lg font-semibold\">{currentBroker.name}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Country</div>\n                <div>{currentBroker.country || \"-\"}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Regulation</div>\n                <div>{currentBroker.regulation || \"-\"}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Status</div>\n                <div className=\"flex gap-2 mt-1\">\n                  <Badge variant={currentBroker.isVerified ? \"default\" : \"secondary\"}>\n                    {currentBroker.isVerified ? \"Verified\" : \"Unverified\"}\n                  </Badge>\n                  {currentBroker.scamWarning && <Badge variant=\"destructive\">Scam Warning</Badge>}\n                  <Badge>{currentBroker.status}</Badge>\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Reviews & Rating</div>\n                <div>{currentBroker.reviewCount} reviews • {currentBroker.overallRating}/5 rating</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Scam Reports</div>\n                <div>{currentBroker.scamReportCount}</div>\n              </div>\n            </div>\n          )}\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => setViewBrokerId(null)}>\n              Close\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* 3. Edit Broker Modal */}\n      <Dialog open={!!editBrokerId} onOpenChange={() => setEditBrokerId(null)}>\n        <DialogContent data-testid=\"modal-edit-broker\">\n          <DialogHeader>\n            <DialogTitle>Edit Broker</DialogTitle>\n          </DialogHeader>\n          <Form {...editBrokerForm}>\n            <form onSubmit={editBrokerForm.handleSubmit(onEditBrokerSubmit)} className=\"space-y-4\">\n              <FormField\n                control={editBrokerForm.control}\n                name=\"name\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Broker Name *</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={editBrokerForm.control}\n                name=\"country\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Country</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={editBrokerForm.control}\n                name=\"regulation\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Regulation</FormLabel>\n                    <FormControl>\n                      <Input {...field} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <DialogFooter>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setEditBrokerId(null)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={editBrokerMutation.isPending}>\n                  Save Changes\n                </Button>\n              </DialogFooter>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n\n      {/* 4. Delete Broker Modal */}\n      <Dialog open={!!deleteBrokerId} onOpenChange={() => { setDeleteBrokerId(null); setDeleteConfirmed(false); }}>\n        <DialogContent data-testid=\"modal-delete-broker\">\n          <DialogHeader>\n            <DialogTitle>Delete Broker</DialogTitle>\n            <DialogDescription>\n              This will soft-delete the broker. Reviews will be preserved for audit trail.\n            </DialogDescription>\n          </DialogHeader>\n          {currentBroker && (\n            <div className=\"space-y-4\">\n              <div className=\"p-4 bg-muted rounded-lg\">\n                <div className=\"font-medium\">{currentBroker.name}</div>\n                <div className=\"text-sm text-muted-foreground\">{currentBroker.reviewCount} reviews</div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"delete-confirm\"\n                  checked={deleteConfirmed}\n                  onCheckedChange={(checked) => setDeleteConfirmed(checked as boolean)}\n                  data-testid=\"checkbox-delete-confirm\"\n                />\n                <label htmlFor=\"delete-confirm\" className=\"text-sm font-medium cursor-pointer\">\n                  Yes, I want to delete this broker\n                </label>\n              </div>\n            </div>\n          )}\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => { setDeleteBrokerId(null); setDeleteConfirmed(false); }}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              disabled={!deleteConfirmed || deleteBrokerMutation.isPending}\n              onClick={() => deleteBrokerId && deleteBrokerMutation.mutate(deleteBrokerId)}\n              data-testid=\"button-confirm-delete\"\n            >\n              Delete Broker\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* 5. Verify Broker Modal */}\n      <Dialog open={!!verifyBrokerId} onOpenChange={() => { setVerifyBrokerId(null); setVerifyConfirmed(false); }}>\n        <DialogContent data-testid=\"modal-verify-broker\">\n          <DialogHeader>\n            <DialogTitle>Verify Broker</DialogTitle>\n            <DialogDescription>\n              Mark this broker as verified after confirming they meet standards\n            </DialogDescription>\n          </DialogHeader>\n          {currentBroker && (\n            <div className=\"space-y-4\">\n              <div className=\"p-4 bg-muted rounded-lg\">\n                <div className=\"font-medium\">{currentBroker.name}</div>\n                <div className=\"text-sm text-muted-foreground\">\n                  {currentBroker.country} • {currentBroker.regulation}\n                </div>\n              </div>\n              <div className=\"flex items-center space-x-2\">\n                <Checkbox\n                  id=\"verify-confirm\"\n                  checked={verifyConfirmed}\n                  onCheckedChange={(checked) => setVerifyConfirmed(checked as boolean)}\n                  data-testid=\"checkbox-verify-confirm\"\n                />\n                <label htmlFor=\"verify-confirm\" className=\"text-sm font-medium cursor-pointer\">\n                  I've verified this broker meets our standards\n                </label>\n              </div>\n            </div>\n          )}\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={() => { setVerifyBrokerId(null); setVerifyConfirmed(false); }}>\n              Cancel\n            </Button>\n            <Button\n              disabled={!verifyConfirmed || verifyBrokerMutation.isPending}\n              onClick={() => verifyBrokerId && verifyBrokerMutation.mutate(verifyBrokerId)}\n              data-testid=\"button-confirm-verify\"\n            >\n              <ShieldCheck className=\"h-4 w-4 mr-2\" />\n              Verify Broker\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* 6. Scam Warning Modal */}\n      <Dialog open={!!scamWarningBrokerId} onOpenChange={() => setScamWarningBrokerId(null)}>\n        <DialogContent data-testid=\"modal-scam-warning\">\n          <DialogHeader>\n            <DialogTitle>Scam Warning</DialogTitle>\n            <DialogDescription>Add or remove scam warning for this broker</DialogDescription>\n          </DialogHeader>\n          <Form {...scamWarningForm}>\n            <form onSubmit={scamWarningForm.handleSubmit(onScamWarningSubmit)} className=\"space-y-4\">\n              <FormField\n                control={scamWarningForm.control}\n                name=\"enabled\"\n                render={({ field }) => (\n                  <FormItem className=\"flex items-center justify-between rounded-lg border p-4\">\n                    <div className=\"space-y-0.5\">\n                      <FormLabel className=\"text-base\">Enable Scam Warning</FormLabel>\n                      <FormDescription>Mark this broker with a scam warning</FormDescription>\n                    </div>\n                    <FormControl>\n                      <Checkbox\n                        checked={field.value}\n                        onCheckedChange={field.onChange}\n                        data-testid=\"checkbox-enable-warning\"\n                      />\n                    </FormControl>\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={scamWarningForm.control}\n                name=\"severity\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Severity</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value}>\n                      <FormControl>\n                        <SelectTrigger data-testid=\"select-severity\">\n                          <SelectValue placeholder=\"Select severity\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"low\">Low</SelectItem>\n                        <SelectItem value=\"medium\">Medium</SelectItem>\n                        <SelectItem value=\"high\">High</SelectItem>\n                        <SelectItem value=\"critical\">Critical</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <FormField\n                control={scamWarningForm.control}\n                name=\"reason\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Reason</FormLabel>\n                    <FormControl>\n                      <Textarea {...field} rows={3} data-testid=\"textarea-warning-reason\" />\n                    </FormControl>\n                    <FormDescription>Optional explanation for the warning</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <DialogFooter>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setScamWarningBrokerId(null)}>\n                  Cancel\n                </Button>\n                <Button type=\"submit\" disabled={scamWarningMutation.isPending}>\n                  Save\n                </Button>\n              </DialogFooter>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n\n      {/* 7. View Scam Report Modal */}\n      <Dialog open={!!viewScamReportId} onOpenChange={() => setViewScamReportId(null)}>\n        <DialogContent className=\"max-w-2xl\" data-testid=\"modal-view-scam-report\">\n          <DialogHeader>\n            <DialogTitle>Scam Report Details</DialogTitle>\n          </DialogHeader>\n          {currentScamReport && (\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Broker</div>\n                <div className=\"font-semibold\">{currentScamReport.brokerName}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Reporter</div>\n                <div>{currentScamReport.username}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Severity</div>\n                <Badge\n                  variant={\n                    currentScamReport.scamSeverity === \"critical\" || currentScamReport.scamSeverity === \"high\"\n                      ? \"destructive\"\n                      : \"default\"\n                  }\n                >\n                  {currentScamReport.scamSeverity || \"Not specified\"}\n                </Badge>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Title</div>\n                <div>{currentScamReport.reviewTitle}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Report</div>\n                <div className=\"p-4 bg-muted rounded-lg whitespace-pre-wrap\">{currentScamReport.reviewBody}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Status</div>\n                <Badge>{currentScamReport.status}</Badge>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Submitted</div>\n                <div>{formatDistanceToNow(new Date(currentScamReport.datePosted), { addSuffix: true })}</div>\n              </div>\n            </div>\n          )}\n          <DialogFooter>\n            {currentScamReport?.status === \"pending\" && (\n              <>\n                <Button\n                  variant=\"outline\"\n                  onClick={() =>\n                    viewScamReportId &&\n                    resolveScamReportMutation.mutate({\n                      reportId: viewScamReportId,\n                      resolution: \"dismissed\",\n                    })\n                  }\n                  disabled={resolveScamReportMutation.isPending}\n                  data-testid=\"button-dismiss-report\"\n                >\n                  Dismiss Report\n                </Button>\n                <Button\n                  onClick={() =>\n                    viewScamReportId &&\n                    resolveScamReportMutation.mutate({\n                      reportId: viewScamReportId,\n                      resolution: \"confirmed\",\n                    })\n                  }\n                  disabled={resolveScamReportMutation.isPending}\n                  data-testid=\"button-confirm-report\"\n                >\n                  Confirm Scam\n                </Button>\n              </>\n            )}\n            {currentScamReport?.status !== \"pending\" && (\n              <Button variant=\"outline\" onClick={() => setViewScamReportId(null)}>\n                Close\n              </Button>\n            )}\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      {/* 8. View/Moderate Review Modal */}\n      <Dialog open={!!viewReviewId} onOpenChange={() => setViewReviewId(null)}>\n        <DialogContent className=\"max-w-2xl\" data-testid=\"modal-view-review\">\n          <DialogHeader>\n            <DialogTitle>Review Details</DialogTitle>\n          </DialogHeader>\n          {currentReview && (\n            <div className=\"space-y-4\">\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Broker</div>\n                <div className=\"font-semibold\">{currentReview.brokerName}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Reviewer</div>\n                <div>{currentReview.username}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Rating</div>\n                <div className=\"flex items-center gap-1\">\n                  {[...Array(5)].map((_, i) => (\n                    <Star\n                      key={i}\n                      className={`h-4 w-4 ${\n                        i < currentReview.rating ? \"fill-yellow-400 text-yellow-400\" : \"text-gray-300\"\n                      }`}\n                    />\n                  ))}\n                  <span className=\"ml-2\">{currentReview.rating}/5</span>\n                </div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Title</div>\n                <div>{currentReview.reviewTitle}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Review</div>\n                <div className=\"p-4 bg-muted rounded-lg whitespace-pre-wrap\">{currentReview.reviewBody}</div>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Status</div>\n                <Badge>{currentReview.status}</Badge>\n              </div>\n              <div>\n                <div className=\"text-sm font-medium text-muted-foreground\">Submitted</div>\n                <div>{formatDistanceToNow(new Date(currentReview.datePosted), { addSuffix: true })}</div>\n              </div>\n\n              {/* Reject Form (shown when status is pending) */}\n              {currentReview.status === \"pending\" && (\n                <Form {...rejectReviewForm}>\n                  <form onSubmit={rejectReviewForm.handleSubmit(onRejectReviewSubmit)} className=\"space-y-4 pt-4 border-t\">\n                    <FormField\n                      control={rejectReviewForm.control}\n                      name=\"reason\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Rejection Reason (if rejecting)</FormLabel>\n                          <FormControl>\n                            <Textarea\n                              {...field}\n                              rows={3}\n                              placeholder=\"Explain why this review is being rejected...\"\n                              data-testid=\"textarea-reject-reason\"\n                            />\n                          </FormControl>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <div className=\"flex gap-2\">\n                      <Button\n                        type=\"button\"\n                        variant=\"outline\"\n                        onClick={() => currentReview && approveReviewMutation.mutate(currentReview.id)}\n                        disabled={approveReviewMutation.isPending}\n                        data-testid=\"button-approve-review\"\n                      >\n                        Approve\n                      </Button>\n                      <Button\n                        type=\"submit\"\n                        variant=\"destructive\"\n                        disabled={rejectReviewMutation.isPending}\n                        data-testid=\"button-reject-review\"\n                      >\n                        Reject\n                      </Button>\n                    </div>\n                  </form>\n                </Form>\n              )}\n            </div>\n          )}\n          {currentReview?.status !== \"pending\" && (\n            <DialogFooter>\n              <Button variant=\"outline\" onClick={() => setViewReviewId(null)}>\n                Close\n              </Button>\n            </DialogFooter>\n          )}\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}