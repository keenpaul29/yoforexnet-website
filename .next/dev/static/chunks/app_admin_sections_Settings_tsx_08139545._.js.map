{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Settings.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Button } from \"@/components/ui/button\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Slider } from \"@/components/ui/slider\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogTrigger } from \"@/components/ui/dialog\";\nimport { Label } from \"@/components/ui/label\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Badge } from \"@/components/ui/badge\";\n\ninterface GeneralSettings {\n  siteName: string;\n  siteDescription: string;\n  maintenanceMode: boolean;\n  registrationEnabled: boolean;\n}\n\ninterface RechargePackage {\n  id: number;\n  name: string;\n  coins: number;\n  price: number;\n  bonus: number;\n}\n\ninterface CoinSettings {\n  usdToCoinsRate: number;\n  packages: RechargePackage[];\n  minWithdrawal: number;\n  withdrawalFee: number;\n}\n\ninterface EmailTemplate {\n  id: number;\n  name: string;\n  subject: string;\n  type: string;\n}\n\ninterface FeatureFlag {\n  id: number;\n  name: string;\n  description: string;\n  enabled: boolean;\n  rolloutPercentage: number;\n}\n\ninterface AdminRole {\n  id: number;\n  username: string;\n  email: string;\n  role: string;\n}\n\nexport default function Settings() {\n  const [activeTab, setActiveTab] = useState(\"general\");\n  const [searchTemplate, setSearchTemplate] = useState(\"\");\n  const { toast } = useToast();\n\n  const { data: generalSettingsRaw, isLoading: generalLoading } = useQuery<GeneralSettings>({\n    queryKey: [\"/api/admin/settings/general\"]\n  });\n\n  const generalSettings: GeneralSettings = generalSettingsRaw || {\n    siteName: 'YoForex',\n    siteDescription: '',\n    maintenanceMode: false,\n    registrationEnabled: true\n  };\n\n  const { data: coinSettingsRaw, isLoading: coinLoading } = useQuery<CoinSettings>({\n    queryKey: [\"/api/admin/settings/coin-economy\"]\n  });\n\n  const coinSettings: CoinSettings = coinSettingsRaw || {\n    usdToCoinsRate: 100,\n    packages: [],\n    minWithdrawal: 1000,\n    withdrawalFee: 5\n  };\n\n  const { data: emailTemplatesRaw, isLoading: templatesLoading } = useQuery<EmailTemplate[]>({\n    queryKey: [\"/api/admin/settings/email-templates\", { search: searchTemplate }]\n  });\n\n  const emailTemplates: EmailTemplate[] = Array.isArray(emailTemplatesRaw) ? emailTemplatesRaw : [];\n\n  const { data: featureFlagsRaw, isLoading: flagsLoading } = useQuery<FeatureFlag[]>({\n    queryKey: [\"/api/admin/settings/feature-flags\"]\n  });\n\n  const featureFlags: FeatureFlag[] = Array.isArray(featureFlagsRaw) ? featureFlagsRaw : [];\n\n  const { data: adminRolesRaw, isLoading: rolesLoading } = useQuery<AdminRole[]>({\n    queryKey: [\"/api/admin/settings/admin-roles\"]\n  });\n\n  const adminRoles: AdminRole[] = Array.isArray(adminRolesRaw) ? adminRolesRaw : [];\n\n  const updateGeneralMutation = useMutation({\n    mutationFn: async (settings: any) => {\n      return apiRequest(\"PUT\", \"/api/admin/settings/general\", settings);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/settings/general\"] });\n      toast({ title: \"Settings updated successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to update settings\", variant: \"destructive\" });\n    }\n  });\n\n  const updateCoinSettingsMutation = useMutation({\n    mutationFn: async (settings: any) => {\n      return apiRequest(\"PUT\", \"/api/admin/settings/coin-economy\", settings);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/settings/coin-economy\"] });\n      toast({ title: \"Coin settings updated successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to update coin settings\", variant: \"destructive\" });\n    }\n  });\n\n  const toggleFeatureFlagMutation = useMutation({\n    mutationFn: async ({ flagId, enabled }: { flagId: number; enabled: boolean }) => {\n      return apiRequest(\"PUT\", `/api/admin/settings/feature-flags/${flagId}`, { enabled });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/settings/feature-flags\"] });\n      toast({ title: \"Feature flag updated\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to update feature flag\", variant: \"destructive\" });\n    }\n  });\n\n  const grantAdminMutation = useMutation({\n    mutationFn: async ({ userId, role }: { userId: number; role: string }) => {\n      return apiRequest(\"POST\", `/api/admin/settings/admin-roles/grant`, { userId, role });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/settings/admin-roles\"] });\n      toast({ title: \"Admin role granted successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to grant admin role\", variant: \"destructive\" });\n    }\n  });\n\n  return (\n    <div className=\"space-y-6\">\n      <h1 className=\"text-3xl font-bold\">System Settings</h1>\n\n      <Tabs value={activeTab} onValueChange={setActiveTab} data-testid=\"tabs-settings\">\n        <TabsList className=\"grid w-full grid-cols-5\">\n          <TabsTrigger value=\"general\" data-testid=\"tab-general\">General</TabsTrigger>\n          <TabsTrigger value=\"coin-economy\" data-testid=\"tab-coin-economy\">Coin Economy</TabsTrigger>\n          <TabsTrigger value=\"email-templates\" data-testid=\"tab-email-templates\">Email Templates</TabsTrigger>\n          <TabsTrigger value=\"feature-flags\" data-testid=\"tab-feature-flags\">Feature Flags</TabsTrigger>\n          <TabsTrigger value=\"admin-roles\" data-testid=\"tab-admin-roles\">Admin Roles</TabsTrigger>\n        </TabsList>\n\n        {/* General Tab */}\n        <TabsContent value=\"general\" className=\"space-y-4\">\n          {generalLoading ? (\n            <Skeleton className=\"h-96\" />\n          ) : (\n            <Card data-testid=\"card-general-settings\">\n              <CardHeader>\n                <CardTitle>General Settings</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"site-name\">Site Name</Label>\n                  <Input\n                    id=\"site-name\"\n                    defaultValue={generalSettings.siteName}\n                    data-testid=\"input-site-name\"\n                  />\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"site-description\">Site Description</Label>\n                  <Textarea\n                    id=\"site-description\"\n                    defaultValue={generalSettings.siteDescription}\n                    data-testid=\"textarea-site-description\"\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-1\">\n                    <Label htmlFor=\"maintenance-mode\">Maintenance Mode</Label>\n                    <p className=\"text-sm text-muted-foreground\">Enable site maintenance mode</p>\n                  </div>\n                  <Switch\n                    id=\"maintenance-mode\"\n                    defaultChecked={generalSettings.maintenanceMode}\n                    data-testid=\"switch-maintenance-mode\"\n                  />\n                </div>\n\n                <div className=\"flex items-center justify-between\">\n                  <div className=\"space-y-1\">\n                    <Label htmlFor=\"registration-enabled\">Registration Enabled</Label>\n                    <p className=\"text-sm text-muted-foreground\">Allow new user registrations</p>\n                  </div>\n                  <Switch\n                    id=\"registration-enabled\"\n                    defaultChecked={generalSettings.registrationEnabled}\n                    data-testid=\"switch-registration-enabled\"\n                  />\n                </div>\n\n                <Button\n                  onClick={() => updateGeneralMutation.mutate(generalSettings)}\n                  disabled={updateGeneralMutation.isPending}\n                  data-testid=\"button-save-general\"\n                >\n                  Save Changes\n                </Button>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* Coin Economy Tab */}\n        <TabsContent value=\"coin-economy\" className=\"space-y-4\">\n          {coinLoading ? (\n            <Skeleton className=\"h-96\" />\n          ) : (\n            <>\n              <Card data-testid=\"card-exchange-rate\">\n                <CardHeader>\n                  <CardTitle>Exchange Rate</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"usd-to-coins\">USD to Coins Rate</Label>\n                    <Input\n                      id=\"usd-to-coins\"\n                      type=\"number\"\n                      defaultValue={coinSettings.usdToCoinsRate}\n                      data-testid=\"input-usd-to-coins\"\n                    />\n                    <p className=\"text-sm text-muted-foreground\">1 USD = X coins</p>\n                  </div>\n                  <Button data-testid=\"button-save-exchange-rate\">Save Exchange Rate</Button>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-recharge-packages\">\n                <CardHeader>\n                  <CardTitle>Recharge Packages</CardTitle>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"overflow-x-auto\">\n                    <Table>\n                      <TableHeader>\n                        <TableRow>\n                          <TableHead>Package</TableHead>\n                          <TableHead>Coins</TableHead>\n                          <TableHead>Price (USD)</TableHead>\n                          <TableHead>Bonus</TableHead>\n                          <TableHead>Actions</TableHead>\n                        </TableRow>\n                      </TableHeader>\n                      <TableBody>\n                        {coinSettings.packages.length > 0 ? (\n                          coinSettings.packages.map((pkg) => (\n                            <TableRow key={pkg.id} data-testid={`package-${pkg.id}`}>\n                              <TableCell>{pkg.name}</TableCell>\n                              <TableCell>{pkg.coins}</TableCell>\n                              <TableCell>${pkg.price}</TableCell>\n                              <TableCell>{pkg.bonus}%</TableCell>\n                              <TableCell>\n                                <Button size=\"sm\" variant=\"outline\" data-testid={`button-edit-package-${pkg.id}`}>\n                                  Edit\n                                </Button>\n                              </TableCell>\n                            </TableRow>\n                          ))\n                        ) : (\n                          <TableRow>\n                            <TableCell colSpan={5} className=\"text-center py-8 text-muted-foreground\">\n                              No packages configured\n                            </TableCell>\n                          </TableRow>\n                        )}\n                      </TableBody>\n                    </Table>\n                  </div>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-withdrawal-settings\">\n                <CardHeader>\n                  <CardTitle>Withdrawal Settings</CardTitle>\n                </CardHeader>\n                <CardContent className=\"space-y-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"min-withdrawal\">Minimum Withdrawal Amount</Label>\n                    <Input\n                      id=\"min-withdrawal\"\n                      type=\"number\"\n                      defaultValue={coinSettings.minWithdrawal}\n                      data-testid=\"input-min-withdrawal\"\n                    />\n                  </div>\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"withdrawal-fee\">Withdrawal Fee (%)</Label>\n                    <Input\n                      id=\"withdrawal-fee\"\n                      type=\"number\"\n                      defaultValue={coinSettings.withdrawalFee}\n                      data-testid=\"input-withdrawal-fee\"\n                    />\n                  </div>\n                  <Button data-testid=\"button-save-withdrawal\">Save Withdrawal Settings</Button>\n                </CardContent>\n              </Card>\n            </>\n          )}\n        </TabsContent>\n\n        {/* Email Templates Tab */}\n        <TabsContent value=\"email-templates\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <CardTitle>Search Templates</CardTitle>\n            </CardHeader>\n            <CardContent>\n              <Input\n                placeholder=\"Search templates...\"\n                value={searchTemplate}\n                onChange={(e) => setSearchTemplate(e.target.value)}\n                data-testid=\"input-search-templates\"\n              />\n            </CardContent>\n          </Card>\n\n          {templatesLoading ? (\n            <Skeleton className=\"h-96\" />\n          ) : (\n            <Card data-testid=\"card-email-templates\">\n              <CardHeader>\n                <CardTitle>Email Templates</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Name</TableHead>\n                        <TableHead>Subject</TableHead>\n                        <TableHead>Type</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {emailTemplates.length > 0 ? (\n                        emailTemplates.map((template) => (\n                          <TableRow key={template.id} data-testid={`template-${template.id}`}>\n                            <TableCell>{template.name}</TableCell>\n                            <TableCell>{template.subject}</TableCell>\n                            <TableCell>\n                              <Badge variant=\"outline\">{template.type}</Badge>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex gap-2\">\n                                <Button size=\"sm\" variant=\"outline\" data-testid={`button-edit-template-${template.id}`}>\n                                  Edit\n                                </Button>\n                                <Button size=\"sm\" variant=\"outline\" data-testid={`button-preview-template-${template.id}`}>\n                                  Preview\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={4} className=\"text-center py-8 text-muted-foreground\">\n                            No templates found\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* Feature Flags Tab */}\n        <TabsContent value=\"feature-flags\" className=\"space-y-4\">\n          {flagsLoading ? (\n            <Skeleton className=\"h-96\" />\n          ) : (\n            <Card data-testid=\"card-feature-flags\">\n              <CardHeader>\n                <CardTitle>Feature Flags</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Feature</TableHead>\n                        <TableHead>Description</TableHead>\n                        <TableHead>Enabled</TableHead>\n                        <TableHead>Rollout %</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {featureFlags.length > 0 ? (\n                        featureFlags.map((flag) => (\n                          <TableRow key={flag.id} data-testid={`flag-${flag.id}`}>\n                            <TableCell>{flag.name}</TableCell>\n                            <TableCell>{flag.description}</TableCell>\n                            <TableCell>\n                              <Switch\n                                checked={flag.enabled}\n                                onCheckedChange={(checked) =>\n                                  toggleFeatureFlagMutation.mutate({ flagId: flag.id, enabled: checked })\n                                }\n                                data-testid={`switch-flag-${flag.id}`}\n                              />\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"w-24\">\n                                <Slider\n                                  defaultValue={[flag.rolloutPercentage]}\n                                  max={100}\n                                  step={1}\n                                  data-testid={`slider-rollout-${flag.id}`}\n                                />\n                              </div>\n                            </TableCell>\n                            <TableCell>\n                              <Button size=\"sm\" variant=\"outline\" data-testid={`button-configure-flag-${flag.id}`}>\n                                Configure\n                              </Button>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={5} className=\"text-center py-8 text-muted-foreground\">\n                            No feature flags configured\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n\n        {/* Admin Roles Tab */}\n        <TabsContent value=\"admin-roles\" className=\"space-y-4\">\n          {rolesLoading ? (\n            <Skeleton className=\"h-96\" />\n          ) : (\n            <Card data-testid=\"card-admin-roles\">\n              <CardHeader>\n                <CardTitle>Admin Roles & Permissions</CardTitle>\n              </CardHeader>\n              <CardContent>\n                <div className=\"overflow-x-auto\">\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>User</TableHead>\n                        <TableHead>Email</TableHead>\n                        <TableHead>Role</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {adminRoles.length > 0 ? (\n                        adminRoles.map((admin) => (\n                          <TableRow key={admin.id} data-testid={`admin-${admin.id}`}>\n                            <TableCell>{admin.username}</TableCell>\n                            <TableCell>{admin.email}</TableCell>\n                            <TableCell>\n                              <Badge>{admin.role}</Badge>\n                            </TableCell>\n                            <TableCell>\n                              <div className=\"flex gap-2\">\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  data-testid={`button-edit-permissions-${admin.id}`}\n                                >\n                                  Edit Permissions\n                                </Button>\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"destructive\"\n                                  data-testid={`button-revoke-admin-${admin.id}`}\n                                >\n                                  Revoke\n                                </Button>\n                              </div>\n                            </TableCell>\n                          </TableRow>\n                        ))\n                      ) : (\n                        <TableRow>\n                          <TableCell colSpan={4} className=\"text-center py-8 text-muted-foreground\">\n                            No admins found\n                          </TableCell>\n                        </TableRow>\n                      )}\n                    </TableBody>\n                  </Table>\n                </div>\n              </CardContent>\n            </Card>\n          )}\n        </TabsContent>\n      </Tabs>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}