{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Marketplace.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle } from \"@/components/ui/dialog\";\nimport { Form, FormControl, FormDescription, FormField, FormItem, FormLabel, FormMessage } from \"@/components/ui/form\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { DollarSign, TrendingUp, Package, CheckCircle, XCircle, Eye, Star } from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from \"recharts\";\nimport AddContentDialog from \"./AddContentDialog\";\n\ninterface MarketplaceStats {\n  totalItems: number;\n  pendingItems: number;\n  totalSales: number;\n  salesThisWeek: number;\n  totalRevenue: number;\n  revenueThisWeek: number;\n}\n\ninterface MarketplaceItem {\n  id: number;\n  title: string;\n  sellerUsername: string;\n  coinPrice: number;\n  sales: number;\n  status: string;\n  createdAt: string;\n  category?: string;\n  description?: string;\n}\n\ninterface TopSellingItem {\n  id: number;\n  title: string;\n  sales: number;\n  coinPrice: number;\n}\n\ninterface RevenueDataPoint {\n  date: string;\n  revenue: number;\n}\n\ninterface TopVendor {\n  sellerId: number;\n  sellerUsername: string;\n  totalSales: number;\n  totalRevenue: number;\n  itemCount: number;\n}\n\ninterface ItemDetailsData {\n  id: number;\n  title: string;\n  description: string;\n  category: string;\n  coinPrice: number;\n  status: string;\n  sellerUsername: string;\n  sales: number;\n  createdAt: string;\n  recentPurchases?: Array<{\n    id: number;\n    buyerUsername: string;\n    coins: number;\n    purchasedAt: string;\n  }>;\n}\n\ninterface PaginatedResponse {\n  items: MarketplaceItem[];\n  totalItems: number;\n  totalPages: number;\n  currentPage: number;\n  pageSize: number;\n}\n\nconst rejectSchema = z.object({\n  reason: z.string().min(10, \"Reason must be at least 10 characters\").max(500, \"Reason must be less than 500 characters\")\n});\n\nconst featureSchema = z.object({\n  durationDays: z.number().min(1, \"Duration must be at least 1 day\").max(365, \"Duration cannot exceed 365 days\")\n});\n\nexport default function AdminMarketplace() {\n  const { toast } = useToast();\n\n  // Filter states\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [debouncedSearchQuery, setDebouncedSearchQuery] = useState(\"\");\n  const [categoryFilter, setCategoryFilter] = useState(\"all\");\n  const [statusFilter, setStatusFilter] = useState(\"all\");\n  const [priceFilter, setPriceFilter] = useState(\"all\");\n\n  // Pagination states\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(20);\n\n  // Modal states\n  const [viewItemId, setViewItemId] = useState<number | null>(null);\n  const [rejectItemId, setRejectItemId] = useState<number | null>(null);\n  const [featureItemId, setFeatureItemId] = useState<number | null>(null);\n\n  // Debounce search query\n  useEffect(() => {\n    const timer = setTimeout(() => {\n      setDebouncedSearchQuery(searchQuery);\n      setCurrentPage(1); // Reset to page 1 when search changes\n    }, 300);\n\n    return () => clearTimeout(timer);\n  }, [searchQuery]);\n\n  // Reset to page 1 when filters change\n  useEffect(() => {\n    setCurrentPage(1);\n  }, [categoryFilter, statusFilter, priceFilter]);\n\n  // Build query parameters\n  const queryParams = new URLSearchParams({\n    page: currentPage.toString(),\n    limit: pageSize.toString(),\n    ...(debouncedSearchQuery && { search: debouncedSearchQuery }),\n    ...(categoryFilter !== \"all\" && { category: categoryFilter }),\n    ...(statusFilter !== \"all\" && { status: statusFilter }),\n    ...(priceFilter !== \"all\" && { priceRange: priceFilter })\n  });\n\n  const { data: statsRaw, isLoading: statsLoading } = useQuery<MarketplaceStats>({\n    queryKey: [\"/api/admin/marketplace/stats\"]\n  });\n\n  const stats: MarketplaceStats = statsRaw || {\n    totalItems: 0,\n    pendingItems: 0,\n    totalSales: 0,\n    salesThisWeek: 0,\n    totalRevenue: 0,\n    revenueThisWeek: 0\n  };\n\n  const { data: itemsResponse, isLoading: itemsLoading } = useQuery<PaginatedResponse>({\n    queryKey: [\"/api/admin/marketplace/items\", currentPage, pageSize, debouncedSearchQuery, categoryFilter, statusFilter, priceFilter],\n    queryFn: async () => {\n      const response = await fetch(`/api/admin/marketplace/items?${queryParams}`);\n      if (!response.ok) {\n        // If API doesn't support pagination yet, return mock structure\n        const items = await response.json();\n        return {\n          items: Array.isArray(items) ? items : [],\n          totalItems: Array.isArray(items) ? items.length : 0,\n          totalPages: 1,\n          currentPage: 1,\n          pageSize: Array.isArray(items) ? items.length : 20\n        };\n      }\n      return response.json();\n    }\n  });\n\n  const items: MarketplaceItem[] = itemsResponse?.items || [];\n  const totalItems = itemsResponse?.totalItems || 0;\n  const totalPages = itemsResponse?.totalPages || 1;\n\n  const { data: topSellingRaw, isLoading: topLoading } = useQuery<TopSellingItem[]>({\n    queryKey: [\"/api/admin/marketplace/top-selling\"]\n  });\n\n  const topSelling: TopSellingItem[] = Array.isArray(topSellingRaw) ? topSellingRaw : [];\n\n  const { data: revenueDataRaw, isLoading: revenueLoading } = useQuery<RevenueDataPoint[]>({\n    queryKey: [\"/api/admin/marketplace/revenue-chart\"]\n  });\n\n  const revenueData: RevenueDataPoint[] = Array.isArray(revenueDataRaw) ? revenueDataRaw : [];\n\n  const { data: topVendorsRaw, isLoading: topVendorsLoading } = useQuery<TopVendor[]>({\n    queryKey: [\"/api/admin/marketplace/top-vendors\"]\n  });\n\n  const topVendors: TopVendor[] = Array.isArray(topVendorsRaw) ? topVendorsRaw : [];\n\n  const { data: viewItemData, isLoading: viewItemLoading } = useQuery<ItemDetailsData>({\n    queryKey: [\"/api/admin/marketplace/items\", viewItemId],\n    enabled: !!viewItemId,\n    queryFn: async () => {\n      const response = await fetch(`/api/admin/marketplace/items/${viewItemId}`);\n      if (!response.ok) throw new Error(\"Failed to fetch item details\");\n      return response.json();\n    }\n  });\n\n  // Forms\n  const rejectForm = useForm<z.infer<typeof rejectSchema>>({\n    resolver: zodResolver(rejectSchema),\n    defaultValues: {\n      reason: \"\"\n    }\n  });\n\n  const featureForm = useForm<z.infer<typeof featureSchema>>({\n    resolver: zodResolver(featureSchema),\n    defaultValues: {\n      durationDays: 30\n    }\n  });\n\n  // Mutations\n  const approveItemMutation = useMutation({\n    mutationFn: async (itemId: number) => {\n      return apiRequest(\"POST\", `/api/admin/marketplace/${itemId}/approve`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/items\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/stats\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/top-selling\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/top-vendors\"] });\n      toast({ title: \"Item approved successfully\" });\n    },\n    onError: () => {\n      toast({ title: \"Failed to approve item\", variant: \"destructive\" });\n    }\n  });\n\n  const rejectMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof rejectSchema>) => {\n      if (!rejectItemId) throw new Error(\"No item selected\");\n      return apiRequest(\"POST\", `/api/admin/marketplace/${rejectItemId}/reject`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/items\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/stats\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/top-selling\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/top-vendors\"] });\n      setRejectItemId(null);\n      toast({ title: \"Item rejected successfully\" });\n      rejectForm.reset();\n    },\n    onError: () => {\n      toast({ title: \"Failed to reject item\", variant: \"destructive\" });\n    }\n  });\n\n  const featureMutation = useMutation({\n    mutationFn: async (data: z.infer<typeof featureSchema>) => {\n      if (!featureItemId) throw new Error(\"No item selected\");\n      return apiRequest(\"POST\", `/api/admin/marketplace/${featureItemId}/feature`, data);\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/items\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/stats\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/top-selling\"] });\n      queryClient.invalidateQueries({ queryKey: [\"/api/admin/marketplace/top-vendors\"] });\n      setFeatureItemId(null);\n      toast({ title: \"Item featured successfully\" });\n      featureForm.reset();\n    },\n    onError: () => {\n      toast({ title: \"Failed to feature item\", variant: \"destructive\" });\n    }\n  });\n\n  const onRejectSubmit = (data: z.infer<typeof rejectSchema>) => {\n    rejectMutation.mutate(data);\n  };\n\n  const onFeatureSubmit = (data: z.infer<typeof featureSchema>) => {\n    featureMutation.mutate(data);\n  };\n\n  const handleClearFilters = () => {\n    setSearchQuery(\"\");\n    setCategoryFilter(\"all\");\n    setStatusFilter(\"all\");\n    setPriceFilter(\"all\");\n  };\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <h1 className=\"text-3xl font-bold\">Marketplace Management</h1>\n        <AddContentDialog />\n      </div>\n\n      {/* Search & Filter Controls */}\n      <div className=\"flex flex-col md:flex-row gap-4\">\n        <div className=\"flex-1\">\n          <Input\n            placeholder=\"Search by title or seller...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            data-testid=\"input-search-items\"\n          />\n        </div>\n\n        <Select value={categoryFilter} onValueChange={setCategoryFilter}>\n          <SelectTrigger className=\"w-full md:w-[200px]\" data-testid=\"select-category-filter\">\n            <SelectValue placeholder=\"All Categories\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">All Categories</SelectItem>\n            <SelectItem value=\"Expert Advisors\">Expert Advisors</SelectItem>\n            <SelectItem value=\"Indicators\">Indicators</SelectItem>\n            <SelectItem value=\"Scripts\">Scripts</SelectItem>\n            <SelectItem value=\"Templates\">Templates</SelectItem>\n          </SelectContent>\n        </Select>\n\n        <Select value={statusFilter} onValueChange={setStatusFilter}>\n          <SelectTrigger className=\"w-full md:w-[180px]\" data-testid=\"select-status-filter\">\n            <SelectValue placeholder=\"All Statuses\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">All Statuses</SelectItem>\n            <SelectItem value=\"pending\">Pending</SelectItem>\n            <SelectItem value=\"approved\">Approved</SelectItem>\n            <SelectItem value=\"rejected\">Rejected</SelectItem>\n          </SelectContent>\n        </Select>\n\n        <Select value={priceFilter} onValueChange={setPriceFilter}>\n          <SelectTrigger className=\"w-full md:w-[180px]\" data-testid=\"select-price-filter\">\n            <SelectValue placeholder=\"All Prices\" />\n          </SelectTrigger>\n          <SelectContent>\n            <SelectItem value=\"all\">All Prices</SelectItem>\n            <SelectItem value=\"free\">Free (0 coins)</SelectItem>\n            <SelectItem value=\"low\">Low (1-100)</SelectItem>\n            <SelectItem value=\"medium\">Medium (101-500)</SelectItem>\n            <SelectItem value=\"high\">High (500+)</SelectItem>\n          </SelectContent>\n        </Select>\n\n        <Button\n          variant=\"outline\"\n          onClick={handleClearFilters}\n          data-testid=\"button-clear-filters\"\n        >\n          Clear Filters\n        </Button>\n      </div>\n\n      {/* Stats Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card data-testid=\"card-total-items\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Items</CardTitle>\n            <Package className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-total-items\">\n                  {stats.totalItems}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {stats.pendingItems} pending approval\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-total-sales\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Sales</CardTitle>\n            <TrendingUp className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-total-sales\">\n                  {stats.totalSales}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  +{stats.salesThisWeek} this week\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n\n        <Card data-testid=\"card-total-revenue\">\n          <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n            <CardTitle className=\"text-sm font-medium\">Total Revenue</CardTitle>\n            <DollarSign className=\"h-4 w-4 text-muted-foreground\" />\n          </CardHeader>\n          <CardContent>\n            {statsLoading ? (\n              <Skeleton className=\"h-8 w-20\" />\n            ) : (\n              <>\n                <div className=\"text-2xl font-bold\" data-testid=\"text-marketplace-revenue\">\n                  ${stats.totalRevenue}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  +${stats.revenueThisWeek} this week\n                </p>\n              </>\n            )}\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Revenue Chart */}\n      <Card data-testid=\"card-revenue-chart\">\n        <CardHeader>\n          <CardTitle>Revenue Trend (Last 30 Days)</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {revenueLoading ? (\n            <Skeleton className=\"h-64\" />\n          ) : revenueData.length > 0 ? (\n            <ResponsiveContainer width=\"100%\" height={250}>\n              <LineChart data={revenueData}>\n                <CartesianGrid strokeDasharray=\"3 3\" />\n                <XAxis dataKey=\"date\" />\n                <YAxis />\n                <Tooltip />\n                <Line type=\"monotone\" dataKey=\"revenue\" stroke=\"hsl(var(--primary))\" strokeWidth={2} />\n              </LineChart>\n            </ResponsiveContainer>\n          ) : (\n            <div className=\"h-64 flex items-center justify-center text-muted-foreground\">\n              No revenue data available\n            </div>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Top Selling Items */}\n      <Card data-testid=\"card-top-selling\">\n        <CardHeader>\n          <CardTitle>Top Selling Items</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {topLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(3)].map((_, i) => (\n                <Skeleton key={i} className=\"h-12\" />\n              ))}\n            </div>\n          ) : topSelling.length > 0 ? (\n            <div className=\"space-y-3\">\n              {topSelling.map((item, index) => (\n                <div key={item.id} className=\"flex items-center justify-between p-3 rounded-lg border\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"text-lg font-bold text-muted-foreground\">#{index + 1}</div>\n                    <div>\n                      <p className=\"font-medium\">{item.title}</p>\n                      <p className=\"text-sm text-muted-foreground\">{item.sales} sales</p>\n                    </div>\n                  </div>\n                  <Badge>{item.coinPrice} coins</Badge>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"text-muted-foreground text-center py-8\">No sales data available</p>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Top Vendors Section */}\n      <Card data-testid=\"card-top-vendors\">\n        <CardHeader>\n          <CardTitle>Top Vendors</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {topVendorsLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(5)].map((_, i) => (\n                <Skeleton key={i} className=\"h-12\" />\n              ))}\n            </div>\n          ) : topVendors.length > 0 ? (\n            <div className=\"space-y-3\">\n              {topVendors.map((vendor, index) => (\n                <div key={vendor.sellerId} className=\"flex items-center justify-between p-3 rounded-lg border\">\n                  <div className=\"flex items-center gap-3\">\n                    <div className=\"text-lg font-bold text-muted-foreground\">#{index + 1}</div>\n                    <div>\n                      <p className=\"font-medium\">{vendor.sellerUsername}</p>\n                      <p className=\"text-sm text-muted-foreground\">{vendor.totalSales} sales • {vendor.itemCount} items</p>\n                    </div>\n                  </div>\n                  <Badge>{vendor.totalRevenue} coins earned</Badge>\n                </div>\n              ))}\n            </div>\n          ) : (\n            <p className=\"text-muted-foreground text-center py-8\">No vendor data available</p>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* Marketplace Items Table */}\n      <Card data-testid=\"card-marketplace-items\">\n        <CardHeader>\n          <CardTitle>Marketplace Items ({totalItems})</CardTitle>\n        </CardHeader>\n        <CardContent>\n          {itemsLoading ? (\n            <div className=\"space-y-2\">\n              {[...Array(5)].map((_, i) => (\n                <Skeleton key={i} className=\"h-16\" />\n              ))}\n            </div>\n          ) : (\n            <>\n              <div className=\"overflow-x-auto\">\n                <Table>\n                  <TableHeader>\n                    <TableRow>\n                      <TableHead>Title</TableHead>\n                      <TableHead>Seller</TableHead>\n                      <TableHead>Price</TableHead>\n                      <TableHead>Sales</TableHead>\n                      <TableHead>Status</TableHead>\n                      <TableHead>Listed</TableHead>\n                      <TableHead>Actions</TableHead>\n                    </TableRow>\n                  </TableHeader>\n                  <TableBody>\n                    {items.length > 0 ? (\n                      items.map((item) => (\n                        <TableRow key={item.id} data-testid={`item-row-${item.id}`}>\n                          <TableCell data-testid={`item-title-${item.id}`}>\n                            {item.title}\n                          </TableCell>\n                          <TableCell>{item.sellerUsername}</TableCell>\n                          <TableCell>{item.coinPrice} coins</TableCell>\n                          <TableCell>{item.sales}</TableCell>\n                          <TableCell>\n                            <Badge variant={item.status === 'approved' ? 'default' : 'secondary'}>\n                              {item.status}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            {formatDistanceToNow(new Date(item.createdAt), { addSuffix: true })}\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex gap-2 flex-wrap\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={() => setViewItemId(item.id)}\n                                data-testid={`button-view-item-${item.id}`}\n                              >\n                                <Eye className=\"h-4 w-4\" />\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => approveItemMutation.mutate(item.id)}\n                                disabled={item.status === 'approved' || approveItemMutation.isPending}\n                                data-testid={`button-approve-item-${item.id}`}\n                              >\n                                <CheckCircle className=\"h-4 w-4 mr-1\" />\n                                Approve\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => setRejectItemId(item.id)}\n                                disabled={item.status === 'rejected'}\n                                data-testid={`button-reject-item-${item.id}`}\n                              >\n                                <XCircle className=\"h-4 w-4 mr-1\" />\n                                Reject\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => setFeatureItemId(item.id)}\n                                disabled={item.status !== 'approved'}\n                                data-testid={`button-feature-item-${item.id}`}\n                              >\n                                <Star className=\"h-4 w-4 mr-1\" />\n                                Feature\n                              </Button>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      ))\n                    ) : (\n                      <TableRow>\n                        <TableCell colSpan={7} className=\"text-center py-8 text-muted-foreground\">\n                          No marketplace items found\n                        </TableCell>\n                      </TableRow>\n                    )}\n                  </TableBody>\n                </Table>\n              </div>\n\n              {/* Pagination Controls */}\n              {totalItems > 0 && (\n                <div className=\"flex flex-col md:flex-row items-center justify-between gap-4 px-2 py-4 border-t mt-4\">\n                  <div className=\"text-sm text-muted-foreground\">\n                    Showing {(currentPage - 1) * pageSize + 1}-{Math.min(currentPage * pageSize, totalItems)} of {totalItems} items\n                  </div>\n\n                  <div className=\"flex flex-col md:flex-row items-center gap-6\">\n                    <div className=\"flex items-center gap-2\">\n                      <span className=\"text-sm\">Items per page:</span>\n                      <Select value={pageSize.toString()} onValueChange={(val) => setPageSize(parseInt(val))}>\n                        <SelectTrigger className=\"w-[80px]\" data-testid=\"select-page-size\">\n                          <SelectValue />\n                        </SelectTrigger>\n                        <SelectContent>\n                          <SelectItem value=\"10\">10</SelectItem>\n                          <SelectItem value=\"20\">20</SelectItem>\n                          <SelectItem value=\"50\">50</SelectItem>\n                          <SelectItem value=\"100\">100</SelectItem>\n                        </SelectContent>\n                      </Select>\n                    </div>\n\n                    <div className=\"flex items-center gap-2\">\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => setCurrentPage(1)}\n                        disabled={currentPage === 1}\n                        data-testid=\"button-first-page\"\n                      >\n                        First\n                      </Button>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => setCurrentPage(currentPage - 1)}\n                        disabled={currentPage === 1}\n                        data-testid=\"button-prev-page\"\n                      >\n                        Previous\n                      </Button>\n                      <span className=\"text-sm\">\n                        Page {currentPage} of {totalPages}\n                      </span>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => setCurrentPage(currentPage + 1)}\n                        disabled={currentPage === totalPages}\n                        data-testid=\"button-next-page\"\n                      >\n                        Next\n                      </Button>\n                      <Button\n                        variant=\"outline\"\n                        size=\"sm\"\n                        onClick={() => setCurrentPage(totalPages)}\n                        disabled={currentPage === totalPages}\n                        data-testid=\"button-last-page\"\n                      >\n                        Last\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              )}\n            </>\n          )}\n        </CardContent>\n      </Card>\n\n      {/* View Item Details Modal */}\n      <Dialog open={viewItemId !== null} onOpenChange={() => setViewItemId(null)}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh] overflow-y-auto\">\n          <DialogHeader>\n            <DialogTitle>Item Details</DialogTitle>\n          </DialogHeader>\n          {viewItemLoading ? (\n            <div className=\"space-y-4\">\n              <Skeleton className=\"h-20\" />\n              <Skeleton className=\"h-20\" />\n              <Skeleton className=\"h-32\" />\n            </div>\n          ) : viewItemData ? (\n            <div className=\"space-y-6\">\n              <div className=\"grid grid-cols-2 gap-4\">\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Title</p>\n                  <p className=\"font-medium\">{viewItemData.title}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Category</p>\n                  <p className=\"font-medium\">{viewItemData.category}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Price</p>\n                  <p className=\"font-medium\">{viewItemData.coinPrice} coins</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Status</p>\n                  <Badge>{viewItemData.status}</Badge>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Seller</p>\n                  <p className=\"font-medium\">{viewItemData.sellerUsername}</p>\n                </div>\n                <div>\n                  <p className=\"text-sm text-muted-foreground\">Sales</p>\n                  <p className=\"font-medium\">{viewItemData.sales}</p>\n                </div>\n              </div>\n\n              <div>\n                <p className=\"text-sm text-muted-foreground mb-2\">Description</p>\n                <p className=\"text-sm\">{viewItemData.description}</p>\n              </div>\n\n              {viewItemData.recentPurchases && viewItemData.recentPurchases.length > 0 && (\n                <div>\n                  <p className=\"text-sm font-medium mb-2\">Recent Purchases</p>\n                  <Table>\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Buyer</TableHead>\n                        <TableHead>Price</TableHead>\n                        <TableHead>Date</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {viewItemData.recentPurchases.map((purchase) => (\n                        <TableRow key={purchase.id}>\n                          <TableCell>{purchase.buyerUsername}</TableCell>\n                          <TableCell>{purchase.coins} coins</TableCell>\n                          <TableCell>{formatDistanceToNow(new Date(purchase.purchasedAt), { addSuffix: true })}</TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </div>\n          ) : (\n            <p className=\"text-muted-foreground text-center py-8\">Item not found</p>\n          )}\n        </DialogContent>\n      </Dialog>\n\n      {/* Reject Item Modal */}\n      <Dialog open={rejectItemId !== null} onOpenChange={() => setRejectItemId(null)}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Reject Marketplace Item</DialogTitle>\n            <DialogDescription>\n              Please provide a reason for rejecting this item. The seller will see this reason.\n            </DialogDescription>\n          </DialogHeader>\n          <Form {...rejectForm}>\n            <form onSubmit={rejectForm.handleSubmit(onRejectSubmit)} className=\"space-y-4\">\n              <FormField\n                control={rejectForm.control}\n                name=\"reason\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Rejection Reason *</FormLabel>\n                    <Select\n                      onValueChange={(val) => {\n                        if (val !== 'custom') {\n                          field.onChange(val);\n                        }\n                      }}\n                    >\n                      <SelectTrigger data-testid=\"select-reject-reason\">\n                        <SelectValue placeholder=\"Select a reason...\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"Poor description\">Poor description</SelectItem>\n                        <SelectItem value=\"Inappropriate content\">Inappropriate content</SelectItem>\n                        <SelectItem value=\"Duplicate listing\">Duplicate listing</SelectItem>\n                        <SelectItem value=\"Missing files\">Missing files</SelectItem>\n                        <SelectItem value=\"Price too high\">Price too high</SelectItem>\n                        <SelectItem value=\"custom\">Custom reason...</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormControl>\n                      <Textarea\n                        placeholder=\"Or enter a custom reason...\"\n                        {...field}\n                        data-testid=\"textarea-reject-reason\"\n                        className=\"min-h-[100px]\"\n                      />\n                    </FormControl>\n                    <FormDescription>Minimum 10 characters</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <div className=\"flex gap-2\">\n                <Button type=\"submit\" disabled={rejectMutation.isPending} data-testid=\"button-confirm-reject\">\n                  {rejectMutation.isPending ? 'Rejecting...' : 'Reject Item'}\n                </Button>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setRejectItemId(null)}>\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n\n      {/* Feature Item Modal */}\n      <Dialog open={featureItemId !== null} onOpenChange={() => setFeatureItemId(null)}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Feature Marketplace Item</DialogTitle>\n            <DialogDescription>\n              Featured items appear prominently on the marketplace homepage.\n            </DialogDescription>\n          </DialogHeader>\n          <Form {...featureForm}>\n            <form onSubmit={featureForm.handleSubmit(onFeatureSubmit)} className=\"space-y-4\">\n              <FormField\n                control={featureForm.control}\n                name=\"durationDays\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Feature Duration (Days) *</FormLabel>\n                    <FormControl>\n                      <Input\n                        type=\"number\"\n                        min={1}\n                        max={365}\n                        {...field}\n                        onChange={(e) => field.onChange(parseInt(e.target.value) || 1)}\n                        data-testid=\"input-feature-duration\"\n                      />\n                    </FormControl>\n                    <FormDescription>How long should this item be featured? (1-365 days)</FormDescription>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              <div className=\"flex gap-2\">\n                <Button type=\"submit\" disabled={featureMutation.isPending} data-testid=\"button-confirm-feature\">\n                  {featureMutation.isPending ? 'Featuring...' : 'Feature Item'}\n                </Button>\n                <Button type=\"button\" variant=\"outline\" onClick={() => setFeatureItemId(null)}>\n                  Cancel\n                </Button>\n              </div>\n            </form>\n          </Form>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}