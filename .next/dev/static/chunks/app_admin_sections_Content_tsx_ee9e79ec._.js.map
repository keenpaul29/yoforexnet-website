{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 4, "column": 0}, "map": {"version":3,"sources":["file:///home/runner/workspace/app/admin/sections/Content.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Dialog, DialogContent, DialogDescription, DialogHeader, DialogTitle, DialogFooter } from \"@/components/ui/dialog\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { \n  CheckCircle, \n  XCircle, \n  Eye, \n  AlertTriangle, \n  Clock, \n  User, \n  FileText, \n  TrendingUp,\n  RefreshCw,\n  ChevronLeft,\n  ChevronRight,\n  Ban,\n  UserX,\n  Shield,\n  Trash2\n} from \"lucide-react\";\nimport { formatDistanceToNow, format } from \"date-fns\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\n\ninterface QueueItem {\n  id: string;\n  type: 'thread' | 'reply';\n  title?: string;\n  body: string;\n  authorId: string;\n  authorUsername: string;\n  categorySlug?: string;\n  categoryName?: string;\n  threadId?: string;\n  threadTitle?: string;\n  createdAt: string;\n  wordCount: number;\n  hasLinks: boolean;\n  hasImages: boolean;\n  status: string;\n}\n\ninterface ReportedItem {\n  contentId: string;\n  contentType: 'thread' | 'reply';\n  contentPreview: string;\n  authorId: string;\n  authorUsername: string;\n  reportCount: number;\n  reasons: string[];\n  firstReportedAt: string;\n  status: 'pending' | 'resolved' | 'dismissed';\n}\n\ninterface QueueCount {\n  pending: number;\n  urgentOld: number;\n  urgentRecent: number;\n}\n\ninterface ReportedCount {\n  pending: number;\n  resolved: number;\n  dismissed: number;\n}\n\ninterface HistoryItem {\n  id: string;\n  moderatorUsername: string;\n  actionType: string;\n  contentType: string;\n  contentTitle: string;\n  reason?: string;\n  createdAt: string;\n}\n\ninterface ModerationStats {\n  todayApproved: number;\n  todayRejected: number;\n  todayReportsHandled: number;\n  totalModeratedToday: number;\n  avgResponseTimeMinutes: number;\n  mostActiveModerator: string;\n  pendingUnderOneHour: number;\n  pendingOverTwentyFourHours: number;\n}\n\ninterface ContentDetails {\n  id: string;\n  type: 'thread' | 'reply';\n  title?: string;\n  body: string;\n  author: {\n    id: string;\n    username: string;\n    reputation: number;\n    role: string;\n    createdAt: string;\n    badges?: string[];\n  };\n  recentPosts: Array<{\n    id: string;\n    title: string;\n    type: string;\n    createdAt: string;\n  }>;\n  warnings: Array<{\n    reason: string;\n    createdAt: string;\n    moderator: string;\n  }>;\n  parentThread?: {\n    id: string;\n    title: string;\n  };\n  metadata: {\n    createdAt: string;\n    wordCount: number;\n    hasLinks: boolean;\n    hasImages: boolean;\n    category?: string;\n  };\n}\n\ninterface ReportDetails {\n  content: {\n    id: string;\n    type: string;\n    title?: string;\n    body: string;\n    authorUsername: string;\n  };\n  reports: Array<{\n    reporterUsername: string;\n    reason: string;\n    description: string;\n    createdAt: string;\n  }>;\n  author: {\n    username: string;\n    reputation: number;\n    role: string;\n  };\n}\n\nexport default function AdminContent() {\n  const { toast } = useToast();\n  \n  const [queueType, setQueueType] = useState(\"all\");\n  const [queuePage, setQueuePage] = useState(1);\n  const [queuePerPage, setQueuePerPage] = useState(20);\n  const [selectedIds, setSelectedIds] = useState<string[]>([]);\n  \n  const [reportedStatus, setReportedStatus] = useState(\"pending\");\n  const [reportedPage, setReportedPage] = useState(1);\n  const [reportedPerPage, setReportedPerPage] = useState(20);\n  \n  const [historyLimit, setHistoryLimit] = useState(100);\n  const [historyModeratorFilter, setHistoryModeratorFilter] = useState(\"all\");\n  \n  const [detailsModalOpen, setDetailsModalOpen] = useState(false);\n  const [selectedContent, setSelectedContent] = useState<ContentDetails | null>(null);\n  \n  const [rejectDialogOpen, setRejectDialogOpen] = useState(false);\n  const [rejectContentId, setRejectContentId] = useState<string | null>(null);\n  const [rejectReason, setRejectReason] = useState(\"\");\n  const [rejectDeletePermanently, setRejectDeletePermanently] = useState(false);\n  \n  const [reportDetailsModalOpen, setReportDetailsModalOpen] = useState(false);\n  const [selectedReport, setSelectedReport] = useState<ReportDetails | null>(null);\n  const [selectedReportId, setSelectedReportId] = useState<string | null>(null);\n  \n  const [dismissReportDialogOpen, setDismissReportDialogOpen] = useState(false);\n  const [dismissReason, setDismissReason] = useState(\"\");\n  \n  const [suspendDialogOpen, setSuspendDialogOpen] = useState(false);\n  const [suspendDays, setSuspendDays] = useState<number>(7);\n  const [suspendReason, setSuspendReason] = useState(\"\");\n  const [suspendAuthorId, setSuspendAuthorId] = useState<string | null>(null);\n  \n  const [banDialogOpen, setBanDialogOpen] = useState(false);\n  const [banReason, setBanReason] = useState(\"\");\n  const [banConfirmed, setBanConfirmed] = useState(false);\n  const [banAuthorId, setBanAuthorId] = useState<string | null>(null);\n  \n  const [bulkApproveDialogOpen, setBulkApproveDialogOpen] = useState(false);\n  const [bulkRejectDialogOpen, setBulkRejectDialogOpen] = useState(false);\n  const [bulkRejectReason, setBulkRejectReason] = useState(\"\");\n\n  const { data: queueData, isLoading: queueLoading } = useQuery<{ items: QueueItem[]; total: number; pages: number }>({\n    queryKey: ['/api/moderation/queue', { type: queueType, page: queuePage, perPage: queuePerPage }],\n    refetchInterval: 30000,\n  });\n\n  const { data: queueCount } = useQuery<QueueCount>({\n    queryKey: ['/api/moderation/queue/count'],\n    refetchInterval: 30000,\n  });\n\n  const { data: reportedData, isLoading: reportedLoading } = useQuery<{ items: ReportedItem[]; total: number; pages: number }>({\n    queryKey: ['/api/moderation/reported', { status: reportedStatus, page: reportedPage, perPage: reportedPerPage }],\n    refetchInterval: 30000,\n  });\n\n  const { data: reportedCount } = useQuery<ReportedCount>({\n    queryKey: ['/api/moderation/reported/count'],\n    refetchInterval: 30000,\n  });\n\n  const { data: historyData, isLoading: historyLoading } = useQuery<HistoryItem[]>({\n    queryKey: ['/api/moderation/history', { limit: historyLimit, moderatorId: historyModeratorFilter !== 'all' ? historyModeratorFilter : undefined }],\n    refetchInterval: false,\n  });\n\n  const { data: stats, isLoading: statsLoading } = useQuery<ModerationStats>({\n    queryKey: ['/api/moderation/stats'],\n    refetchInterval: 60000,\n  });\n\n  const approveMutation = useMutation({\n    mutationFn: async (contentId: string) => {\n      return apiRequest(\"POST\", `/api/moderation/${contentId}/approve`, {});\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/queue'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/queue/count'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/stats'] });\n      toast({ title: \"Content approved successfully\" });\n      setSelectedIds([]);\n    },\n    onError: () => {\n      toast({ title: \"Failed to approve content\", variant: \"destructive\" });\n    }\n  });\n\n  const rejectMutation = useMutation({\n    mutationFn: async ({ contentId, reason, deletePermanently }: { contentId: string; reason: string; deletePermanently?: boolean }) => {\n      return apiRequest(\"POST\", `/api/moderation/${contentId}/reject`, { reason, deletePermanently });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/queue'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/queue/count'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/stats'] });\n      toast({ title: \"Content rejected successfully\" });\n      setRejectDialogOpen(false);\n      setRejectReason(\"\");\n      setRejectDeletePermanently(false);\n      setRejectContentId(null);\n      setDetailsModalOpen(false);\n      setSelectedIds([]);\n    },\n    onError: () => {\n      toast({ title: \"Failed to reject content\", variant: \"destructive\" });\n    }\n  });\n\n  const bulkApproveMutation = useMutation({\n    mutationFn: async (contentIds: string[]) => {\n      return apiRequest(\"POST\", \"/api/moderation/bulk-approve\", { contentIds });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/queue'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/queue/count'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/stats'] });\n      toast({ title: `Successfully approved ${selectedIds.length} items` });\n      setSelectedIds([]);\n      setBulkApproveDialogOpen(false);\n    },\n    onError: () => {\n      toast({ title: \"Failed to approve selected items\", variant: \"destructive\" });\n    }\n  });\n\n  const bulkRejectMutation = useMutation({\n    mutationFn: async ({ contentIds, reason }: { contentIds: string[]; reason: string }) => {\n      return apiRequest(\"POST\", \"/api/moderation/bulk-reject\", { contentIds, reason });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/queue'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/queue/count'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/stats'] });\n      toast({ title: `Successfully rejected ${selectedIds.length} items` });\n      setSelectedIds([]);\n      setBulkRejectDialogOpen(false);\n      setBulkRejectReason(\"\");\n    },\n    onError: () => {\n      toast({ title: \"Failed to reject selected items\", variant: \"destructive\" });\n    }\n  });\n\n  const dismissReportMutation = useMutation({\n    mutationFn: async ({ reportId, reason }: { reportId: string; reason?: string }) => {\n      return apiRequest(\"POST\", `/api/moderation/report/${reportId}/dismiss`, { reason });\n    },\n    onSuccess: () => {\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/reported'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/reported/count'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/stats'] });\n      toast({ title: \"Report dismissed successfully\" });\n      setDismissReportDialogOpen(false);\n      setDismissReason(\"\");\n      setReportDetailsModalOpen(false);\n    },\n    onError: () => {\n      toast({ title: \"Failed to dismiss report\", variant: \"destructive\" });\n    }\n  });\n\n  const reportActionMutation = useMutation({\n    mutationFn: async ({ reportId, action, reason, suspendDays }: { reportId: string; action: 'delete' | 'warn' | 'suspend' | 'ban'; reason?: string; suspendDays?: number }) => {\n      return apiRequest(\"POST\", `/api/moderation/report/${reportId}/action`, { action, reason, suspendDays });\n    },\n    onSuccess: (_, variables) => {\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/reported'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/reported/count'] });\n      queryClient.invalidateQueries({ queryKey: ['/api/moderation/stats'] });\n      \n      const actionText = variables.action === 'delete' ? 'deleted' : \n                        variables.action === 'warn' ? 'warned' : \n                        variables.action === 'suspend' ? 'suspended' : 'banned';\n      toast({ title: `Author ${actionText} successfully` });\n      \n      setReportDetailsModalOpen(false);\n      setSuspendDialogOpen(false);\n      setBanDialogOpen(false);\n      setSuspendReason(\"\");\n      setBanReason(\"\");\n      setBanConfirmed(false);\n    },\n    onError: () => {\n      toast({ title: \"Failed to take action\", variant: \"destructive\" });\n    }\n  });\n\n  const handleSelectAll = (checked: boolean) => {\n    if (checked) {\n      const currentPageIds = (queueData?.items || []).map(item => item.id);\n      setSelectedIds(currentPageIds);\n    } else {\n      setSelectedIds([]);\n    }\n  };\n\n  const handleSelectOne = (id: string, checked: boolean) => {\n    if (checked) {\n      setSelectedIds([...selectedIds, id]);\n    } else {\n      setSelectedIds(selectedIds.filter(itemId => itemId !== id));\n    }\n  };\n\n  const handleViewDetails = async (contentId: string) => {\n    try {\n      const response = await fetch(`/api/moderation/${contentId}/details`);\n      const data = await response.json();\n      setSelectedContent(data);\n      setDetailsModalOpen(true);\n    } catch (error) {\n      toast({ title: \"Failed to load content details\", variant: \"destructive\" });\n    }\n  };\n\n  const handleViewReportDetails = async (contentId: string) => {\n    try {\n      const response = await fetch(`/api/moderation/report/${contentId}`);\n      const data = await response.json();\n      setSelectedReport(data);\n      setSelectedReportId(contentId);\n      setReportDetailsModalOpen(true);\n    } catch (error) {\n      toast({ title: \"Failed to load report details\", variant: \"destructive\" });\n    }\n  };\n\n  const handleReject = (contentId: string) => {\n    setRejectContentId(contentId);\n    setRejectDialogOpen(true);\n  };\n\n  const handleConfirmReject = () => {\n    if (!rejectContentId || !rejectReason || rejectReason.length < 10 || rejectReason.length > 500) {\n      toast({ title: \"Reason must be between 10 and 500 characters\", variant: \"destructive\" });\n      return;\n    }\n    rejectMutation.mutate({ \n      contentId: rejectContentId, \n      reason: rejectReason,\n      deletePermanently: rejectDeletePermanently\n    });\n  };\n\n  const handleBulkApprove = () => {\n    if (selectedIds.length === 0 || selectedIds.length > 100) return;\n    setBulkApproveDialogOpen(true);\n  };\n\n  const handleBulkReject = () => {\n    if (selectedIds.length === 0 || selectedIds.length > 100) return;\n    setBulkRejectDialogOpen(true);\n  };\n\n  const handleConfirmBulkApprove = () => {\n    bulkApproveMutation.mutate(selectedIds);\n  };\n\n  const handleConfirmBulkReject = () => {\n    if (!bulkRejectReason || bulkRejectReason.length < 10 || bulkRejectReason.length > 500) {\n      toast({ title: \"Reason must be between 10 and 500 characters\", variant: \"destructive\" });\n      return;\n    }\n    bulkRejectMutation.mutate({ contentIds: selectedIds, reason: bulkRejectReason });\n  };\n\n  const handleSuspendAuthor = (authorId: string) => {\n    setSuspendAuthorId(authorId);\n    setSuspendDialogOpen(true);\n  };\n\n  const handleConfirmSuspend = () => {\n    if (!selectedReportId || !suspendReason || suspendReason.length < 10 || suspendReason.length > 500) {\n      toast({ title: \"Reason must be between 10 and 500 characters\", variant: \"destructive\" });\n      return;\n    }\n    if (suspendDays < 1 || suspendDays > 365) {\n      toast({ title: \"Suspend days must be between 1 and 365\", variant: \"destructive\" });\n      return;\n    }\n    reportActionMutation.mutate({ \n      reportId: selectedReportId, \n      action: 'suspend', \n      reason: suspendReason,\n      suspendDays\n    });\n  };\n\n  const handleBanAuthor = (authorId: string) => {\n    setBanAuthorId(authorId);\n    setBanDialogOpen(true);\n  };\n\n  const handleConfirmBan = () => {\n    if (!selectedReportId || !banReason || banReason.length < 10 || banReason.length > 500) {\n      toast({ title: \"Reason must be between 10 and 500 characters\", variant: \"destructive\" });\n      return;\n    }\n    if (!banConfirmed) {\n      toast({ title: \"Please confirm that you understand this action is permanent\", variant: \"destructive\" });\n      return;\n    }\n    reportActionMutation.mutate({ \n      reportId: selectedReportId, \n      action: 'ban', \n      reason: banReason\n    });\n  };\n\n  const truncateText = (text: string, maxLength: number) => {\n    if (text.length <= maxLength) return text;\n    return text.substring(0, maxLength) + '...';\n  };\n\n  const queueItems = queueData?.items || [];\n  const reportedItems = reportedData?.items || [];\n  const historyItems = historyData || [];\n\n  const allSelected = queueItems.length > 0 && selectedIds.length === queueItems.length;\n  const someSelected = selectedIds.length > 0 && selectedIds.length < queueItems.length;\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between gap-4 flex-wrap\">\n        <h1 className=\"text-3xl font-bold\">Content Moderation</h1>\n      </div>\n\n      <Tabs defaultValue=\"queue\" className=\"space-y-4\">\n        <TabsList>\n          <TabsTrigger value=\"queue\" data-testid=\"tab-moderation-queue\">\n            Moderation Queue\n            {queueCount && queueCount.pending > 0 && (\n              <Badge variant=\"destructive\" className=\"ml-2\">{queueCount.pending}</Badge>\n            )}\n          </TabsTrigger>\n          <TabsTrigger value=\"reported\" data-testid=\"tab-reported-content\">\n            Reported Content\n            {reportedCount && reportedCount.pending > 0 && (\n              <Badge variant=\"destructive\" className=\"ml-2\">{reportedCount.pending}</Badge>\n            )}\n          </TabsTrigger>\n          <TabsTrigger value=\"history\" data-testid=\"tab-moderation-history\">\n            Moderation History\n          </TabsTrigger>\n          <TabsTrigger value=\"stats\" data-testid=\"tab-moderation-stats\">\n            Statistics\n          </TabsTrigger>\n        </TabsList>\n\n        <TabsContent value=\"queue\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between gap-4 flex-wrap\">\n                <CardTitle>Content Type</CardTitle>\n                <Tabs value={queueType} onValueChange={setQueueType} className=\"w-auto\">\n                  <TabsList>\n                    <TabsTrigger value=\"all\" data-testid=\"filter-content-type-all\">All</TabsTrigger>\n                    <TabsTrigger value=\"thread\" data-testid=\"filter-content-type-thread\">Threads</TabsTrigger>\n                    <TabsTrigger value=\"reply\" data-testid=\"filter-content-type-reply\">Replies</TabsTrigger>\n                  </TabsList>\n                </Tabs>\n              </div>\n            </CardHeader>\n          </Card>\n\n          {selectedIds.length > 0 && (\n            <Card>\n              <CardContent className=\"pt-6\">\n                <div className=\"flex gap-2 flex-wrap\">\n                  <Button \n                    onClick={handleBulkApprove}\n                    disabled={selectedIds.length === 0 || selectedIds.length > 100 || bulkApproveMutation.isPending}\n                    data-testid=\"button-bulk-approve\"\n                  >\n                    <CheckCircle className=\"h-4 w-4 mr-2\" />\n                    Approve Selected ({selectedIds.length})\n                  </Button>\n                  <Button \n                    variant=\"destructive\"\n                    onClick={handleBulkReject}\n                    disabled={selectedIds.length === 0 || selectedIds.length > 100 || bulkRejectMutation.isPending}\n                    data-testid=\"button-bulk-reject\"\n                  >\n                    <XCircle className=\"h-4 w-4 mr-2\" />\n                    Reject Selected ({selectedIds.length})\n                  </Button>\n                  {selectedIds.length > 100 && (\n                    <Alert className=\"flex-1\">\n                      <AlertDescription>\n                        Maximum 100 items can be selected for bulk actions\n                      </AlertDescription>\n                    </Alert>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Pending Content ({queueData?.total || 0})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {queueLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : queueItems.length === 0 ? (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  No pending items in queue\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table data-testid=\"table-moderation-queue\">\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead className=\"w-12\">\n                          <Checkbox\n                            checked={allSelected}\n                            onCheckedChange={handleSelectAll}\n                            data-testid=\"checkbox-select-all\"\n                          />\n                        </TableHead>\n                        <TableHead>Content Preview</TableHead>\n                        <TableHead>Author</TableHead>\n                        <TableHead>Category</TableHead>\n                        <TableHead>Submitted</TableHead>\n                        <TableHead>Word Count</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {queueItems.map((item) => (\n                        <TableRow key={item.id}>\n                          <TableCell>\n                            <Checkbox\n                              checked={selectedIds.includes(item.id)}\n                              onCheckedChange={(checked) => handleSelectOne(item.id, checked as boolean)}\n                              data-testid={`checkbox-select-${item.id}`}\n                            />\n                          </TableCell>\n                          <TableCell className=\"max-w-md\">\n                            <div className=\"space-y-1\">\n                              {item.title && (\n                                <div className=\"font-medium\">{truncateText(item.title, 50)}</div>\n                              )}\n                              <div className=\"text-sm text-muted-foreground\">\n                                {truncateText(item.body, 100)}\n                              </div>\n                              <div className=\"flex gap-1\">\n                                <Badge variant=\"outline\">{item.type}</Badge>\n                                {item.hasLinks && <Badge variant=\"secondary\">Links</Badge>}\n                                {item.hasImages && <Badge variant=\"secondary\">Images</Badge>}\n                              </div>\n                            </div>\n                          </TableCell>\n                          <TableCell>@{item.authorUsername}</TableCell>\n                          <TableCell>\n                            {item.type === 'thread' ? item.categoryName : item.threadTitle}\n                          </TableCell>\n                          <TableCell>\n                            {formatDistanceToNow(new Date(item.createdAt), { addSuffix: true })}\n                          </TableCell>\n                          <TableCell>{item.wordCount}</TableCell>\n                          <TableCell>\n                            <div className=\"flex gap-2 flex-wrap\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={() => handleViewDetails(item.id)}\n                                data-testid={`button-view-details-${item.id}`}\n                              >\n                                <Eye className=\"h-4 w-4 mr-1\" />\n                                View\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"outline\"\n                                onClick={() => approveMutation.mutate(item.id)}\n                                disabled={approveMutation.isPending}\n                                data-testid={`button-approve-${item.id}`}\n                              >\n                                <CheckCircle className=\"h-4 w-4 mr-1\" />\n                                Approve\n                              </Button>\n                              <Button\n                                size=\"sm\"\n                                variant=\"destructive\"\n                                onClick={() => handleReject(item.id)}\n                                data-testid={`button-reject-${item.id}`}\n                              >\n                                <XCircle className=\"h-4 w-4 mr-1\" />\n                                Reject\n                              </Button>\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n\n              {queueData && queueData.pages > 1 && (\n                <div className=\"flex items-center justify-between gap-4 mt-4 flex-wrap\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm text-muted-foreground\">Items per page:</span>\n                    <Select value={queuePerPage.toString()} onValueChange={(v) => setQueuePerPage(Number(v))}>\n                      <SelectTrigger className=\"w-20\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"10\">10</SelectItem>\n                        <SelectItem value=\"20\">20</SelectItem>\n                        <SelectItem value=\"50\">50</SelectItem>\n                        <SelectItem value=\"100\">100</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setQueuePage(p => Math.max(1, p - 1))}\n                      disabled={queuePage === 1}\n                    >\n                      <ChevronLeft className=\"h-4 w-4\" />\n                      Previous\n                    </Button>\n                    <span className=\"text-sm\">\n                      Page {queuePage} of {queueData.pages}\n                    </span>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setQueuePage(p => Math.min(queueData.pages, p + 1))}\n                      disabled={queuePage === queueData.pages}\n                    >\n                      Next\n                      <ChevronRight className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"reported\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between gap-4 flex-wrap\">\n                <CardTitle>Filter by Status</CardTitle>\n                <Select value={reportedStatus} onValueChange={setReportedStatus}>\n                  <SelectTrigger className=\"w-48\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"pending\">Pending</SelectItem>\n                    <SelectItem value=\"resolved\">Resolved</SelectItem>\n                    <SelectItem value=\"dismissed\">Dismissed</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n            </CardHeader>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Reported Content ({reportedData?.total || 0})</CardTitle>\n            </CardHeader>\n            <CardContent>\n              {reportedLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-16\" />\n                  ))}\n                </div>\n              ) : reportedItems.length === 0 ? (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  No reported content found\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table data-testid=\"table-reported-content\">\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Content Preview</TableHead>\n                        <TableHead>Author</TableHead>\n                        <TableHead>Reports</TableHead>\n                        <TableHead>Reasons</TableHead>\n                        <TableHead>First Reported</TableHead>\n                        <TableHead>Status</TableHead>\n                        <TableHead>Actions</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {reportedItems.map((item) => (\n                        <TableRow key={item.contentId}>\n                          <TableCell className=\"max-w-md\">\n                            <div className=\"space-y-1\">\n                              <div className=\"text-sm\">\n                                {truncateText(item.contentPreview, 100)}\n                              </div>\n                              <Badge variant=\"outline\">{item.contentType}</Badge>\n                            </div>\n                          </TableCell>\n                          <TableCell>@{item.authorUsername}</TableCell>\n                          <TableCell>\n                            <Badge variant=\"destructive\">{item.reportCount}</Badge>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex flex-wrap gap-1\">\n                              {item.reasons.slice(0, 3).map((reason, idx) => (\n                                <Badge key={idx} variant=\"secondary\">{reason}</Badge>\n                              ))}\n                              {item.reasons.length > 3 && (\n                                <Badge variant=\"secondary\">+{item.reasons.length - 3}</Badge>\n                              )}\n                            </div>\n                          </TableCell>\n                          <TableCell>\n                            {formatDistanceToNow(new Date(item.firstReportedAt), { addSuffix: true })}\n                          </TableCell>\n                          <TableCell>\n                            <Badge variant={\n                              item.status === 'pending' ? 'destructive' :\n                              item.status === 'resolved' ? 'default' : 'secondary'\n                            }>\n                              {item.status}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"flex gap-2 flex-wrap\">\n                              <Button\n                                size=\"sm\"\n                                variant=\"ghost\"\n                                onClick={() => handleViewReportDetails(item.contentId)}\n                              >\n                                <Eye className=\"h-4 w-4 mr-1\" />\n                                View Details\n                              </Button>\n                              {item.status === 'pending' && (\n                                <Button\n                                  size=\"sm\"\n                                  variant=\"outline\"\n                                  onClick={() => handleViewReportDetails(item.contentId)}\n                                  data-testid={`button-take-action-${item.contentId}`}\n                                >\n                                  <Shield className=\"h-4 w-4 mr-1\" />\n                                  Take Action\n                                </Button>\n                              )}\n                            </div>\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n\n              {reportedData && reportedData.pages > 1 && (\n                <div className=\"flex items-center justify-between gap-4 mt-4 flex-wrap\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm text-muted-foreground\">Items per page:</span>\n                    <Select value={reportedPerPage.toString()} onValueChange={(v) => setReportedPerPage(Number(v))}>\n                      <SelectTrigger className=\"w-20\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"10\">10</SelectItem>\n                        <SelectItem value=\"20\">20</SelectItem>\n                        <SelectItem value=\"50\">50</SelectItem>\n                        <SelectItem value=\"100\">100</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setReportedPage(p => Math.max(1, p - 1))}\n                      disabled={reportedPage === 1}\n                    >\n                      <ChevronLeft className=\"h-4 w-4\" />\n                      Previous\n                    </Button>\n                    <span className=\"text-sm\">\n                      Page {reportedPage} of {reportedData.pages}\n                    </span>\n                    <Button\n                      variant=\"outline\"\n                      size=\"sm\"\n                      onClick={() => setReportedPage(p => Math.min(reportedData.pages, p + 1))}\n                      disabled={reportedPage === reportedData.pages}\n                    >\n                      Next\n                      <ChevronRight className=\"h-4 w-4\" />\n                    </Button>\n                  </div>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"history\" className=\"space-y-4\">\n          <Card>\n            <CardHeader>\n              <div className=\"flex items-center justify-between gap-4 flex-wrap\">\n                <CardTitle>Filters</CardTitle>\n                <div className=\"flex gap-4 flex-wrap\">\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm\">Moderator:</span>\n                    <Select value={historyModeratorFilter} onValueChange={setHistoryModeratorFilter}>\n                      <SelectTrigger className=\"w-48\" data-testid=\"select-moderator-filter\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"all\">All Moderators</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <div className=\"flex items-center gap-2\">\n                    <span className=\"text-sm\">Limit:</span>\n                    <Select value={historyLimit.toString()} onValueChange={(v) => setHistoryLimit(Number(v))}>\n                      <SelectTrigger className=\"w-32\">\n                        <SelectValue />\n                      </SelectTrigger>\n                      <SelectContent>\n                        <SelectItem value=\"50\">50</SelectItem>\n                        <SelectItem value=\"100\">100</SelectItem>\n                        <SelectItem value=\"200\">200</SelectItem>\n                        <SelectItem value=\"500\">500</SelectItem>\n                      </SelectContent>\n                    </Select>\n                  </div>\n                  <Button\n                    variant=\"outline\"\n                    onClick={() => queryClient.invalidateQueries({ queryKey: ['/api/moderation/history'] })}\n                  >\n                    <RefreshCw className=\"h-4 w-4 mr-2\" />\n                    Refresh\n                  </Button>\n                </div>\n              </div>\n            </CardHeader>\n          </Card>\n\n          <Card>\n            <CardHeader>\n              <CardTitle>Moderation History</CardTitle>\n              <CardDescription>Read-only log of recent moderation actions</CardDescription>\n            </CardHeader>\n            <CardContent>\n              {historyLoading ? (\n                <div className=\"space-y-2\">\n                  {[...Array(5)].map((_, i) => (\n                    <Skeleton key={i} className=\"h-12\" />\n                  ))}\n                </div>\n              ) : historyItems.length === 0 ? (\n                <div className=\"text-center py-8 text-muted-foreground\">\n                  No moderation history available\n                </div>\n              ) : (\n                <div className=\"overflow-x-auto\">\n                  <Table data-testid=\"table-history\">\n                    <TableHeader>\n                      <TableRow>\n                        <TableHead>Timestamp</TableHead>\n                        <TableHead>Moderator</TableHead>\n                        <TableHead>Action</TableHead>\n                        <TableHead>Content</TableHead>\n                        <TableHead>Reason</TableHead>\n                      </TableRow>\n                    </TableHeader>\n                    <TableBody>\n                      {historyItems.map((item) => (\n                        <TableRow key={item.id}>\n                          <TableCell>\n                            {format(new Date(item.createdAt), 'MMM d, yyyy HH:mm')}\n                          </TableCell>\n                          <TableCell>@{item.moderatorUsername}</TableCell>\n                          <TableCell>\n                            <Badge variant={\n                              item.actionType === 'approve' ? 'default' :\n                              item.actionType === 'reject' ? 'destructive' : 'secondary'\n                            }>\n                              {item.actionType}\n                            </Badge>\n                          </TableCell>\n                          <TableCell>\n                            <div className=\"space-y-1\">\n                              <div className=\"text-sm\">{truncateText(item.contentTitle, 50)}</div>\n                              <Badge variant=\"outline\">{item.contentType}</Badge>\n                            </div>\n                          </TableCell>\n                          <TableCell className=\"max-w-md\">\n                            {item.reason ? truncateText(item.reason, 100) : '-'}\n                          </TableCell>\n                        </TableRow>\n                      ))}\n                    </TableBody>\n                  </Table>\n                </div>\n              )}\n            </CardContent>\n          </Card>\n        </TabsContent>\n\n        <TabsContent value=\"stats\" className=\"space-y-4\">\n          {statsLoading ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              {[...Array(8)].map((_, i) => (\n                <Skeleton key={i} className=\"h-32\" />\n              ))}\n            </div>\n          ) : stats ? (\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4\">\n              <Card data-testid=\"card-today-approved\">\n                <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Today Approved</CardTitle>\n                  <CheckCircle className=\"h-4 w-4 text-green-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.todayApproved}</div>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-today-rejected\">\n                <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Today Rejected</CardTitle>\n                  <XCircle className=\"h-4 w-4 text-red-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.todayRejected}</div>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-today-reports-handled\">\n                <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Today Reports Handled</CardTitle>\n                  <AlertTriangle className=\"h-4 w-4 text-orange-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.todayReportsHandled}</div>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-total-moderated-today\">\n                <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Total Moderated Today</CardTitle>\n                  <TrendingUp className=\"h-4 w-4 text-blue-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.totalModeratedToday}</div>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-avg-response-time\">\n                <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Avg Response Time</CardTitle>\n                  <Clock className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.avgResponseTimeMinutes}m</div>\n                  <p className=\"text-xs text-muted-foreground\">Average time to first action</p>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-most-active-moderator\">\n                <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Most Active Moderator</CardTitle>\n                  <User className=\"h-4 w-4 text-muted-foreground\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-lg font-bold\">@{stats.mostActiveModerator || 'N/A'}</div>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-pending-under-1hr\">\n                <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Pending &lt; 1hr</CardTitle>\n                  <FileText className=\"h-4 w-4 text-green-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.pendingUnderOneHour}</div>\n                  <p className=\"text-xs text-muted-foreground\">Fresh submissions</p>\n                </CardContent>\n              </Card>\n\n              <Card data-testid=\"card-pending-over-24hrs\">\n                <CardHeader className=\"flex flex-row items-center justify-between gap-2 space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Pending &gt; 24hrs</CardTitle>\n                  <AlertTriangle className=\"h-4 w-4 text-red-500\" />\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{stats.pendingOverTwentyFourHours}</div>\n                  <p className=\"text-xs text-muted-foreground\">Urgent - needs attention</p>\n                </CardContent>\n              </Card>\n            </div>\n          ) : null}\n        </TabsContent>\n      </Tabs>\n\n      <Dialog open={detailsModalOpen} onOpenChange={setDetailsModalOpen}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh]\" data-testid=\"dialog-content-details\">\n          <DialogHeader>\n            <DialogTitle>\n              Review Content - {selectedContent?.type === 'thread' ? 'Thread' : 'Reply'}\n            </DialogTitle>\n          </DialogHeader>\n          <ScrollArea className=\"max-h-[calc(90vh-150px)]\">\n            {selectedContent && (\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Content</h3>\n                  {selectedContent.title && (\n                    <h4 className=\"text-lg font-bold mb-2\">{selectedContent.title}</h4>\n                  )}\n                  <div className=\"p-4 bg-muted rounded-lg whitespace-pre-wrap\">\n                    {selectedContent.body}\n                  </div>\n                </div>\n\n                {selectedContent.parentThread && (\n                  <div>\n                    <h3 className=\"font-semibold mb-2\">Parent Thread</h3>\n                    <div className=\"p-3 bg-muted rounded-lg\">\n                      <p className=\"text-sm\">{selectedContent.parentThread.title}</p>\n                    </div>\n                  </div>\n                )}\n\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Author Information</h3>\n                  <div className=\"flex items-start gap-4 p-4 bg-muted rounded-lg\">\n                    <Avatar>\n                      <AvatarFallback>{selectedContent.author.username[0].toUpperCase()}</AvatarFallback>\n                    </Avatar>\n                    <div className=\"flex-1 space-y-2\">\n                      <div>\n                        <div className=\"font-medium\">@{selectedContent.author.username}</div>\n                        <div className=\"text-sm text-muted-foreground\">\n                          {selectedContent.author.role}\n                        </div>\n                      </div>\n                      <div className=\"flex gap-4 text-sm\">\n                        <div>\n                          <span className=\"text-muted-foreground\">Reputation:</span>{' '}\n                          <span className=\"font-medium\">{selectedContent.author.reputation}</span>\n                        </div>\n                        <div>\n                          <span className=\"text-muted-foreground\">Member since:</span>{' '}\n                          <span className=\"font-medium\">\n                            {format(new Date(selectedContent.author.createdAt), 'MMM d, yyyy')}\n                          </span>\n                        </div>\n                      </div>\n                      {selectedContent.author.badges && selectedContent.author.badges.length > 0 && (\n                        <div className=\"flex gap-1 flex-wrap\">\n                          {selectedContent.author.badges.map((badge, idx) => (\n                            <Badge key={idx} variant=\"secondary\">{badge}</Badge>\n                          ))}\n                        </div>\n                      )}\n                    </div>\n                  </div>\n                </div>\n\n                {selectedContent.recentPosts.length > 0 && (\n                  <div>\n                    <h3 className=\"font-semibold mb-2\">Author&apos;s Recent Posts</h3>\n                    <div className=\"space-y-2\">\n                      {selectedContent.recentPosts.map((post) => (\n                        <div key={post.id} className=\"p-3 bg-muted rounded-lg text-sm\">\n                          <div className=\"flex items-center justify-between gap-2\">\n                            <div className=\"flex-1\">\n                              <div className=\"font-medium\">{post.title}</div>\n                              <div className=\"text-muted-foreground\">\n                                {formatDistanceToNow(new Date(post.createdAt), { addSuffix: true })}\n                              </div>\n                            </div>\n                            <Badge variant=\"outline\">{post.type}</Badge>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                {selectedContent.warnings.length > 0 && (\n                  <div>\n                    <h3 className=\"font-semibold mb-2 text-orange-600\">Warning History</h3>\n                    <div className=\"space-y-2\">\n                      {selectedContent.warnings.map((warning, idx) => (\n                        <div key={idx} className=\"p-3 bg-orange-50 dark:bg-orange-950/20 rounded-lg text-sm border border-orange-200 dark:border-orange-800\">\n                          <div className=\"font-medium\">{warning.reason}</div>\n                          <div className=\"text-muted-foreground\">\n                            By @{warning.moderator} • {formatDistanceToNow(new Date(warning.createdAt), { addSuffix: true })}\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                  </div>\n                )}\n\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Metadata</h3>\n                  <div className=\"grid grid-cols-2 gap-4 p-4 bg-muted rounded-lg text-sm\">\n                    <div>\n                      <span className=\"text-muted-foreground\">Created:</span>{' '}\n                      {format(new Date(selectedContent.metadata.createdAt), 'MMM d, yyyy HH:mm')}\n                    </div>\n                    <div>\n                      <span className=\"text-muted-foreground\">Word Count:</span>{' '}\n                      {selectedContent.metadata.wordCount}\n                    </div>\n                    <div>\n                      <span className=\"text-muted-foreground\">Has Links:</span>{' '}\n                      {selectedContent.metadata.hasLinks ? 'Yes' : 'No'}\n                    </div>\n                    <div>\n                      <span className=\"text-muted-foreground\">Has Images:</span>{' '}\n                      {selectedContent.metadata.hasImages ? 'Yes' : 'No'}\n                    </div>\n                    {selectedContent.metadata.category && (\n                      <div className=\"col-span-2\">\n                        <span className=\"text-muted-foreground\">Category:</span>{' '}\n                        {selectedContent.metadata.category}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              </div>\n            )}\n          </ScrollArea>\n          <DialogFooter>\n            <Button variant=\"ghost\" onClick={() => setDetailsModalOpen(false)}>\n              Close\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                if (selectedContent) {\n                  approveMutation.mutate(selectedContent.id);\n                }\n              }}\n            >\n              <CheckCircle className=\"h-4 w-4 mr-2\" />\n              Approve\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={() => {\n                if (selectedContent) {\n                  handleReject(selectedContent.id);\n                }\n              }}\n            >\n              <XCircle className=\"h-4 w-4 mr-2\" />\n              Reject\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog open={rejectDialogOpen} onOpenChange={setRejectDialogOpen}>\n        <DialogContent data-testid=\"dialog-reject-content\">\n          <DialogHeader>\n            <DialogTitle>Reject Content</DialogTitle>\n            <DialogDescription>\n              Please provide a reason for rejecting this content\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Reason (10-500 characters)</label>\n              <Textarea\n                value={rejectReason}\n                onChange={(e) => setRejectReason(e.target.value)}\n                placeholder=\"Enter reason for rejection...\"\n                className=\"min-h-24\"\n                data-testid=\"textarea-reason\"\n              />\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                {rejectReason.length}/500 characters\n              </div>\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Checkbox\n                checked={rejectDeletePermanently}\n                onCheckedChange={(checked) => setRejectDeletePermanently(checked as boolean)}\n                id=\"delete-permanently\"\n              />\n              <label htmlFor=\"delete-permanently\" className=\"text-sm cursor-pointer\">\n                Delete permanently\n              </label>\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"ghost\" onClick={() => setRejectDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={handleConfirmReject}\n              disabled={rejectMutation.isPending || rejectReason.length < 10 || rejectReason.length > 500}\n            >\n              Reject\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog open={reportDetailsModalOpen} onOpenChange={setReportDetailsModalOpen}>\n        <DialogContent className=\"max-w-4xl max-h-[90vh]\" data-testid=\"dialog-report-details\">\n          <DialogHeader>\n            <DialogTitle>Report Details</DialogTitle>\n          </DialogHeader>\n          <ScrollArea className=\"max-h-[calc(90vh-150px)]\">\n            {selectedReport && (\n              <div className=\"space-y-6\">\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Content</h3>\n                  {selectedReport.content.title && (\n                    <h4 className=\"text-lg font-bold mb-2\">{selectedReport.content.title}</h4>\n                  )}\n                  <div className=\"p-4 bg-muted rounded-lg whitespace-pre-wrap\">\n                    {selectedReport.content.body}\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Reports ({selectedReport.reports.length})</h3>\n                  <div className=\"space-y-3\">\n                    {selectedReport.reports.map((report, idx) => (\n                      <div key={idx} className=\"p-4 bg-muted rounded-lg\">\n                        <div className=\"flex items-start justify-between gap-2 mb-2\">\n                          <div>\n                            <div className=\"font-medium\">@{report.reporterUsername}</div>\n                            <div className=\"text-sm text-muted-foreground\">\n                              {formatDistanceToNow(new Date(report.createdAt), { addSuffix: true })}\n                            </div>\n                          </div>\n                          <Badge variant=\"destructive\">{report.reason}</Badge>\n                        </div>\n                        {report.description && (\n                          <p className=\"text-sm text-muted-foreground\">{report.description}</p>\n                        )}\n                      </div>\n                    ))}\n                  </div>\n                </div>\n\n                <div>\n                  <h3 className=\"font-semibold mb-2\">Author Information</h3>\n                  <div className=\"p-4 bg-muted rounded-lg\">\n                    <div className=\"flex gap-4 text-sm\">\n                      <div>\n                        <span className=\"text-muted-foreground\">Username:</span>{' '}\n                        <span className=\"font-medium\">@{selectedReport.author.username}</span>\n                      </div>\n                      <div>\n                        <span className=\"text-muted-foreground\">Reputation:</span>{' '}\n                        <span className=\"font-medium\">{selectedReport.author.reputation}</span>\n                      </div>\n                      <div>\n                        <span className=\"text-muted-foreground\">Role:</span>{' '}\n                        <span className=\"font-medium\">{selectedReport.author.role}</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            )}\n          </ScrollArea>\n          <DialogFooter className=\"flex-wrap gap-2\">\n            <Button variant=\"ghost\" onClick={() => setReportDetailsModalOpen(false)}>\n              Close\n            </Button>\n            <Button\n              variant=\"secondary\"\n              onClick={() => {\n                setDismissReportDialogOpen(true);\n              }}\n            >\n              Dismiss Report\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={() => {\n                if (selectedReportId) {\n                  reportActionMutation.mutate({ reportId: selectedReportId, action: 'delete', reason: 'Content deleted by moderator' });\n                }\n              }}\n            >\n              <Trash2 className=\"h-4 w-4 mr-2\" />\n              Delete Content\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                if (selectedReportId) {\n                  reportActionMutation.mutate({ reportId: selectedReportId, action: 'warn', reason: 'Warning issued for reported content' });\n                }\n              }}\n              className=\"border-yellow-500 text-yellow-600 hover:bg-yellow-50 dark:hover:bg-yellow-950/20\"\n            >\n              <AlertTriangle className=\"h-4 w-4 mr-2\" />\n              Warn Author\n            </Button>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                if (selectedReport) {\n                  handleSuspendAuthor(selectedReport.author.username);\n                }\n              }}\n              className=\"border-orange-500 text-orange-600 hover:bg-orange-50 dark:hover:bg-orange-950/20\"\n            >\n              <UserX className=\"h-4 w-4 mr-2\" />\n              Suspend Author\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={() => {\n                if (selectedReport) {\n                  handleBanAuthor(selectedReport.author.username);\n                }\n              }}\n            >\n              <Ban className=\"h-4 w-4 mr-2\" />\n              Ban Author\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog open={dismissReportDialogOpen} onOpenChange={setDismissReportDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Dismiss Report</DialogTitle>\n            <DialogDescription>\n              Optionally provide a reason for dismissing this report\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Reason (optional, max 500 characters)</label>\n              <Textarea\n                value={dismissReason}\n                onChange={(e) => setDismissReason(e.target.value)}\n                placeholder=\"Enter reason for dismissal...\"\n                className=\"min-h-24\"\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"ghost\" onClick={() => setDismissReportDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button\n              onClick={() => {\n                if (selectedReportId) {\n                  dismissReportMutation.mutate({ reportId: selectedReportId, reason: dismissReason || undefined });\n                }\n              }}\n              disabled={dismissReportMutation.isPending}\n            >\n              Dismiss Report\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog open={suspendDialogOpen} onOpenChange={setSuspendDialogOpen}>\n        <DialogContent data-testid=\"dialog-suspend-author\">\n          <DialogHeader>\n            <DialogTitle>Suspend Author</DialogTitle>\n            <DialogDescription>\n              Temporarily suspend this user&apos;s account\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Suspend Days (1-365)</label>\n              <Input\n                type=\"number\"\n                min={1}\n                max={365}\n                value={suspendDays}\n                onChange={(e) => setSuspendDays(Number(e.target.value))}\n                data-testid=\"input-suspend-days\"\n              />\n            </div>\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Reason (10-500 characters)</label>\n              <Textarea\n                value={suspendReason}\n                onChange={(e) => setSuspendReason(e.target.value)}\n                placeholder=\"Enter reason for suspension...\"\n                className=\"min-h-24\"\n                data-testid=\"textarea-reason\"\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"ghost\" onClick={() => setSuspendDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={handleConfirmSuspend}\n              disabled={reportActionMutation.isPending || suspendReason.length < 10 || suspendReason.length > 500 || suspendDays < 1 || suspendDays > 365}\n            >\n              Suspend User\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog open={banDialogOpen} onOpenChange={setBanDialogOpen}>\n        <DialogContent data-testid=\"dialog-ban-author\">\n          <DialogHeader>\n            <DialogTitle>Ban Author</DialogTitle>\n            <DialogDescription>\n              Permanently ban this user from the platform\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <Alert variant=\"destructive\">\n              <AlertTriangle className=\"h-4 w-4\" />\n              <AlertDescription>\n                This action is permanent and cannot be undone.\n              </AlertDescription>\n            </Alert>\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Reason (10-500 characters)</label>\n              <Textarea\n                value={banReason}\n                onChange={(e) => setBanReason(e.target.value)}\n                placeholder=\"Enter reason for ban...\"\n                className=\"min-h-24\"\n                data-testid=\"textarea-reason\"\n              />\n            </div>\n            <div className=\"flex items-center gap-2\">\n              <Checkbox\n                checked={banConfirmed}\n                onCheckedChange={(checked) => setBanConfirmed(checked as boolean)}\n                id=\"ban-confirm\"\n              />\n              <label htmlFor=\"ban-confirm\" className=\"text-sm cursor-pointer\">\n                I understand this is permanent\n              </label>\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"ghost\" onClick={() => setBanDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={handleConfirmBan}\n              disabled={reportActionMutation.isPending || !banConfirmed || banReason.length < 10 || banReason.length > 500}\n            >\n              Ban User\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog open={bulkApproveDialogOpen} onOpenChange={setBulkApproveDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Approve Selected Items</DialogTitle>\n            <DialogDescription>\n              Are you sure you want to approve {selectedIds.length} items?\n            </DialogDescription>\n          </DialogHeader>\n          <Alert>\n            <AlertTriangle className=\"h-4 w-4\" />\n            <AlertDescription>\n              This action cannot be undone.\n            </AlertDescription>\n          </Alert>\n          <DialogFooter>\n            <Button variant=\"ghost\" onClick={() => setBulkApproveDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button\n              onClick={handleConfirmBulkApprove}\n              disabled={bulkApproveMutation.isPending}\n            >\n              Approve All\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n\n      <Dialog open={bulkRejectDialogOpen} onOpenChange={setBulkRejectDialogOpen}>\n        <DialogContent>\n          <DialogHeader>\n            <DialogTitle>Reject Selected Items</DialogTitle>\n            <DialogDescription>\n              Reject {selectedIds.length} selected items\n            </DialogDescription>\n          </DialogHeader>\n          <div className=\"space-y-4\">\n            <div>\n              <label className=\"text-sm font-medium mb-2 block\">Reason (10-500 characters)</label>\n              <Textarea\n                value={bulkRejectReason}\n                onChange={(e) => setBulkRejectReason(e.target.value)}\n                placeholder=\"This reason will apply to all selected items...\"\n                className=\"min-h-24\"\n                data-testid=\"textarea-reason\"\n              />\n            </div>\n          </div>\n          <DialogFooter>\n            <Button variant=\"ghost\" onClick={() => setBulkRejectDialogOpen(false)}>\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={handleConfirmBulkReject}\n              disabled={bulkRejectMutation.isPending || bulkRejectReason.length < 10 || bulkRejectReason.length > 500}\n            >\n              Reject All\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}