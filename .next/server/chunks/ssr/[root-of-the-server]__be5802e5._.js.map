{"version":3,"sources":["turbopack:///[project]/app/brokers/BrokerDirectoryClient.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/app/brokers/page.tsx"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/brokers/BrokerDirectoryClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/brokers/BrokerDirectoryClient.tsx\",\n    \"default\",\n);\n","import { Metadata } from 'next';\nimport BrokerDirectoryClient from './BrokerDirectoryClient';\n\n// Broker type matching the React component\ntype Broker = {\n  id: string;\n  name: string;\n  slug: string;\n  websiteUrl: string | null;\n  logoUrl: string | null;\n  overallRating: number | null;\n  reviewCount: number;\n  scamReportCount: number;\n  isVerified: boolean;\n  regulationSummary: string | null;\n};\n\n// Express API base URL\nconst EXPRESS_API_URL = process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000';\n\nexport const metadata: Metadata = {\n  title: \"Broker Directory | YoForex\",\n  description: \"Find trusted forex brokers for MT4/MT5 trading. Compare regulations, spreads, reviews, and community ratings.\",\n  keywords: \"forex brokers, MT4 brokers, MT5 brokers, broker reviews, regulated brokers\",\n  openGraph: {\n    title: \"Broker Directory | YoForex\",\n    description: \"Find trusted forex brokers for MT4/MT5 trading. Compare regulations, spreads, reviews, and community ratings.\",\n    type: \"website\",\n  },\n  twitter: {\n    card: \"summary_large_image\",\n    title: \"Broker Directory | YoForex\",\n    description: \"Find trusted forex brokers for MT4/MT5 trading. Compare regulations, spreads, reviews, and community ratings.\",\n  },\n};\n\nexport const revalidate = 0; // Disable caching for fresh data\n\nexport default async function BrokerDirectoryPage() {\n  let brokers: Broker[] = [];\n  \n  try {\n    const response = await fetch(`${EXPRESS_API_URL}/api/brokers`, {\n      cache: 'no-store',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    });\n    \n    if (response.ok) {\n      brokers = await response.json();\n    }\n  } catch (error) {\n    console.error('Failed to fetch brokers:', error);\n    // Continue with empty array, client will show empty state\n  }\n\n  return <BrokerDirectoryClient initialBrokers={brokers} />;\n}\n"],"names":[],"mappings":"2UAEe,CAAA,EAAA,AADf,EAAA,CAAA,CAAA,OACe,uBAAA,AAAuB,EAClC,WAAa,MAAM,AAAI,MAAM,uSAAyS,EACtU,sEACA,8DAHW,CAAA,EADf,AACe,EADf,CAAA,CAAA,OACe,uBAAA,AAAuB,EAClC,WAAa,MAAM,AAAI,MAAM,mRAAqR,EAClT,kDACA,mICJJ,EAAA,EAAA,CAAA,CAAA,OAqCe,eAAe,IAC5B,IAAI,EAAoB,EAAE,CAE1B,GAAI,CACF,IAAM,EAAW,MAAM,MAAM,GAAG,gBAAgB,YAAY,CAAC,IAAE,CAC7D,MAAO,WACP,QAAS,CACP,eAAgB,kBAClB,CACF,GAEI,EAAS,EAAE,EAAE,CACf,EAAU,MAAM,EAAS,IAAI,EAAA,CAEjC,CAAE,MAAO,EAAO,CACd,QAAQ,KAAK,CAAC,2BAA4B,EAE5C,CAEA,MAAO,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAqB,CAAA,CAAC,eAAgB,GAChD,mCAtCkC,CAChC,MAAO,6BACP,YAAa,gHACb,SAAU,6EACV,UAAW,CACT,MAAO,6BACP,YAAa,gHACb,KAAM,SACR,EACA,QAAS,CACP,KAAM,sBACN,MAAO,6BACP,YAAa,+GACf,CACF,iBAE0B,GAAG,iCAAiC","ignoreList":[0]}