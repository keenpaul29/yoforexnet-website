{"version":3,"sources":["turbopack:///[project]/app/brokers/[slug]/BrokerProfileClient.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/app/brokers/[slug]/page.tsx"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/brokers/[slug]/BrokerProfileClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/brokers/[slug]/BrokerProfileClient.tsx\",\n    \"default\",\n);\n","import { Metadata } from 'next';\nimport BrokerProfileClient from './BrokerProfileClient';\n\n// Express API base URL\nconst EXPRESS_URL = process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000';\n\n// Type definitions\ntype Broker = {\n  id: string;\n  name: string;\n  slug: string;\n  websiteUrl: string | null;\n  logoUrl: string | null;\n  overallRating: number;\n  reviewCount: number;\n  scamReportCount: number;\n  isVerified: boolean;\n  regulationSummary: string | null;\n  yearFounded: number | null;\n  status: string;\n};\n\ntype BrokerReview = {\n  id: string;\n  userName: string;\n  userReputation: number;\n  rating: number;\n  reviewTitle: string;\n  reviewBody: string;\n  isScamReport: boolean;\n  datePosted: Date;\n  helpfulCount: number;\n};\n\n// Generate metadata for SEO\nexport async function generateMetadata({ params }: { params: Promise<{ slug: string }> }): Promise<Metadata> {\n  const { slug } = await params;\n  try {\n    const res = await fetch(`${EXPRESS_URL}/api/brokers/slug/${slug}`, { cache: 'no-store' });\n    if (!res.ok) {\n      return {\n        title: 'Broker Not Found | YoForex',\n      };\n    }\n\n    const broker: Broker = await res.json();\n    \n    const title = `${broker.name} - Broker Review & Profile | YoForex`;\n    const description = `Read reviews, ratings, and detailed information about ${broker.name}. Check regulation, spreads, and community feedback. ${broker.reviewCount} verified reviews.`;\n    const keywords = `${broker.name}, forex broker, MT4, MT5, broker review, regulation, ${broker.regulationSummary || ''}`;\n\n    return {\n      title,\n      description,\n      keywords,\n      openGraph: {\n        title: `${broker.name} - Broker Review & Profile`,\n        description,\n        images: broker.logoUrl ? [{ url: broker.logoUrl }] : [],\n        type: 'website',\n      },\n      twitter: {\n        card: 'summary_large_image',\n        title: `${broker.name} Review`,\n        description,\n        images: broker.logoUrl ? [broker.logoUrl] : [],\n      },\n    };\n  } catch (error) {\n    return {\n      title: 'Broker Not Found | YoForex',\n    };\n  }\n}\n\n// Main page component (Server Component)\nexport default async function BrokerProfilePage({ params }: { params: Promise<{ slug: string }> }) {\n  const { slug } = await params;\n  \n  // Fetch broker with error handling that doesn't trigger Next.js 404\n  let broker: Broker | null = null;\n  try {\n    const brokerRes = await fetch(`${EXPRESS_URL}/api/brokers/slug/${slug}`, { \n      cache: 'no-store',\n    });\n    if (brokerRes.ok) {\n      broker = await brokerRes.json();\n    }\n  } catch (error) {\n    // Swallow error - we'll show custom error card\n    broker = null;\n  }\n\n  // If broker not found, return Client Component with undefined broker to show custom error card\n  if (!broker) {\n    return (\n      <BrokerProfileClient\n        slug={slug}\n        initialBroker={undefined}\n        initialReviews={[]}\n      />\n    );\n  }\n\n  // Fetch broker reviews (using broker ID, not slug)\n  let reviews: BrokerReview[] = [];\n  try {\n    const reviewsRes = await fetch(`${EXPRESS_URL}/api/brokers/${broker.id}/reviews`, { \n      cache: 'no-store',\n    });\n    if (reviewsRes.ok) {\n      reviews = await reviewsRes.json();\n    }\n  } catch (error) {\n    // If reviews fail, just use empty array\n    reviews = [];\n  }\n\n  // Pass all data to Client Component\n  return (\n    <BrokerProfileClient\n      slug={slug}\n      initialBroker={broker}\n      initialReviews={reviews}\n    />\n  );\n}\n\n// Enable dynamic rendering with no caching\nexport const dynamic = 'force-dynamic';\nexport const revalidate = 0;\n"],"names":[],"mappings":"oVAEe,CAAA,EAAA,AADf,EAAA,CAAA,CAAA,QACe,uBAAA,AAAuB,EAClC,WAAa,MAAM,AAAI,MAAM,4SAA8S,EAC3U,2EACA,+DAHW,CAAA,EADf,AACe,EADf,CAAA,CAAA,QACe,uBAAA,AAAuB,EAClC,WAAa,MAAM,AAAI,MAAM,wRAA0R,EACvT,uDACA,uICJJ,EAAA,EAAA,CAAA,CAAA,MAGA,IAAM,EAAc,YAAA,YA+Bb,IA/BoD,WA+BrC,EAAiB,QAAE,CAAM,CAAyC,EACtF,GAAM,MAAE,CAAI,CAAE,CAAG,MAAM,EACvB,GAAI,CACF,IAAM,EAAM,MAAM,MAAM,CAAA,EAAG,EAAY,kBAAkB,EAAE,EAAA,CAAM,CAAE,CAAE,MAAO,UAAW,GACvF,GAAI,CAAC,EAAI,EAAE,CACT,CADW,KACJ,CACL,MAAO,4BACT,EAGF,IAAM,EAAiB,MAAM,EAAI,IAAI,GAE/B,EAAQ,CAAA,EAAG,EAAO,IAAI,CAAC,oCAAoC,CAAC,CAC5D,EAAc,CAAC,sDAAsD,EAAE,EAAO,IAAI,CAAC,qDAAqD,EAAE,EAAO,WAAW,CAAC,kBAAkB,CAAC,CAChL,EAAW,CAAA,EAAG,EAAO,IAAI,CAAC,qDAAqD,EAAE,EAAO,iBAAiB,EAAI,GAAA,CAAI,CAEvH,MAAO,OACL,cACA,WACA,EACA,UAAW,CACT,MAAO,CAAA,EAAG,EAAO,IAAI,CAAC,0BAA0B,CAAC,aACjD,EACA,OAAQ,EAAO,OAAO,CAAG,CAAC,CAAE,IAAK,EAAO,OAAO,AAAC,EAAE,CAAG,EAAE,CACvD,KAAM,SACR,EACA,QAAS,CACP,KAAM,sBACN,MAAO,CAAA,EAAG,EAAO,IAAI,CAAC,OAAO,CAAC,CAC9B,cACA,OAAQ,EAAO,OAAO,CAAG,CAAC,EAAO,OAAO,CAAC,CAAG,EAAE,AAChD,CACF,CACF,CAAE,MAAO,EAAO,CACd,MAAO,CACL,MAAO,4BACT,CACF,CACF,CAGe,eAAe,EAAkB,CAAE,QAAM,CAAyC,EAC/F,GAAM,MAAE,CAAI,CAAE,CAAG,MAAM,EAGnB,EAAwB,KAC5B,GAAI,CACF,IAAM,EAAY,MAAM,MAAM,CAAA,EAAG,EAAY,kBAAkB,EAAE,EAAA,CAAM,CAAE,CACvE,MAAO,UACT,GACI,EAAU,EAAE,EAAE,CAChB,EAAS,MAAM,EAAU,IAAI,EAAA,CAEjC,CAAE,MAAO,EAAO,CAEd,EAAS,IACX,CAGA,GAAI,CAAC,EACH,MADW,AAET,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAmB,CAAA,CAClB,KAAM,EACN,mBAAe,EACf,eAAgB,EAAE,GAMxB,IAAI,EAA0B,EAAE,CAChC,GAAI,CACF,IAAM,EAAa,MAAM,MAAM,CAAA,EAAG,EAAY,aAAa,EAAE,EAAO,EAAE,CAAC,QAAQ,CAAC,CAAE,CAChF,MAAO,UACT,GACI,EAAW,EAAE,EAAE,CACjB,EAAU,MAAM,EAAW,IAAI,EAAA,CAEnC,CAAE,MAAO,EAAO,CAEd,EAAU,EAAE,AACd,CAGA,MACE,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAmB,CAAA,CAClB,KAAM,EACN,cAAe,EACf,eAAgB,GAGtB,kCAGuB,wDACG","ignoreList":[0]}