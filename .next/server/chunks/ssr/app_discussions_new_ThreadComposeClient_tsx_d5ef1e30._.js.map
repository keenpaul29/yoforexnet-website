{"version":3,"sources":["turbopack:///[project]/node_modules/@radix-ui/react-collapsible/dist/index.mjs","turbopack:///[project]/node_modules/@radix-ui/react-accordion/dist/index.mjs","turbopack:///[project]/app/components/SEOPreview.tsx","turbopack:///[project]/app/discussions/new/ThreadComposeClient.tsx","turbopack:///[project]/app/components/ui/accordion.tsx","turbopack:///[project]/shared/tradingMetadata.ts"],"sourcesContent":["\"use client\";\n\n// packages/react/collapsible/src/collapsible.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar COLLAPSIBLE_NAME = \"Collapsible\";\nvar [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\nvar [CollapsibleProvider, useCollapsibleContext] = createCollapsibleContext(COLLAPSIBLE_NAME);\nvar Collapsible = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n    const [open = false, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange\n    });\n    return /* @__PURE__ */ jsx(\n      CollapsibleProvider,\n      {\n        scope: __scopeCollapsible,\n        disabled,\n        contentId: useId(),\n        open,\n        onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            \"data-state\": getState(open),\n            \"data-disabled\": disabled ? \"\" : void 0,\n            ...collapsibleProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nCollapsible.displayName = COLLAPSIBLE_NAME;\nvar TRIGGER_NAME = \"CollapsibleTrigger\";\nvar CollapsibleTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open || false,\n        \"data-state\": getState(context.open),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        disabled: context.disabled,\n        ...triggerProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n  }\n);\nCollapsibleTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"CollapsibleContent\";\nvar CollapsibleContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: ({ present }) => /* @__PURE__ */ jsx(CollapsibleContentImpl, { ...contentProps, ref: forwardedRef, present }) });\n  }\n);\nCollapsibleContent.displayName = CONTENT_NAME;\nvar CollapsibleContentImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef(0);\n  const width = widthRef.current;\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef(void 0);\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName\n      };\n      node.style.transitionDuration = \"0s\";\n      node.style.animationName = \"none\";\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n      setIsPresent(present);\n    }\n  }, [context.open, present]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"data-state\": getState(context.open),\n      \"data-disabled\": context.disabled ? \"\" : void 0,\n      id: context.contentId,\n      hidden: !isOpen,\n      ...contentProps,\n      ref: composedRefs,\n      style: {\n        [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,\n        [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,\n        ...props.style\n      },\n      children: isOpen && children\n    }\n  );\n});\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root = Collapsible;\nvar Trigger = CollapsibleTrigger;\nvar Content = CollapsibleContent;\nexport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n  Content,\n  Root,\n  Trigger,\n  createCollapsibleScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// packages/react/accordion/src/accordion.tsx\nimport React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\nimport { createCollapsibleScope } from \"@radix-ui/react-collapsible\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ACCORDION_NAME = \"Accordion\";\nvar ACCORDION_KEYS = [\"Home\", \"End\", \"ArrowDown\", \"ArrowUp\", \"ArrowLeft\", \"ArrowRight\"];\nvar [Collection, useCollection, createCollectionScope] = createCollection(ACCORDION_NAME);\nvar [createAccordionContext, createAccordionScope] = createContextScope(ACCORDION_NAME, [\n  createCollectionScope,\n  createCollapsibleScope\n]);\nvar useCollapsibleScope = createCollapsibleScope();\nvar Accordion = React.forwardRef(\n  (props, forwardedRef) => {\n    const { type, ...accordionProps } = props;\n    const singleProps = accordionProps;\n    const multipleProps = accordionProps;\n    return /* @__PURE__ */ jsx(Collection.Provider, { scope: props.__scopeAccordion, children: type === \"multiple\" ? /* @__PURE__ */ jsx(AccordionImplMultiple, { ...multipleProps, ref: forwardedRef }) : /* @__PURE__ */ jsx(AccordionImplSingle, { ...singleProps, ref: forwardedRef }) });\n  }\n);\nAccordion.displayName = ACCORDION_NAME;\nvar [AccordionValueProvider, useAccordionValueContext] = createAccordionContext(ACCORDION_NAME);\nvar [AccordionCollapsibleProvider, useAccordionCollapsibleContext] = createAccordionContext(\n  ACCORDION_NAME,\n  { collapsible: false }\n);\nvar AccordionImplSingle = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      value: valueProp,\n      defaultValue,\n      onValueChange = () => {\n      },\n      collapsible = false,\n      ...accordionSingleProps\n    } = props;\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue,\n      onChange: onValueChange\n    });\n    return /* @__PURE__ */ jsx(\n      AccordionValueProvider,\n      {\n        scope: props.__scopeAccordion,\n        value: value ? [value] : [],\n        onItemOpen: setValue,\n        onItemClose: React.useCallback(() => collapsible && setValue(\"\"), [collapsible, setValue]),\n        children: /* @__PURE__ */ jsx(AccordionCollapsibleProvider, { scope: props.__scopeAccordion, collapsible, children: /* @__PURE__ */ jsx(AccordionImpl, { ...accordionSingleProps, ref: forwardedRef }) })\n      }\n    );\n  }\n);\nvar AccordionImplMultiple = React.forwardRef((props, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {\n    },\n    ...accordionMultipleProps\n  } = props;\n  const [value = [], setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue,\n    onChange: onValueChange\n  });\n  const handleItemOpen = React.useCallback(\n    (itemValue) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  );\n  const handleItemClose = React.useCallback(\n    (itemValue) => setValue((prevValue = []) => prevValue.filter((value2) => value2 !== itemValue)),\n    [setValue]\n  );\n  return /* @__PURE__ */ jsx(\n    AccordionValueProvider,\n    {\n      scope: props.__scopeAccordion,\n      value,\n      onItemOpen: handleItemOpen,\n      onItemClose: handleItemClose,\n      children: /* @__PURE__ */ jsx(AccordionCollapsibleProvider, { scope: props.__scopeAccordion, collapsible: true, children: /* @__PURE__ */ jsx(AccordionImpl, { ...accordionMultipleProps, ref: forwardedRef }) })\n    }\n  );\n});\nvar [AccordionImplProvider, useAccordionContext] = createAccordionContext(ACCORDION_NAME);\nvar AccordionImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, disabled, dir, orientation = \"vertical\", ...accordionProps } = props;\n    const accordionRef = React.useRef(null);\n    const composedRefs = useComposedRefs(accordionRef, forwardedRef);\n    const getItems = useCollection(__scopeAccordion);\n    const direction = useDirection(dir);\n    const isDirectionLTR = direction === \"ltr\";\n    const handleKeyDown = composeEventHandlers(props.onKeyDown, (event) => {\n      if (!ACCORDION_KEYS.includes(event.key)) return;\n      const target = event.target;\n      const triggerCollection = getItems().filter((item) => !item.ref.current?.disabled);\n      const triggerIndex = triggerCollection.findIndex((item) => item.ref.current === target);\n      const triggerCount = triggerCollection.length;\n      if (triggerIndex === -1) return;\n      event.preventDefault();\n      let nextIndex = triggerIndex;\n      const homeIndex = 0;\n      const endIndex = triggerCount - 1;\n      const moveNext = () => {\n        nextIndex = triggerIndex + 1;\n        if (nextIndex > endIndex) {\n          nextIndex = homeIndex;\n        }\n      };\n      const movePrev = () => {\n        nextIndex = triggerIndex - 1;\n        if (nextIndex < homeIndex) {\n          nextIndex = endIndex;\n        }\n      };\n      switch (event.key) {\n        case \"Home\":\n          nextIndex = homeIndex;\n          break;\n        case \"End\":\n          nextIndex = endIndex;\n          break;\n        case \"ArrowRight\":\n          if (orientation === \"horizontal\") {\n            if (isDirectionLTR) {\n              moveNext();\n            } else {\n              movePrev();\n            }\n          }\n          break;\n        case \"ArrowDown\":\n          if (orientation === \"vertical\") {\n            moveNext();\n          }\n          break;\n        case \"ArrowLeft\":\n          if (orientation === \"horizontal\") {\n            if (isDirectionLTR) {\n              movePrev();\n            } else {\n              moveNext();\n            }\n          }\n          break;\n        case \"ArrowUp\":\n          if (orientation === \"vertical\") {\n            movePrev();\n          }\n          break;\n      }\n      const clampedIndex = nextIndex % triggerCount;\n      triggerCollection[clampedIndex].ref.current?.focus();\n    });\n    return /* @__PURE__ */ jsx(\n      AccordionImplProvider,\n      {\n        scope: __scopeAccordion,\n        disabled,\n        direction: dir,\n        orientation,\n        children: /* @__PURE__ */ jsx(Collection.Slot, { scope: __scopeAccordion, children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            ...accordionProps,\n            \"data-orientation\": orientation,\n            ref: composedRefs,\n            onKeyDown: disabled ? void 0 : handleKeyDown\n          }\n        ) })\n      }\n    );\n  }\n);\nvar ITEM_NAME = \"AccordionItem\";\nvar [AccordionItemProvider, useAccordionItemContext] = createAccordionContext(ITEM_NAME);\nvar AccordionItem = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, value, ...accordionItemProps } = props;\n    const accordionContext = useAccordionContext(ITEM_NAME, __scopeAccordion);\n    const valueContext = useAccordionValueContext(ITEM_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    const triggerId = useId();\n    const open = value && valueContext.value.includes(value) || false;\n    const disabled = accordionContext.disabled || props.disabled;\n    return /* @__PURE__ */ jsx(\n      AccordionItemProvider,\n      {\n        scope: __scopeAccordion,\n        open,\n        disabled,\n        triggerId,\n        children: /* @__PURE__ */ jsx(\n          CollapsiblePrimitive.Root,\n          {\n            \"data-orientation\": accordionContext.orientation,\n            \"data-state\": getState(open),\n            ...collapsibleScope,\n            ...accordionItemProps,\n            ref: forwardedRef,\n            disabled,\n            open,\n            onOpenChange: (open2) => {\n              if (open2) {\n                valueContext.onItemOpen(value);\n              } else {\n                valueContext.onItemClose(value);\n              }\n            }\n          }\n        )\n      }\n    );\n  }\n);\nAccordionItem.displayName = ITEM_NAME;\nvar HEADER_NAME = \"AccordionHeader\";\nvar AccordionHeader = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, ...headerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(HEADER_NAME, __scopeAccordion);\n    return /* @__PURE__ */ jsx(\n      Primitive.h3,\n      {\n        \"data-orientation\": accordionContext.orientation,\n        \"data-state\": getState(itemContext.open),\n        \"data-disabled\": itemContext.disabled ? \"\" : void 0,\n        ...headerProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nAccordionHeader.displayName = HEADER_NAME;\nvar TRIGGER_NAME = \"AccordionTrigger\";\nvar AccordionTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, ...triggerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleContext = useAccordionCollapsibleContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return /* @__PURE__ */ jsx(Collection.ItemSlot, { scope: __scopeAccordion, children: /* @__PURE__ */ jsx(\n      CollapsiblePrimitive.Trigger,\n      {\n        \"aria-disabled\": itemContext.open && !collapsibleContext.collapsible || void 0,\n        \"data-orientation\": accordionContext.orientation,\n        id: itemContext.triggerId,\n        ...collapsibleScope,\n        ...triggerProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nAccordionTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"AccordionContent\";\nvar AccordionContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, ...contentProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(CONTENT_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return /* @__PURE__ */ jsx(\n      CollapsiblePrimitive.Content,\n      {\n        role: \"region\",\n        \"aria-labelledby\": itemContext.triggerId,\n        \"data-orientation\": accordionContext.orientation,\n        ...collapsibleScope,\n        ...contentProps,\n        ref: forwardedRef,\n        style: {\n          [\"--radix-accordion-content-height\"]: \"var(--radix-collapsible-content-height)\",\n          [\"--radix-accordion-content-width\"]: \"var(--radix-collapsible-content-width)\",\n          ...props.style\n        }\n      }\n    );\n  }\n);\nAccordionContent.displayName = CONTENT_NAME;\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root2 = Accordion;\nvar Item = AccordionItem;\nvar Header = AccordionHeader;\nvar Trigger2 = AccordionTrigger;\nvar Content2 = AccordionContent;\nexport {\n  Accordion,\n  AccordionContent,\n  AccordionHeader,\n  AccordionItem,\n  AccordionTrigger,\n  Content2 as Content,\n  Header,\n  Item,\n  Root2 as Root,\n  Trigger2 as Trigger,\n  createAccordionScope\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { CheckCircle2, AlertCircle, Info } from \"lucide-react\";\nimport slugify from \"slugify\";\n\ninterface SEOPreviewProps {\n  title: string;\n  seoExcerpt?: string;\n  primaryKeyword?: string;\n  body?: string;\n}\n\nfunction calculateKeywordDensity(text: string, keyword: string): number {\n  if (!text || !keyword) return 0;\n  \n  const normalizedText = text.toLowerCase();\n  const normalizedKeyword = keyword.toLowerCase().trim();\n  \n  if (!normalizedKeyword) return 0;\n  \n  // Count total words\n  const words = normalizedText.split(/\\s+/).filter(w => w.length > 0);\n  const totalWords = words.length;\n  \n  if (totalWords === 0) return 0;\n  \n  // Count keyword occurrences (handle multi-word keywords)\n  const keywordWords = normalizedKeyword.split(/\\s+/);\n  let keywordCount = 0;\n  \n  if (keywordWords.length === 1) {\n    // Single word keyword\n    keywordCount = words.filter(w => w === normalizedKeyword).length;\n  } else {\n    // Multi-word keyword - search for phrase\n    const regex = new RegExp(normalizedKeyword.replace(/\\s+/g, '\\\\s+'), 'gi');\n    const matches = normalizedText.match(regex);\n    keywordCount = matches ? matches.length : 0;\n  }\n  \n  // Calculate density as percentage\n  const density = (keywordCount / totalWords) * 100;\n  return Math.round(density * 100) / 100; // Round to 2 decimal places\n}\n\nfunction getKeywordDensityStatus(density: number): { \n  status: 'good' | 'low' | 'high'; \n  message: string;\n  icon: React.ElementType;\n} {\n  if (density === 0) {\n    return { \n      status: 'low', \n      message: 'Keyword not found in content',\n      icon: AlertCircle\n    };\n  }\n  if (density < 0.5) {\n    return { \n      status: 'low', \n      message: 'Keyword density is low. Consider mentioning it more naturally.',\n      icon: Info\n    };\n  }\n  if (density > 3) {\n    return { \n      status: 'high', \n      message: 'Keyword density is high. This may look like spam to search engines.',\n      icon: AlertCircle\n    };\n  }\n  return { \n    status: 'good', \n    message: 'Good keyword density for SEO',\n    icon: CheckCircle2\n  };\n}\n\nexport default function SEOPreview({ title, seoExcerpt, primaryKeyword, body }: SEOPreviewProps) {\n  const slug = title ? slugify(title, { lower: true, strict: true }) : 'your-thread-title';\n  const previewUrl = `yoforex.com/thread/${slug}`;\n  \n  const displayTitle = title || 'Your Thread Title';\n  const displayDescription = seoExcerpt || (body ? body.substring(0, 160) + '...' : 'Your thread description will appear here...');\n  \n  const descriptionLength = seoExcerpt?.length || 0;\n  const titleLength = title?.length || 0;\n  \n  // Calculate keyword density if we have both keyword and content\n  const keywordDensity = primaryKeyword && (title || body) \n    ? calculateKeywordDensity(`${title} ${body}`, primaryKeyword)\n    : 0;\n  \n  const densityStatus = primaryKeyword ? getKeywordDensityStatus(keywordDensity) : null;\n  const DensityIcon = densityStatus?.icon || Info;\n\n  return (\n    <Card data-testid=\"card-seo-preview\">\n      <CardHeader>\n        <CardTitle className=\"text-base\">Search Preview</CardTitle>\n      </CardHeader>\n      <CardContent className=\"space-y-4\">\n        {/* Google Search Result Preview */}\n        <div className=\"border rounded-md p-4 bg-card\" data-testid=\"google-preview\">\n          <div className=\"text-xs text-muted-foreground mb-1\">{previewUrl}</div>\n          <div \n            className=\"text-primary text-lg font-medium mb-1 hover:underline cursor-pointer\"\n            data-testid=\"preview-title\"\n          >\n            {displayTitle}\n          </div>\n          <div className=\"text-sm text-muted-foreground\" data-testid=\"preview-description\">\n            {displayDescription}\n          </div>\n        </div>\n\n        {/* SEO Metrics */}\n        <div className=\"space-y-2\">\n          {/* Title Length */}\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-muted-foreground\">Title length:</span>\n            <Badge \n              variant={titleLength >= 30 && titleLength <= 60 ? \"default\" : titleLength > 0 ? \"secondary\" : \"outline\"}\n              data-testid=\"badge-title-length\"\n            >\n              {titleLength}/60 chars {titleLength >= 30 && titleLength <= 60 && '✓'}\n            </Badge>\n          </div>\n\n          {/* Description Length */}\n          <div className=\"flex items-center justify-between text-sm\">\n            <span className=\"text-muted-foreground\">Description length:</span>\n            <Badge \n              variant={descriptionLength >= 120 && descriptionLength <= 160 ? \"default\" : descriptionLength > 0 ? \"secondary\" : \"outline\"}\n              data-testid=\"badge-description-length\"\n            >\n              {descriptionLength}/160 chars {descriptionLength >= 120 && descriptionLength <= 160 && '✓'}\n            </Badge>\n          </div>\n\n          {/* Keyword Density */}\n          {primaryKeyword && (\n            <div className=\"flex items-center justify-between text-sm\">\n              <span className=\"text-muted-foreground\">Keyword density:</span>\n              <Badge \n                variant={densityStatus?.status === 'good' ? \"default\" : densityStatus?.status === 'high' ? \"destructive\" : \"secondary\"}\n                data-testid=\"badge-keyword-density\"\n              >\n                {keywordDensity}% {densityStatus?.status === 'good' && '✓'}\n              </Badge>\n            </div>\n          )}\n        </div>\n\n        {/* Keyword Density Feedback */}\n        {primaryKeyword && densityStatus && (\n          <Alert variant={densityStatus.status === 'high' ? 'destructive' : 'default'}>\n            <DensityIcon className=\"h-4 w-4\" />\n            <AlertDescription data-testid=\"text-density-feedback\">\n              {densityStatus.message}\n            </AlertDescription>\n          </Alert>\n        )}\n\n        {/* SEO Tips */}\n        {!seoExcerpt && !primaryKeyword && (\n          <Alert>\n            <Info className=\"h-4 w-4\" />\n            <AlertDescription className=\"text-xs\">\n              <strong>SEO Tips:</strong> Add a primary keyword and excerpt to improve your thread's visibility in search results.\n            </AlertDescription>\n          </Alert>\n        )}\n      </CardContent>\n    </Card>\n  );\n}\n","\"use client\";\n\nimport { useState, useEffect, useCallback } from \"react\";\nimport { useRouter, useSearchParams } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useMutation, useQuery } from \"@tanstack/react-query\";\nimport type { ForumCategory, Broker } from \"@shared/schema\";\nimport { \n  INSTRUMENTS, \n  TIMEFRAMES, \n  STRATEGIES, \n  PLATFORMS, \n  POPULAR_BROKERS, \n  THREAD_TYPES,\n  extractPotentialTags \n} from \"@shared/tradingMetadata\";\nimport { countWords } from \"@shared/threadUtils\";\nimport Header from \"@/components/Header\";\nimport EnhancedFooter from \"@/components/EnhancedFooter\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from \"@/components/ui/accordion\";\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { useAuthPrompt } from \"@/hooks/useAuthPrompt\";\nimport { apiRequest } from \"@/lib/queryClient\";\nimport { AlertCircle, ChevronLeft, ChevronRight, HelpCircle, MessageSquare, Star, BookOpen, Lightbulb, Code, X, Upload, FileText, Loader2, Check, Copy, Share2, Bell } from \"lucide-react\";\nimport SEOPreview from \"@/components/SEOPreview\";\n\n// Form validation schema\nconst threadFormSchema = z.object({\n  title: z.string()\n    .min(15, \"This is a bit short—add 3–4 more words?\")\n    .max(90, \"Title must not exceed 90 characters\")\n    .refine(\n      (val) => {\n        const upperCount = (val.match(/[A-Z]/g) || []).length;\n        const letterCount = (val.match(/[a-zA-Z]/g) || []).length;\n        return letterCount === 0 || upperCount / letterCount < 0.5;\n      },\n      { message: \"Let's tone this down a bit so more folks read it\" }\n    ),\n  body: z.string()\n    .min(500, \"A little more context helps people reply. Add a few more details? (500 characters minimum)\")\n    .max(50000, \"Body is too long\"),\n  categorySlug: z.string().min(1, \"Please select a category\"),\n  subcategorySlug: z.string().optional(),\n  threadType: z.enum([\"question\", \"discussion\", \"review\", \"journal\", \"guide\", \"program_sharing\"]).default(\"discussion\"),\n  seoExcerpt: z.string()\n    .min(120, \"SEO excerpt should be at least 120 characters\")\n    .max(160, \"SEO excerpt should not exceed 160 characters\")\n    .optional().or(z.literal(\"\")),\n  primaryKeyword: z.string().optional().or(z.literal(\"\")),\n  instruments: z.array(z.string()).default([]),\n  timeframes: z.array(z.string()).default([]),\n  strategies: z.array(z.string()).default([]),\n  platform: z.string().optional().or(z.literal(\"\")),\n  broker: z.string().max(40).optional().or(z.literal(\"\")),\n  riskNote: z.string().max(500).optional().or(z.literal(\"\")),\n  hashtags: z.array(z.string()).max(10, \"Maximum 10 hashtags\").default([]),\n  reviewTarget: z.string().optional().or(z.literal(\"\")),\n  reviewVersion: z.string().optional().or(z.literal(\"\")),\n  reviewRating: z.number().int().min(1).max(5).optional(),\n  reviewPros: z.array(z.string()).default([]),\n  reviewCons: z.array(z.string()).default([]),\n  questionSummary: z.string().max(200).optional().or(z.literal(\"\")),\n  attachmentUrls: z.array(z.string()).default([]),\n});\n\ntype ThreadFormData = z.infer<typeof threadFormSchema>;\n\ninterface ThreadComposeClientProps {\n  categories: ForumCategory[];\n}\n\n// Auto-save draft hook\nfunction useThreadDraft(categorySlug: string) {\n  const [hasDraft, setHasDraft] = useState(false);\n  const draftKey = `thread_draft_${categorySlug}`;\n\n  const saveDraft = useCallback((data: Partial<ThreadFormData>) => {\n    try {\n      localStorage.setItem(draftKey, JSON.stringify({\n        ...data,\n        savedAt: new Date().toISOString(),\n      }));\n    } catch (error) {\n      console.error('Failed to save draft:', error);\n    }\n  }, [draftKey]);\n\n  const loadDraft = useCallback((): Partial<ThreadFormData> | null => {\n    try {\n      const saved = localStorage.getItem(draftKey);\n      if (saved) {\n        const parsed = JSON.parse(saved);\n        setHasDraft(true);\n        return parsed;\n      }\n    } catch (error) {\n      console.error('Failed to load draft:', error);\n    }\n    return null;\n  }, [draftKey]);\n\n  const clearDraft = useCallback(() => {\n    try {\n      localStorage.removeItem(draftKey);\n      setHasDraft(false);\n    } catch (error) {\n      console.error('Failed to clear draft:', error);\n    }\n  }, [draftKey]);\n\n  return { saveDraft, loadDraft, clearDraft, hasDraft };\n}\n\nexport default function ThreadComposeClient({ categories }: ThreadComposeClientProps) {\n  const router = useRouter();\n  const searchParams = useSearchParams();\n  const { toast } = useToast();\n  const { requireAuth, AuthPrompt } = useAuthPrompt(\"create a thread\");\n  \n  const [currentStep, setCurrentStep] = useState(1);\n  const [suggestedTags, setSuggestedTags] = useState<string[]>([]);\n  const [hashtagInput, setHashtagInput] = useState(\"\");\n  const [proInput, setProInput] = useState(\"\");\n  const [conInput, setConInput] = useState(\"\");\n  const [bodyCharCount, setBodyCharCount] = useState(0);\n  const [titleCharCount, setTitleCharCount] = useState(0);\n  const [uploadedFiles, setUploadedFiles] = useState<Array<{ name: string; url: string }>>([]);\n  const [isUploading, setIsUploading] = useState(false);\n  const [showCustomBroker, setShowCustomBroker] = useState(false);\n  \n  // Pre-select category from URL param\n  const categoryParam = searchParams?.get(\"category\") || \"\";\n  \n  // Get subcategories for selected category\n  const parentCategories = categories.filter(c => !c.parentSlug);\n  const [selectedCategory, setSelectedCategory] = useState<string>(categoryParam);\n  const subcategories = categories.filter(c => c.parentSlug === selectedCategory);\n  \n  // Fetch all brokers from database using apiRequest\n  const { data: brokers, isLoading: brokersLoading } = useQuery<Broker[]>({\n    queryKey: ['/api/brokers'],\n  });\n  \n  // Auto-save draft\n  const { saveDraft, loadDraft, clearDraft } = useThreadDraft(selectedCategory || \"general\");\n  \n  const form = useForm<ThreadFormData>({\n    resolver: zodResolver(threadFormSchema),\n    defaultValues: {\n      title: \"\",\n      body: \"\",\n      categorySlug: categoryParam,\n      subcategorySlug: \"\",\n      threadType: \"discussion\",\n      seoExcerpt: \"\",\n      primaryKeyword: \"\",\n      instruments: [],\n      timeframes: [],\n      strategies: [],\n      platform: \"\",\n      broker: \"\",\n      riskNote: \"\",\n      hashtags: [],\n      reviewTarget: \"\",\n      reviewVersion: \"\",\n      reviewPros: [],\n      reviewCons: [],\n      questionSummary: \"\",\n      attachmentUrls: [],\n    },\n  });\n\n  const watchedValues = form.watch();\n  const watchedThreadType = form.watch(\"threadType\");\n\n  // Load draft on mount\n  useEffect(() => {\n    const draft = loadDraft();\n    if (draft) {\n      const shouldRestore = window.confirm(\"Restore previous draft?\");\n      if (shouldRestore && draft) {\n        Object.keys(draft).forEach((key) => {\n          if (key !== 'savedAt') {\n            form.setValue(key as any, (draft as any)[key]);\n          }\n        });\n      } else {\n        clearDraft();\n      }\n    }\n  }, []);\n\n  // Auto-save every 5 seconds\n  useEffect(() => {\n    const interval = setInterval(() => {\n      const values = form.getValues();\n      if (values.title || values.body) {\n        saveDraft(values);\n      }\n    }, 5000);\n    return () => clearInterval(interval);\n  }, [form, saveDraft]);\n\n  // Auto-suggest tags based on title and body\n  useEffect(() => {\n    const text = `${watchedValues.title} ${watchedValues.body}`;\n    if (text.trim().length > 20) {\n      const tags = extractPotentialTags(text);\n      setSuggestedTags(tags);\n    } else {\n      setSuggestedTags([]);\n    }\n  }, [watchedValues.title, watchedValues.body]);\n\n  // Update character counts\n  useEffect(() => {\n    setBodyCharCount((watchedValues.body || \"\").length);\n    setTitleCharCount((watchedValues.title || \"\").length);\n  }, [watchedValues.body, watchedValues.title]);\n\n  // Skip step 1 if no subcategories\n  useEffect(() => {\n    if (currentStep === 1 && subcategories.length === 0) {\n      setCurrentStep(2);\n    }\n  }, [currentStep, subcategories.length]);\n\n  const createThreadMutation = useMutation({\n    mutationFn: async (data: ThreadFormData) => {\n      const res = await apiRequest(\"POST\", \"/api/threads\", data);\n      return await res.json() as { thread: any; coinsEarned: number; message: string };\n    },\n    onSuccess: (response) => {\n      clearDraft();\n      \n      const threadUrl = `${window.location.origin}/thread/${response.thread.slug}`;\n      \n      const copyLink = async () => {\n        try {\n          await navigator.clipboard.writeText(threadUrl);\n          toast({\n            title: \"Link copied!\",\n            description: \"Thread URL copied to clipboard\",\n          });\n        } catch (error) {\n          toast({\n            title: \"Failed to copy\",\n            description: \"Please copy the link manually\",\n            variant: \"destructive\",\n          });\n        }\n      };\n      \n      const shareThread = async () => {\n        if (navigator.share) {\n          try {\n            await navigator.share({\n              title: response.thread.title,\n              text: \"Check out this thread on YoForex\",\n              url: threadUrl,\n            });\n          } catch (error) {\n            // User cancelled or share failed, fall back to copy\n            copyLink();\n          }\n        } else {\n          // Fallback to copy link\n          copyLink();\n        }\n      };\n      \n      const followThread = async () => {\n        try {\n          // TODO: Implement follow thread API call when available\n          toast({\n            title: \"Following thread\",\n            description: \"You'll get notified of new replies\",\n          });\n        } catch (error) {\n          toast({\n            title: \"Failed to follow\",\n            description: \"Please try again later\",\n            variant: \"destructive\",\n          });\n        }\n      };\n      \n      toast({\n        title: \"Posted!\",\n        description: (\n          <div className=\"space-y-3\">\n            <p>{response.message} (+{response.coinsEarned} coins)</p>\n            <div className=\"flex gap-2 flex-wrap\">\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={copyLink}\n                data-testid=\"button-copy-link\"\n              >\n                <Copy className=\"h-3 w-3 mr-1\" />\n                Copy link\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={shareThread}\n                data-testid=\"button-share\"\n              >\n                <Share2 className=\"h-3 w-3 mr-1\" />\n                Share\n              </Button>\n              <Button\n                size=\"sm\"\n                variant=\"outline\"\n                onClick={followThread}\n                data-testid=\"button-follow\"\n              >\n                <Bell className=\"h-3 w-3 mr-1\" />\n                Follow\n              </Button>\n            </div>\n          </div>\n        ),\n        duration: 10000, // Extended duration to allow interaction with buttons\n      });\n      \n      // Navigate after a short delay to allow toast interaction\n      setTimeout(() => {\n        router.push(`/thread/${response.thread.slug}`);\n      }, 1000);\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Failed to create thread\",\n        description: error.message || \"Please try again\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  const onSubmit = async (data: ThreadFormData) => {\n    requireAuth(() => {\n      // Add uploaded file URLs to form data\n      data.attachmentUrls = uploadedFiles.map(f => f.url);\n      \n      createThreadMutation.mutate(data);\n    });\n  };\n\n  const handleFileUpload = async (event: React.ChangeEvent<HTMLInputElement>) => {\n    const files = event.target.files;\n    if (!files || files.length === 0) return;\n\n    // Validate file count\n    if (uploadedFiles.length + files.length > 10) {\n      toast({\n        title: \"Too many files\",\n        description: \"Maximum 10 files allowed\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    // Validate file sizes\n    for (const file of Array.from(files)) {\n      if (file.size > 5 * 1024 * 1024) {\n        toast({\n          title: \"File too large\",\n          description: `${file.name} exceeds 5MB limit`,\n          variant: \"destructive\",\n        });\n        return;\n      }\n    }\n\n    setIsUploading(true);\n    \n    try {\n      const formData = new FormData();\n      Array.from(files).forEach((file) => {\n        formData.append('files', file);\n      });\n\n      const res = await fetch(\"/api/upload\", {\n        method: \"POST\",\n        body: formData,\n        credentials: \"include\",\n      });\n\n      if (!res.ok) {\n        const text = await res.text();\n        throw new Error(text || \"Upload failed\");\n      }\n\n      const response = await res.json() as { urls: string[]; message: string };\n\n      const newFiles = response.urls.map((url: string, idx: number) => ({\n        name: files[idx].name,\n        url: url,\n      }));\n\n      setUploadedFiles([...uploadedFiles, ...newFiles]);\n      \n      toast({\n        title: \"Files uploaded!\",\n        description: response.message,\n      });\n    } catch (error: any) {\n      toast({\n        title: \"Upload failed\",\n        description: error.message || \"Failed to upload files\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsUploading(false);\n      // Reset input\n      event.target.value = '';\n    }\n  };\n\n  const removeUploadedFile = (index: number) => {\n    setUploadedFiles(uploadedFiles.filter((_, i) => i !== index));\n  };\n\n  const toggleTag = (field: \"instruments\" | \"timeframes\" | \"strategies\", value: string) => {\n    const current = form.getValues(field) || [];\n    if (current.includes(value)) {\n      form.setValue(field, current.filter(v => v !== value));\n    } else {\n      form.setValue(field, [...current, value]);\n    }\n  };\n\n  const addHashtag = () => {\n    if (!hashtagInput.trim()) return;\n    const normalized = hashtagInput.trim().replace(/^#/, \"\").toLowerCase();\n    const current = form.getValues(\"hashtags\") || [];\n    if (!current.includes(normalized) && current.length < 10) {\n      form.setValue(\"hashtags\", [...current, normalized]);\n    }\n    setHashtagInput(\"\");\n  };\n\n  const removeHashtag = (tag: string) => {\n    const current = form.getValues(\"hashtags\") || [];\n    form.setValue(\"hashtags\", current.filter(t => t !== tag));\n  };\n\n  const addPro = () => {\n    if (!proInput.trim()) return;\n    const current = form.getValues(\"reviewPros\") || [];\n    form.setValue(\"reviewPros\", [...current, proInput.trim()]);\n    setProInput(\"\");\n  };\n\n  const addCon = () => {\n    if (!conInput.trim()) return;\n    const current = form.getValues(\"reviewCons\") || [];\n    form.setValue(\"reviewCons\", [...current, conInput.trim()]);\n    setConInput(\"\");\n  };\n\n  const totalTags = (watchedValues.instruments?.length || 0) + \n    (watchedValues.timeframes?.length || 0) + \n    (watchedValues.strategies?.length || 0) + \n    (watchedValues.hashtags?.length || 0);\n\n  const threadTypeIcon = {\n    question: HelpCircle,\n    discussion: MessageSquare,\n    review: Star,\n    journal: BookOpen,\n    guide: Lightbulb,\n    program_sharing: Code,\n  };\n\n  return (\n    <>\n      <Header />\n      <div className=\"min-h-screen bg-background\">\n        <div className=\"container max-w-4xl mx-auto px-4 py-8\">\n          <div className=\"mb-6\">\n            <h1 className=\"text-3xl font-bold\" data-testid=\"text-page-title\">Start a Thread</h1>\n            <p className=\"text-muted-foreground mt-2\">Share your knowledge, ask questions, and connect with traders</p>\n          </div>\n\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              {/* STEP 1: Where (Subcategory Selection) */}\n              {currentStep === 1 && subcategories.length > 0 && (\n                <Card data-testid=\"card-step-where\">\n                  <CardHeader>\n                    <CardTitle>Where does this fit?</CardTitle>\n                    <CardDescription>Choose the best subcategory for your thread</CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    <FormField\n                      control={form.control}\n                      name=\"subcategorySlug\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                            {subcategories.map((sub) => (\n                              <Button\n                                key={sub.slug}\n                                type=\"button\"\n                                variant={field.value === sub.slug ? \"default\" : \"outline\"}\n                                className=\"h-auto py-4 px-4 flex-col items-start gap-1\"\n                                onClick={() => field.onChange(sub.slug)}\n                                data-testid={`button-subcategory-${sub.slug}`}\n                              >\n                                <span className=\"font-semibold text-sm\">{sub.name}</span>\n                                <span className=\"text-xs opacity-80\">{sub.description}</span>\n                              </Button>\n                            ))}\n                          </div>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n                    <div className=\"flex justify-end\">\n                      <Button\n                        type=\"button\"\n                        onClick={() => setCurrentStep(2)}\n                        data-testid=\"button-next-step\"\n                      >\n                        Next <ChevronRight className=\"ml-2 h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* STEP 2: Write (Main Content) */}\n              {currentStep === 2 && (\n                <Card data-testid=\"card-step-write\">\n                  <CardHeader>\n                    <CardTitle>What's on your mind?</CardTitle>\n                    <CardDescription>Tell your story or ask your question</CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    {/* Title */}\n                    <FormField\n                      control={form.control}\n                      name=\"title\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Title</FormLabel>\n                          <FormControl>\n                            <Input\n                              {...field}\n                              placeholder=\"What's your topic? e.g., 'XAUUSD M5 scalping rules that worked for me'\"\n                              data-testid=\"input-title\"\n                            />\n                          </FormControl>\n                          <div className=\"flex justify-between text-xs text-muted-foreground\">\n                            <span>Short and clear works best</span>\n                            <span data-testid=\"text-char-count\">{titleCharCount} characters (15-90 required)</span>\n                          </div>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Body */}\n                    <FormField\n                      control={form.control}\n                      name=\"body\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Body</FormLabel>\n                          <FormControl>\n                            <Textarea\n                              {...field}\n                              rows={10}\n                              placeholder=\"Tell your story. What pair? timeframe? broker? results? What do you need help with?\"\n                              data-testid=\"textarea-body\"\n                            />\n                          </FormControl>\n                          <div className=\"flex justify-between text-xs text-muted-foreground\">\n                            <span>Share the basics: pair, timeframe, broker, your rules/results, and what you need</span>\n                            <span data-testid=\"text-body-char-count\">{bodyCharCount} characters (500-50,000 required)</span>\n                          </div>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Auto-suggested Tags */}\n                    {suggestedTags.length > 0 && (\n                      <div className=\"space-y-2\">\n                        <Label className=\"text-sm\">Looks right?</Label>\n                        <div className=\"flex flex-wrap gap-2\">\n                          {suggestedTags.map((tag) => {\n                            const isInstrument = INSTRUMENTS.some(i => i.value.toLowerCase() === tag);\n                            const isTimeframe = TIMEFRAMES.some(t => t.value.toLowerCase() === tag);\n                            const isStrategy = STRATEGIES.some(s => s.value.toLowerCase() === tag);\n                            \n                            let field: \"instruments\" | \"timeframes\" | \"strategies\" = \"instruments\";\n                            if (isTimeframe) field = \"timeframes\";\n                            else if (isStrategy) field = \"strategies\";\n                            \n                            const isSelected = (form.getValues(field) || []).includes(tag);\n                            \n                            return (\n                              <Badge\n                                key={tag}\n                                variant={isSelected ? \"default\" : \"outline\"}\n                                className=\"cursor-pointer hover-elevate\"\n                                onClick={() => toggleTag(field, tag)}\n                                data-testid={`badge-suggested-tag-${tag}`}\n                              >\n                                {tag.toUpperCase()}\n                              </Badge>\n                            );\n                          })}\n                        </div>\n                      </div>\n                    )}\n\n                    {/* Optional Details Accordion */}\n                    <Accordion type=\"single\" collapsible>\n                      <AccordionItem value=\"details\">\n                        <AccordionTrigger data-testid=\"button-toggle-details\">\n                          Add details (optional)\n                        </AccordionTrigger>\n                        <AccordionContent className=\"space-y-4 pt-4\">\n                          {/* Instruments */}\n                          <FormField\n                            control={form.control}\n                            name=\"instruments\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Instruments</FormLabel>\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {INSTRUMENTS.slice(0, 15).map((inst) => (\n                                    <Badge\n                                      key={inst.value}\n                                      variant={(field.value || []).includes(inst.value) ? \"default\" : \"outline\"}\n                                      className=\"cursor-pointer hover-elevate\"\n                                      onClick={() => toggleTag(\"instruments\", inst.value)}\n                                      data-testid={`badge-instrument-${inst.value}`}\n                                    >\n                                      {inst.label}\n                                    </Badge>\n                                  ))}\n                                </div>\n                              </FormItem>\n                            )}\n                          />\n\n                          {/* Timeframes */}\n                          <FormField\n                            control={form.control}\n                            name=\"timeframes\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Timeframes</FormLabel>\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {TIMEFRAMES.map((tf) => (\n                                    <Badge\n                                      key={tf.value}\n                                      variant={(field.value || []).includes(tf.value) ? \"default\" : \"outline\"}\n                                      className=\"cursor-pointer hover-elevate\"\n                                      onClick={() => toggleTag(\"timeframes\", tf.value)}\n                                      data-testid={`badge-timeframe-${tf.value}`}\n                                    >\n                                      {tf.label}\n                                    </Badge>\n                                  ))}\n                                </div>\n                              </FormItem>\n                            )}\n                          />\n\n                          {/* Strategies */}\n                          <FormField\n                            control={form.control}\n                            name=\"strategies\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Strategies</FormLabel>\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {STRATEGIES.slice(0, 12).map((strat) => (\n                                    <Badge\n                                      key={strat.value}\n                                      variant={(field.value || []).includes(strat.value) ? \"default\" : \"outline\"}\n                                      className=\"cursor-pointer hover-elevate\"\n                                      onClick={() => toggleTag(\"strategies\", strat.value)}\n                                      data-testid={`badge-strategy-${strat.value}`}\n                                    >\n                                      {strat.label}\n                                    </Badge>\n                                  ))}\n                                </div>\n                              </FormItem>\n                            )}\n                          />\n\n                          {/* Platform */}\n                          <FormField\n                            control={form.control}\n                            name=\"platform\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Platform</FormLabel>\n                                <Select onValueChange={field.onChange} value={field.value}>\n                                  <FormControl>\n                                    <SelectTrigger data-testid=\"select-platform\">\n                                      <SelectValue placeholder=\"Select platform\" />\n                                    </SelectTrigger>\n                                  </FormControl>\n                                  <SelectContent>\n                                    {PLATFORMS.map((plat) => (\n                                      <SelectItem key={plat.value} value={plat.value}>\n                                        {plat.label}\n                                      </SelectItem>\n                                    ))}\n                                  </SelectContent>\n                                </Select>\n                              </FormItem>\n                            )}\n                          />\n\n                          {/* Broker */}\n                          <FormField\n                            control={form.control}\n                            name=\"broker\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Broker</FormLabel>\n                                {brokersLoading ? (\n                                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground py-2\">\n                                    <Loader2 className=\"h-4 w-4 animate-spin\" />\n                                    Loading brokers...\n                                  </div>\n                                ) : (\n                                  <>\n                                    <Select \n                                      onValueChange={(value) => {\n                                        if (value === \"other\") {\n                                          setShowCustomBroker(true);\n                                          field.onChange(\"\");\n                                        } else {\n                                          setShowCustomBroker(false);\n                                          field.onChange(value);\n                                        }\n                                      }} \n                                      value={showCustomBroker ? \"other\" : field.value}\n                                    >\n                                      <FormControl>\n                                        <SelectTrigger data-testid=\"select-broker\">\n                                          <SelectValue placeholder=\"Select broker\" />\n                                        </SelectTrigger>\n                                      </FormControl>\n                                      <SelectContent>\n                                        {brokers && brokers.length > 0 ? (\n                                          <>\n                                            {brokers.map((broker) => (\n                                              <SelectItem key={broker.id} value={broker.name}>\n                                                {broker.name}\n                                              </SelectItem>\n                                            ))}\n                                            <SelectItem value=\"other\">Other (add new broker)</SelectItem>\n                                          </>\n                                        ) : (\n                                          <SelectItem value=\"other\">Other (add new broker)</SelectItem>\n                                        )}\n                                      </SelectContent>\n                                    </Select>\n                                    {showCustomBroker && (\n                                      <FormControl>\n                                        <Input\n                                          value={field.value}\n                                          onChange={(e) => {\n                                            field.onChange(e.target.value);\n                                          }}\n                                          placeholder=\"Enter broker name\"\n                                          data-testid=\"input-custom-broker\"\n                                          className=\"mt-2\"\n                                        />\n                                      </FormControl>\n                                    )}\n                                  </>\n                                )}\n                              </FormItem>\n                            )}\n                          />\n\n                          {/* Risk Note */}\n                          <FormField\n                            control={form.control}\n                            name=\"riskNote\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Risk Note</FormLabel>\n                                <FormControl>\n                                  <Input\n                                    {...field}\n                                    placeholder=\"e.g., risk 1% per trade\"\n                                    data-testid=\"input-risk-note\"\n                                  />\n                                </FormControl>\n                              </FormItem>\n                            )}\n                          />\n                        </AccordionContent>\n                      </AccordionItem>\n                    </Accordion>\n\n                    <div className=\"flex justify-between\">\n                      {subcategories.length > 0 && (\n                        <Button\n                          type=\"button\"\n                          variant=\"outline\"\n                          onClick={() => setCurrentStep(1)}\n                          data-testid=\"button-back\"\n                        >\n                          <ChevronLeft className=\"mr-2 h-4 w-4\" /> Back\n                        </Button>\n                      )}\n                      <Button\n                        type=\"button\"\n                        onClick={() => setCurrentStep(3)}\n                        className=\"ml-auto\"\n                        data-testid=\"button-next-step\"\n                      >\n                        Next <ChevronRight className=\"ml-2 h-4 w-4\" />\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n\n              {/* STEP 3: Finish (Thread Type, Conditional Fields, SEO, Hashtags) */}\n              {currentStep === 3 && (\n                <Card data-testid=\"card-step-finish\">\n                  <CardHeader>\n                    <CardTitle>Finish up</CardTitle>\n                    <CardDescription>Choose thread type and add final details</CardDescription>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    {/* Thread Type Selection */}\n                    <FormField\n                      control={form.control}\n                      name=\"threadType\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Thread Type</FormLabel>\n                          <div className=\"grid grid-cols-2 md:grid-cols-3 gap-3\">\n                            {THREAD_TYPES.map((type) => {\n                              const Icon = threadTypeIcon[type.value as keyof typeof threadTypeIcon];\n                              return (\n                                <Button\n                                  key={type.value}\n                                  type=\"button\"\n                                  variant={field.value === type.value ? \"default\" : \"outline\"}\n                                  className=\"h-auto py-4 px-4 flex-col items-center gap-2\"\n                                  onClick={() => field.onChange(type.value)}\n                                  data-testid={`button-thread-type-${type.value}`}\n                                >\n                                  <Icon className=\"h-6 w-6\" />\n                                  <span className=\"font-semibold text-sm\">{type.label}</span>\n                                  <span className=\"text-xs opacity-80 text-center\">{type.description}</span>\n                                </Button>\n                              );\n                            })}\n                          </div>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* Conditional: Question Summary */}\n                    {watchedThreadType === \"question\" && (\n                      <FormField\n                        control={form.control}\n                        name=\"questionSummary\"\n                        render={({ field }) => (\n                          <FormItem>\n                            <FormLabel>What do you want solved?</FormLabel>\n                            <FormControl>\n                              <Textarea\n                                {...field}\n                                rows={2}\n                                placeholder=\"Summarize your question in 1-2 sentences\"\n                                data-testid=\"textarea-question-summary\"\n                              />\n                            </FormControl>\n                            <FormMessage />\n                          </FormItem>\n                        )}\n                      />\n                    )}\n\n                    {/* Conditional: Review Fields */}\n                    {watchedThreadType === \"review\" && (\n                      <div className=\"space-y-4\">\n                        <FormField\n                          control={form.control}\n                          name=\"reviewTarget\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>What are you reviewing? *</FormLabel>\n                              <FormControl>\n                                <Input\n                                  {...field}\n                                  placeholder=\"EA/Indicator/Broker name\"\n                                  data-testid=\"input-review-target\"\n                                />\n                              </FormControl>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        <FormField\n                          control={form.control}\n                          name=\"reviewVersion\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Version (optional)</FormLabel>\n                              <FormControl>\n                                <Input\n                                  {...field}\n                                  placeholder=\"e.g., v2.3\"\n                                  data-testid=\"input-review-version\"\n                                />\n                              </FormControl>\n                            </FormItem>\n                          )}\n                        />\n\n                        <FormField\n                          control={form.control}\n                          name=\"reviewRating\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Rating (1-5 stars) *</FormLabel>\n                              <div className=\"flex gap-2\">\n                                {[1, 2, 3, 4, 5].map((rating) => (\n                                  <Button\n                                    key={rating}\n                                    type=\"button\"\n                                    variant={field.value === rating ? \"default\" : \"outline\"}\n                                    size=\"icon\"\n                                    onClick={() => field.onChange(rating)}\n                                    data-testid={`button-rating-${rating}`}\n                                  >\n                                    <Star className={`h-4 w-4 ${field.value && field.value >= rating ? \"fill-current\" : \"\"}`} />\n                                  </Button>\n                                ))}\n                              </div>\n                              <FormMessage />\n                            </FormItem>\n                          )}\n                        />\n\n                        {/* Pros */}\n                        <FormField\n                          control={form.control}\n                          name=\"reviewPros\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Pros (optional)</FormLabel>\n                              <div className=\"space-y-2\">\n                                <div className=\"flex gap-2\">\n                                  <Input\n                                    value={proInput}\n                                    onChange={(e) => setProInput(e.target.value)}\n                                    placeholder=\"Add a pro\"\n                                    data-testid=\"input-pro\"\n                                    onKeyDown={(e) => {\n                                      if (e.key === \"Enter\") {\n                                        e.preventDefault();\n                                        addPro();\n                                      }\n                                    }}\n                                  />\n                                  <Button type=\"button\" onClick={addPro} data-testid=\"button-add-pro\">\n                                    Add\n                                  </Button>\n                                </div>\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {(field.value || []).map((pro, idx) => (\n                                    <Badge key={idx} variant=\"default\" className=\"gap-1\">\n                                      ✓ {pro}\n                                      <X\n                                        className=\"h-3 w-3 cursor-pointer\"\n                                        onClick={() => {\n                                          form.setValue(\"reviewPros\", (field.value || []).filter((_, i) => i !== idx));\n                                        }}\n                                      />\n                                    </Badge>\n                                  ))}\n                                </div>\n                              </div>\n                            </FormItem>\n                          )}\n                        />\n\n                        {/* Cons */}\n                        <FormField\n                          control={form.control}\n                          name=\"reviewCons\"\n                          render={({ field }) => (\n                            <FormItem>\n                              <FormLabel>Cons (optional)</FormLabel>\n                              <div className=\"space-y-2\">\n                                <div className=\"flex gap-2\">\n                                  <Input\n                                    value={conInput}\n                                    onChange={(e) => setConInput(e.target.value)}\n                                    placeholder=\"Add a con\"\n                                    data-testid=\"input-con\"\n                                    onKeyDown={(e) => {\n                                      if (e.key === \"Enter\") {\n                                        e.preventDefault();\n                                        addCon();\n                                      }\n                                    }}\n                                  />\n                                  <Button type=\"button\" onClick={addCon} data-testid=\"button-add-con\">\n                                    Add\n                                  </Button>\n                                </div>\n                                <div className=\"flex flex-wrap gap-2\">\n                                  {(field.value || []).map((con, idx) => (\n                                    <Badge key={idx} variant=\"destructive\" className=\"gap-1\">\n                                      ✗ {con}\n                                      <X\n                                        className=\"h-3 w-3 cursor-pointer\"\n                                        onClick={() => {\n                                          form.setValue(\"reviewCons\", (field.value || []).filter((_, i) => i !== idx));\n                                        }}\n                                      />\n                                    </Badge>\n                                  ))}\n                                </div>\n                              </div>\n                            </FormItem>\n                          )}\n                        />\n                      </div>\n                    )}\n\n                    {/* Optional SEO Section */}\n                    <Accordion type=\"single\" collapsible defaultValue=\"seo\">\n                      <AccordionItem value=\"seo\">\n                        <AccordionTrigger data-testid=\"button-toggle-seo\">\n                          Help others find this (optional)\n                        </AccordionTrigger>\n                        <AccordionContent className=\"space-y-4 pt-4\">\n                          <FormField\n                            control={form.control}\n                            name=\"primaryKeyword\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>Primary Keyword (1-6 words)</FormLabel>\n                                <FormControl>\n                                  <Input\n                                    {...field}\n                                    placeholder=\"e.g., xauusd m5 scalping\"\n                                    data-testid=\"input-primary-keyword\"\n                                  />\n                                </FormControl>\n                                <FormDescription>Short phrase that describes your topic</FormDescription>\n                              </FormItem>\n                            )}\n                          />\n\n                          <FormField\n                            control={form.control}\n                            name=\"seoExcerpt\"\n                            render={({ field }) => (\n                              <FormItem>\n                                <FormLabel>SEO Excerpt (120-160 chars)</FormLabel>\n                                <FormControl>\n                                  <Textarea\n                                    {...field}\n                                    rows={2}\n                                    placeholder=\"One sentence summary for search engines\"\n                                    data-testid=\"textarea-seo-excerpt\"\n                                  />\n                                </FormControl>\n                                <FormDescription>\n                                  {((field.value || \"\").length)}/160 chars\n                                </FormDescription>\n                                <FormMessage />\n                              </FormItem>\n                            )}\n                          />\n\n                          {/* SEO Preview Component */}\n                          <SEOPreview\n                            title={watchedValues.title || \"\"}\n                            seoExcerpt={watchedValues.seoExcerpt || \"\"}\n                            primaryKeyword={watchedValues.primaryKeyword || \"\"}\n                            body={watchedValues.body || \"\"}\n                          />\n                        </AccordionContent>\n                      </AccordionItem>\n                    </Accordion>\n\n                    {/* Hashtags */}\n                    <FormField\n                      control={form.control}\n                      name=\"hashtags\"\n                      render={({ field }) => (\n                        <FormItem>\n                          <FormLabel>Hashtags (max 10)</FormLabel>\n                          <div className=\"space-y-2\">\n                            <div className=\"flex gap-2\">\n                              <Input\n                                value={hashtagInput}\n                                onChange={(e) => setHashtagInput(e.target.value)}\n                                placeholder=\"#xauusd #m5 #scalping\"\n                                data-testid=\"input-hashtag\"\n                                onKeyDown={(e) => {\n                                  if (e.key === \"Enter\") {\n                                    e.preventDefault();\n                                    addHashtag();\n                                  }\n                                }}\n                              />\n                              <Button type=\"button\" onClick={addHashtag} data-testid=\"button-add-hashtag\">\n                                Add\n                              </Button>\n                            </div>\n                            <div className=\"flex flex-wrap gap-2\">\n                              {(field.value || []).map((tag, idx) => (\n                                <Badge key={idx} variant=\"secondary\" className=\"gap-1\" data-testid={`badge-hashtag-${tag}`}>\n                                  #{tag}\n                                  <X\n                                    className=\"h-3 w-3 cursor-pointer\"\n                                    onClick={() => removeHashtag(tag)}\n                                  />\n                                </Badge>\n                              ))}\n                            </div>\n                          </div>\n                          <FormMessage />\n                        </FormItem>\n                      )}\n                    />\n\n                    {/* File Attachments */}\n                    <div className=\"space-y-3\">\n                      <FormLabel>Attachments (optional)</FormLabel>\n                      <div className=\"space-y-3\">\n                        <div className=\"flex items-center gap-2\">\n                          <Input\n                            type=\"file\"\n                            multiple\n                            accept=\".jpg,.jpeg,.png,.webp,.pdf,.set,.csv\"\n                            onChange={handleFileUpload}\n                            disabled={isUploading || uploadedFiles.length >= 10}\n                            className=\"flex-1\"\n                            data-testid=\"input-file-upload\"\n                          />\n                          {isUploading && <Loader2 className=\"h-4 w-4 animate-spin\" />}\n                        </div>\n                        <p className=\"text-xs text-muted-foreground\">\n                          Screenshots, PDFs, SET files, CSV. Max 5MB each, 10 files total.\n                        </p>\n                        \n                        {uploadedFiles.length > 0 && (\n                          <div className=\"space-y-2\">\n                            {uploadedFiles.map((file, idx) => (\n                              <div \n                                key={idx} \n                                className=\"flex items-center justify-between p-3 rounded-md border bg-card\"\n                                data-testid={`uploaded-file-${idx}`}\n                              >\n                                <div className=\"flex items-center gap-2\">\n                                  <FileText className=\"h-4 w-4 text-muted-foreground\" />\n                                  <span className=\"text-sm\">{file.name}</span>\n                                  <Check className=\"h-4 w-4 text-green-500\" />\n                                </div>\n                                <Button\n                                  type=\"button\"\n                                  variant=\"ghost\"\n                                  size=\"icon\"\n                                  onClick={() => removeUploadedFile(idx)}\n                                  data-testid={`button-remove-file-${idx}`}\n                                >\n                                  <X className=\"h-4 w-4\" />\n                                </Button>\n                              </div>\n                            ))}\n                          </div>\n                        )}\n                      </div>\n                    </div>\n\n                    {/* Tag Count Warning */}\n                    {totalTags > 12 && (\n                      <Alert variant=\"destructive\">\n                        <AlertCircle className=\"h-4 w-4\" />\n                        <AlertDescription>\n                          You have {totalTags} tags. Maximum is 12. Please remove {totalTags - 12} tags.\n                        </AlertDescription>\n                      </Alert>\n                    )}\n\n                    {totalTags > 0 && totalTags <= 12 && (\n                      <div className=\"text-sm text-muted-foreground\" data-testid=\"text-tag-count\">\n                        Total tags: {totalTags}/12\n                      </div>\n                    )}\n\n                    <div className=\"flex justify-between pt-4\">\n                      <Button\n                        type=\"button\"\n                        variant=\"outline\"\n                        onClick={() => setCurrentStep(2)}\n                        data-testid=\"button-back\"\n                      >\n                        <ChevronLeft className=\"mr-2 h-4 w-4\" /> Back\n                      </Button>\n                      <Button\n                        type=\"submit\"\n                        disabled={createThreadMutation.isPending || totalTags > 12}\n                        data-testid=\"button-submit\"\n                      >\n                        {createThreadMutation.isPending ? \"Posting...\" : \"Post Thread\"}\n                      </Button>\n                    </div>\n                  </CardContent>\n                </Card>\n              )}\n            </form>\n          </Form>\n        </div>\n      </div>\n      <EnhancedFooter />\n      <AuthPrompt />\n    </>\n  );\n}\n","import * as React from \"react\"\nimport * as AccordionPrimitive from \"@radix-ui/react-accordion\"\nimport { ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Accordion = AccordionPrimitive.Root\n\nconst AccordionItem = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>\n>(({ className, ...props }, ref) => (\n  <AccordionPrimitive.Item\n    ref={ref}\n    className={cn(\"border-b\", className)}\n    {...props}\n  />\n))\nAccordionItem.displayName = \"AccordionItem\"\n\nconst AccordionTrigger = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Header className=\"flex\">\n    <AccordionPrimitive.Trigger\n      ref={ref}\n      className={cn(\n        \"flex flex-1 items-center justify-between py-4 font-medium transition-all hover:underline [&[data-state=open]>svg]:rotate-180\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <ChevronDown className=\"h-4 w-4 shrink-0 transition-transform duration-200\" />\n    </AccordionPrimitive.Trigger>\n  </AccordionPrimitive.Header>\n))\nAccordionTrigger.displayName = AccordionPrimitive.Trigger.displayName\n\nconst AccordionContent = React.forwardRef<\n  React.ElementRef<typeof AccordionPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AccordionPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <AccordionPrimitive.Content\n    ref={ref}\n    className=\"overflow-hidden text-sm transition-all data-[state=closed]:animate-accordion-up data-[state=open]:animate-accordion-down\"\n    {...props}\n  >\n    <div className={cn(\"pb-4 pt-0\", className)}>{children}</div>\n  </AccordionPrimitive.Content>\n))\n\nAccordionContent.displayName = AccordionPrimitive.Content.displayName\n\nexport { Accordion, AccordionItem, AccordionTrigger, AccordionContent }\n","/**\n * Trading Metadata Reference Data\n * Used for thread creation, filtering, and tagging\n */\n\n// Trading Instruments\nexport const INSTRUMENTS = [\n  // Forex Majors\n  { value: \"EURUSD\", label: \"EUR/USD\", category: \"forex\" },\n  { value: \"GBPUSD\", label: \"GBP/USD\", category: \"forex\" },\n  { value: \"USDJPY\", label: \"USD/JPY\", category: \"forex\" },\n  { value: \"USDCHF\", label: \"USD/CHF\", category: \"forex\" },\n  { value: \"AUDUSD\", label: \"AUD/USD\", category: \"forex\" },\n  { value: \"USDCAD\", label: \"USD/CAD\", category: \"forex\" },\n  { value: \"NZDUSD\", label: \"NZD/USD\", category: \"forex\" },\n  \n  // Forex Crosses\n  { value: \"EURJPY\", label: \"EUR/JPY\", category: \"forex\" },\n  { value: \"GBPJPY\", label: \"GBP/JPY\", category: \"forex\" },\n  { value: \"EURGBP\", label: \"EUR/GBP\", category: \"forex\" },\n  { value: \"AUDJPY\", label: \"AUD/JPY\", category: \"forex\" },\n  \n  // Metals (Gold/Silver)\n  { value: \"XAUUSD\", label: \"XAU/USD (Gold)\", category: \"metals\" },\n  { value: \"XAGUSD\", label: \"XAG/USD (Silver)\", category: \"metals\" },\n  \n  // Crypto\n  { value: \"BTCUSD\", label: \"BTC/USD\", category: \"crypto\" },\n  { value: \"ETHUSD\", label: \"ETH/USD\", category: \"crypto\" },\n  \n  // Indices\n  { value: \"US30\", label: \"US30 (Dow Jones)\", category: \"indices\" },\n  { value: \"NAS100\", label: \"NAS100 (Nasdaq)\", category: \"indices\" },\n  { value: \"SPX500\", label: \"SPX500 (S&P 500)\", category: \"indices\" },\n  { value: \"UK100\", label: \"UK100 (FTSE)\", category: \"indices\" },\n  { value: \"GER40\", label: \"GER40 (DAX)\", category: \"indices\" },\n  { value: \"JPN225\", label: \"JPN225 (Nikkei)\", category: \"indices\" },\n  \n  // Oil\n  { value: \"USOIL\", label: \"US Oil (WTI)\", category: \"commodities\" },\n  { value: \"UKOIL\", label: \"UK Oil (Brent)\", category: \"commodities\" },\n] as const;\n\n// Trading Timeframes\nexport const TIMEFRAMES = [\n  { value: \"M1\", label: \"M1 (1 Minute)\", category: \"scalping\" },\n  { value: \"M5\", label: \"M5 (5 Minutes)\", category: \"scalping\" },\n  { value: \"M15\", label: \"M15 (15 Minutes)\", category: \"day-trading\" },\n  { value: \"M30\", label: \"M30 (30 Minutes)\", category: \"day-trading\" },\n  { value: \"H1\", label: \"H1 (1 Hour)\", category: \"day-trading\" },\n  { value: \"H4\", label: \"H4 (4 Hours)\", category: \"swing\" },\n  { value: \"D1\", label: \"D1 (Daily)\", category: \"swing\" },\n  { value: \"W1\", label: \"W1 (Weekly)\", category: \"position\" },\n  { value: \"MN1\", label: \"MN1 (Monthly)\", category: \"position\" },\n] as const;\n\n// Trading Strategies\nexport const STRATEGIES = [\n  // Core Strategies\n  { value: \"scalping\", label: \"Scalping\", description: \"Quick trades, small profits\" },\n  { value: \"day-trading\", label: \"Day Trading\", description: \"Intraday positions\" },\n  { value: \"swing-trading\", label: \"Swing Trading\", description: \"Multi-day positions\" },\n  { value: \"position-trading\", label: \"Position Trading\", description: \"Long-term positions\" },\n  \n  // Analysis Methods\n  { value: \"trend-following\", label: \"Trend Following\", description: \"Trade with the trend\" },\n  { value: \"mean-reversion\", label: \"Mean Reversion\", description: \"Trade reversals\" },\n  { value: \"breakout\", label: \"Breakout\", description: \"Trade breakouts\" },\n  { value: \"range-trading\", label: \"Range Trading\", description: \"Trade within ranges\" },\n  \n  // Advanced Strategies\n  { value: \"grid-trading\", label: \"Grid Trading\", description: \"Grid of orders\" },\n  { value: \"martingale\", label: \"Martingale\", description: \"Progressive position sizing\" },\n  { value: \"hedging\", label: \"Hedging\", description: \"Risk hedging\" },\n  { value: \"arbitrage\", label: \"Arbitrage\", description: \"Price differences\" },\n  \n  // News & Events\n  { value: \"news-trading\", label: \"News Trading\", description: \"Trade news events\" },\n  { value: \"fundamental\", label: \"Fundamental\", description: \"Economic analysis\" },\n  \n  // Technical Patterns\n  { value: \"price-action\", label: \"Price Action\", description: \"Pure price analysis\" },\n  { value: \"supply-demand\", label: \"Supply & Demand\", description: \"S/D zones\" },\n  { value: \"order-blocks\", label: \"Order Blocks\", description: \"Institutional levels\" },\n  { value: \"smart-money\", label: \"Smart Money Concepts\", description: \"SMC/ICT\" },\n  \n  // Multi-Strategy\n  { value: \"multi-pair\", label: \"Multi-Pair\", description: \"Multiple pairs\" },\n  { value: \"multi-timeframe\", label: \"Multi-Timeframe\", description: \"Multiple TFs\" },\n] as const;\n\n// Trading Platforms\nexport const PLATFORMS = [\n  { value: \"MT4\", label: \"MetaTrader 4 (MT4)\" },\n  { value: \"MT5\", label: \"MetaTrader 5 (MT5)\" },\n  { value: \"cTrader\", label: \"cTrader\" },\n  { value: \"TradingView\", label: \"TradingView\" },\n  { value: \"NinjaTrader\", label: \"NinjaTrader\" },\n  { value: \"Other\", label: \"Other\" },\n] as const;\n\n// Popular Brokers (for autocomplete suggestions)\nexport const POPULAR_BROKERS = [\n  \"IC Markets\",\n  \"Pepperstone\",\n  \"XM\",\n  \"FXTM\",\n  \"FBS\",\n  \"Exness\",\n  \"HotForex\",\n  \"OctaFX\",\n  \"Roboforex\",\n  \"Alpari\",\n  \"Admiral Markets\",\n  \"IG\",\n  \"OANDA\",\n  \"Forex.com\",\n  \"Interactive Brokers\",\n  \"Plus500\",\n  \"eToro\",\n  \"AvaTrade\",\n  \"XTB\",\n  \"ThinkMarkets\",\n] as const;\n\n// Thread Types\nexport const THREAD_TYPES = [\n  {\n    value: \"question\",\n    label: \"Question\",\n    description: \"Ask for help or advice\",\n    icon: \"HelpCircle\",\n  },\n  {\n    value: \"discussion\",\n    label: \"Discussion\",\n    description: \"General trading discussion\",\n    icon: \"MessageSquare\",\n  },\n  {\n    value: \"review\",\n    label: \"Review\",\n    description: \"Review an EA, indicator, or broker\",\n    icon: \"Star\",\n  },\n  {\n    value: \"journal\",\n    label: \"Journal\",\n    description: \"Share your trading journey\",\n    icon: \"BookOpen\",\n  },\n  {\n    value: \"guide\",\n    label: \"Guide\",\n    description: \"How-to or tutorial\",\n    icon: \"Lightbulb\",\n  },\n  {\n    value: \"program_sharing\",\n    label: \"Program Sharing\",\n    description: \"Share EA/indicator/code\",\n    icon: \"Code\",\n  },\n] as const;\n\n// Utility functions\nexport function getInstrumentsByCategory(category: string) {\n  return INSTRUMENTS.filter((i) => i.category === category);\n}\n\nexport function getTimeframesByCategory(category: string) {\n  return TIMEFRAMES.filter((t) => t.category === category);\n}\n\nexport function getStrategyByValue(value: string) {\n  return STRATEGIES.find((s) => s.value === value);\n}\n\nexport function getPlatformByValue(value: string) {\n  return PLATFORMS.find((p) => p.value === value);\n}\n\n// Tag extraction from text\nexport function extractPotentialTags(text: string): string[] {\n  const tags: Set<string> = new Set();\n  const lowerText = text.toLowerCase();\n  \n  // Extract instruments\n  INSTRUMENTS.forEach((instrument) => {\n    if (lowerText.includes(instrument.value.toLowerCase()) || \n        lowerText.includes(instrument.label.toLowerCase().replace(/\\//g, \"\"))) {\n      tags.add(instrument.value.toLowerCase());\n    }\n  });\n  \n  // Extract timeframes\n  TIMEFRAMES.forEach((timeframe) => {\n    const regex = new RegExp(`\\\\b${timeframe.value.toLowerCase()}\\\\b`, \"i\");\n    if (regex.test(lowerText)) {\n      tags.add(timeframe.value.toLowerCase());\n    }\n  });\n  \n  // Extract strategies\n  STRATEGIES.forEach((strategy) => {\n    if (lowerText.includes(strategy.value) || lowerText.includes(strategy.label.toLowerCase())) {\n      tags.add(strategy.value);\n    }\n  });\n  \n  // Extract platforms\n  PLATFORMS.forEach((platform) => {\n    if (lowerText.includes(platform.value.toLowerCase())) {\n      tags.add(platform.value.toLowerCase());\n    }\n  });\n  \n  return Array.from(tags);\n}\n\n// Validation\nexport function validatePrimaryKeyword(keyword: string): boolean {\n  const words = keyword.trim().split(/\\s+/);\n  return words.length >= 1 && words.length <= 6 && /^[a-z0-9\\s-]+$/i.test(keyword);\n}\n\nexport function validateSeoExcerpt(excerpt: string): boolean {\n  return excerpt.length >= 120 && excerpt.length <= 160;\n}\n\nexport function validateHashtag(hashtag: string): boolean {\n  const clean = hashtag.replace(/^#/, \"\");\n  return clean.length >= 2 && clean.length <= 24 && /^[a-z0-9-]+$/i.test(clean);\n}\n\n// Export types\nexport type Instrument = typeof INSTRUMENTS[number][\"value\"];\nexport type Timeframe = typeof TIMEFRAMES[number][\"value\"];\nexport type Strategy = typeof STRATEGIES[number][\"value\"];\nexport type Platform = typeof PLATFORMS[number][\"value\"];\nexport type ThreadType = typeof THREAD_TYPES[number][\"value\"];\n"],"names":[],"mappings":"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","ignoreList":[0,1]}