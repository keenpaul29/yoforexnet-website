{"version":3,"sources":["turbopack:///[project]/app/members/MembersClient.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useQuery } from \"@tanstack/react-query\";\nimport type { User } from \"@shared/schema\";\nimport Header from \"@/components/Header\";\nimport EnhancedFooter from \"@/components/EnhancedFooter\";\nimport { Card, CardContent, CardHeader, CardTitle, CardDescription } from \"@/components/ui/card\";\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from \"@/components/ui/tabs\";\nimport Link from \"next/link\";\nimport { \n  Trophy, \n  Coins,\n  TrendingUp,\n  Upload,\n  Star,\n  Award,\n  Crown,\n  Medal,\n  Users,\n  Search,\n  Filter,\n  Calendar,\n  Activity,\n  MessageSquare,\n  Target,\n  Flame,\n  Zap\n} from \"lucide-react\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface LeaderboardUser extends User {\n  contributionCount?: number;\n  uploadCount?: number;\n}\n\ninterface MembersClientProps {\n  initialData: {\n    topByCoins: LeaderboardUser[];\n    topByContributions: LeaderboardUser[];\n    topByUploads: LeaderboardUser[];\n  };\n}\n\nexport default function MembersClient({ initialData }: MembersClientProps) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const { data: topByCoins, isLoading: coinsLoading } = useQuery<LeaderboardUser[]>({\n    queryKey: ['/api/leaderboard', 'coins'],\n    queryFn: async () => {\n      const res = await fetch('/api/leaderboard?type=coins&limit=50', {\n        credentials: 'include',\n      });\n      if (!res.ok) throw new Error('Failed to fetch');\n      return res.json();\n    },\n    initialData: initialData.topByCoins,\n    refetchInterval: 30000,\n  });\n\n  const { data: topByContributions, isLoading: contributionsLoading } = useQuery<LeaderboardUser[]>({\n    queryKey: ['/api/leaderboard', 'contributions'],\n    queryFn: async () => {\n      const res = await fetch('/api/leaderboard?type=contributions&limit=50', {\n        credentials: 'include',\n      });\n      if (!res.ok) throw new Error('Failed to fetch');\n      return res.json();\n    },\n    initialData: initialData.topByContributions,\n    refetchInterval: 30000,\n  });\n\n  const { data: topByUploads, isLoading: uploadsLoading } = useQuery<LeaderboardUser[]>({\n    queryKey: ['/api/leaderboard', 'uploads'],\n    queryFn: async () => {\n      const res = await fetch('/api/leaderboard?type=uploads&limit=50', {\n        credentials: 'include',\n      });\n      if (!res.ok) throw new Error('Failed to fetch');\n      return res.json();\n    },\n    initialData: initialData.topByUploads,\n    refetchInterval: 30000,\n  });\n\n  // Filter users by search term\n  const filterUsers = (users: LeaderboardUser[]) => {\n    if (!searchTerm) return users;\n    return users.filter(user => \n      user.username.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n  };\n\n  const getRankBadge = (rank: number) => {\n    if (rank === 1) return { icon: Crown, color: \"bg-yellow-500/15 text-yellow-700 dark:text-yellow-400 border-yellow-500/30\" };\n    if (rank === 2) return { icon: Medal, color: \"bg-gray-400/15 text-gray-700 dark:text-gray-400 border-gray-400/30\" };\n    if (rank === 3) return { icon: Medal, color: \"bg-amber-600/15 text-amber-700 dark:text-amber-400 border-amber-600/30\" };\n    return { icon: Trophy, color: \"bg-primary/10 text-primary border-primary/20\" };\n  };\n\n  const renderCompactMemberCard = (user: LeaderboardUser, index: number, type: 'coins' | 'contributions' | 'uploads') => {\n    const { icon: RankIcon, color } = getRankBadge(index + 1);\n    \n    const getStatValue = () => {\n      if (type === 'coins') return user.totalCoins.toLocaleString();\n      if (type === 'contributions') return user.contributionCount?.toLocaleString() || '0';\n      if (type === 'uploads') return user.uploadCount?.toLocaleString() || '0';\n      return '0';\n    };\n\n    const getStatIcon = () => {\n      if (type === 'coins') return Coins;\n      if (type === 'contributions') return MessageSquare;\n      if (type === 'uploads') return Upload;\n      return Activity;\n    };\n\n    const StatIcon = getStatIcon();\n\n    // Calculate \"join time ago\" - use suppressHydrationWarning where it's displayed\n    const joinedAgo = user.createdAt ? formatDistanceToNow(new Date(user.createdAt), { addSuffix: true }) : 'Unknown';\n\n    return (\n      <Link key={user.id} href={`/user/${user.username}`} data-testid={`link-user-${user.id}`}>\n        <Card className=\"group hover:border-primary/30 hover-elevate active-elevate-2 cursor-pointer transition-all duration-200 h-full\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-start gap-3\">\n              {/* Rank Badge */}\n              <div className=\"flex-shrink-0 relative\">\n                <Badge \n                  variant=\"outline\" \n                  className={`absolute -top-2 -left-2 w-6 h-6 rounded-full flex items-center justify-center p-0 z-10 ${color}`}\n                >\n                  {index < 3 ? <RankIcon className=\"w-3 h-3\" /> : <span className=\"text-[10px] font-bold\">{index + 1}</span>}\n                </Badge>\n                <Avatar className=\"w-12 h-12 border-2 border-border group-hover:border-primary/30 transition-colors\">\n                  <AvatarFallback className=\"bg-primary/10 text-primary font-semibold text-sm\">\n                    {user.username.substring(0, 2).toUpperCase()}\n                  </AvatarFallback>\n                </Avatar>\n              </div>\n              \n              {/* User Info */}\n              <div className=\"flex-1 min-w-0 space-y-1.5\">\n                <h3 \n                  className=\"font-semibold text-sm line-clamp-1 group-hover:text-primary transition-colors\" \n                  data-testid={`text-username-${user.id}`}\n                >\n                  {user.username}\n                </h3>\n                \n                {/* Rank & Level */}\n                <div className=\"flex items-center gap-2 flex-wrap text-xs text-muted-foreground\">\n                  <Badge variant=\"outline\" className=\"text-[10px] px-1.5 py-0 bg-muted/50\">\n                    #{index + 1}\n                  </Badge>\n                  <span className=\"truncate\">\n                    Silver {user.rank || 22}\n                  </span>\n                </div>\n\n                {/* Stats Row */}\n                <div className=\"flex items-center gap-3 text-xs\">\n                  <div className=\"flex items-center gap-1\">\n                    <StatIcon className=\"w-3 h-3 text-primary\" />\n                    <span className=\"font-semibold\" data-testid={`stat-value-${user.id}`}>\n                      {getStatValue()}\n                    </span>\n                  </div>\n                  <span className=\"text-border\">â€¢</span>\n                  <div className=\"flex items-center gap-1 text-muted-foreground truncate\">\n                    <Calendar className=\"w-3 h-3\" />\n                    <span suppressHydrationWarning className=\"text-[11px] truncate\">{joinedAgo}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </Link>\n    );\n  };\n\n  const totalMembers = (topByCoins?.length || 0) + (topByContributions?.length || 0) + (topByUploads?.length || 0);\n  const uniqueMembers = new Set([\n    ...(topByCoins || []).map(u => u.id),\n    ...(topByContributions || []).map(u => u.id),\n    ...(topByUploads || []).map(u => u.id)\n  ]).size;\n\n  return (\n    <div className=\"min-h-screen bg-background\">\n      <Header />\n      \n      {/* Page Header with Stats */}\n      <div className=\"border-b bg-gradient-to-br from-primary/5 to-background\">\n        <div className=\"container max-w-7xl mx-auto px-4 py-8\">\n          <div className=\"flex items-start justify-between gap-4 mb-6\">\n            <div>\n              <h1 className=\"text-3xl font-bold mb-2 flex items-center gap-3\" data-testid=\"heading-members\">\n                <Users className=\"w-8 h-8 text-primary\" />\n                Community Members\n              </h1>\n              <p className=\"text-muted-foreground\">\n                Top contributors, traders, and developers in the YoForex community\n              </p>\n            </div>\n          </div>\n\n          {/* Top Stats Row */}\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4\">\n            <Card className=\"bg-card/50 backdrop-blur-sm\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 rounded-lg bg-primary/10\">\n                    <Users className=\"w-5 h-5 text-primary\" />\n                  </div>\n                  <div>\n                    <p className=\"text-2xl font-bold\">{uniqueMembers}</p>\n                    <p className=\"text-xs text-muted-foreground\">Total Members</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-card/50 backdrop-blur-sm\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 rounded-lg bg-yellow-500/10\">\n                    <Coins className=\"w-5 h-5 text-yellow-600 dark:text-yellow-400\" />\n                  </div>\n                  <div>\n                    <p className=\"text-2xl font-bold\" data-testid=\"stat-top-earner-coins\">\n                      {topByCoins?.[0]?.totalCoins.toLocaleString() || 0}\n                    </p>\n                    <p className=\"text-xs text-muted-foreground\">Top Coins</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-card/50 backdrop-blur-sm\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 rounded-lg bg-blue-500/10\">\n                    <MessageSquare className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\n                  </div>\n                  <div>\n                    <p className=\"text-2xl font-bold\" data-testid=\"stat-most-active-count\">\n                      {topByContributions?.[0]?.contributionCount?.toLocaleString() || 0}\n                    </p>\n                    <p className=\"text-xs text-muted-foreground\">Top Posts</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n\n            <Card className=\"bg-card/50 backdrop-blur-sm\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center gap-3\">\n                  <div className=\"p-2 rounded-lg bg-green-500/10\">\n                    <Upload className=\"w-5 h-5 text-green-600 dark:text-green-400\" />\n                  </div>\n                  <div>\n                    <p className=\"text-2xl font-bold\" data-testid=\"stat-top-publisher-count\">\n                      {topByUploads?.[0]?.uploadCount?.toLocaleString() || 0}\n                    </p>\n                    <p className=\"text-xs text-muted-foreground\">Top Uploads</p>\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </div>\n        </div>\n      </div>\n\n      <main className=\"container max-w-7xl mx-auto px-4 py-8\">\n        {/* Search and Filter Bar */}\n        <Card className=\"mb-6\">\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center gap-4 flex-wrap\">\n              <div className=\"flex-1 min-w-[200px]\">\n                <div className=\"relative\">\n                  <Search className=\"absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-muted-foreground\" />\n                  <Input\n                    placeholder=\"Search members...\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                    className=\"pl-10\"\n                    data-testid=\"input-search-members\"\n                  />\n                </div>\n              </div>\n              <Badge variant=\"outline\" className=\"gap-2 px-3 py-2\">\n                <Filter className=\"w-3 h-3\" />\n                Leaderboard View\n              </Badge>\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Leaderboard Tabs */}\n        <Tabs defaultValue=\"coins\" className=\"space-y-6\">\n          <TabsList className=\"grid w-full md:w-auto md:inline-grid grid-cols-3 gap-2\">\n            <TabsTrigger value=\"coins\" className=\"gap-2\" data-testid=\"tab-coins\">\n              <Coins className=\"w-4 h-4\" />\n              <span className=\"hidden sm:inline\">Top by Coins</span>\n              <span className=\"sm:hidden\">Coins</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"contributions\" className=\"gap-2\" data-testid=\"tab-contributions\">\n              <TrendingUp className=\"w-4 h-4\" />\n              <span className=\"hidden sm:inline\">Most Active</span>\n              <span className=\"sm:hidden\">Active</span>\n            </TabsTrigger>\n            <TabsTrigger value=\"uploads\" className=\"gap-2\" data-testid=\"tab-uploads\">\n              <Upload className=\"w-4 h-4\" />\n              <span className=\"hidden sm:inline\">Top Publishers</span>\n              <span className=\"sm:hidden\">Publishers</span>\n            </TabsTrigger>\n          </TabsList>\n\n          {/* Coins Leaderboard */}\n          <TabsContent value=\"coins\" data-testid=\"content-coins-leaderboard\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n              {coinsLoading ? (\n                Array(12).fill(0).map((_, i) => <Skeleton key={i} className=\"h-32\" />)\n              ) : filterUsers(topByCoins || []).length > 0 ? (\n                filterUsers(topByCoins || []).map((user, index) => \n                  renderCompactMemberCard(user, index, 'coins')\n                )\n              ) : (\n                <div className=\"col-span-full\">\n                  <Card className=\"p-12 text-center\">\n                    <Award className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                    <h3 className=\"text-lg font-semibold mb-2\">No members found</h3>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {searchTerm ? 'Try adjusting your search' : 'Start earning coins to appear here!'}\n                    </p>\n                  </Card>\n                </div>\n              )}\n            </div>\n            {filterUsers(topByCoins || []).length > 0 && (\n              <Card className=\"mt-6 bg-muted/30\">\n                <CardContent className=\"p-4 text-center text-sm text-muted-foreground\">\n                  Showing {filterUsers(topByCoins || []).length} member{filterUsers(topByCoins || []).length !== 1 ? 's' : ''}\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n\n          {/* Contributions Leaderboard */}\n          <TabsContent value=\"contributions\" data-testid=\"content-contributions-leaderboard\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n              {contributionsLoading ? (\n                Array(12).fill(0).map((_, i) => <Skeleton key={i} className=\"h-32\" />)\n              ) : filterUsers(topByContributions || []).length > 0 ? (\n                filterUsers(topByContributions || []).map((user, index) => \n                  renderCompactMemberCard(user, index, 'contributions')\n                )\n              ) : (\n                <div className=\"col-span-full\">\n                  <Card className=\"p-12 text-center\">\n                    <TrendingUp className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                    <h3 className=\"text-lg font-semibold mb-2\">No activity yet</h3>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {searchTerm ? 'Try adjusting your search' : 'Start contributing to appear here!'}\n                    </p>\n                  </Card>\n                </div>\n              )}\n            </div>\n            {filterUsers(topByContributions || []).length > 0 && (\n              <Card className=\"mt-6 bg-muted/30\">\n                <CardContent className=\"p-4 text-center text-sm text-muted-foreground\">\n                  Showing {filterUsers(topByContributions || []).length} member{filterUsers(topByContributions || []).length !== 1 ? 's' : ''}\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n\n          {/* Uploads Leaderboard */}\n          <TabsContent value=\"uploads\" data-testid=\"content-uploads-leaderboard\">\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4\">\n              {uploadsLoading ? (\n                Array(12).fill(0).map((_, i) => <Skeleton key={i} className=\"h-32\" />)\n              ) : filterUsers(topByUploads || []).length > 0 ? (\n                filterUsers(topByUploads || []).map((user, index) => \n                  renderCompactMemberCard(user, index, 'uploads')\n                )\n              ) : (\n                <div className=\"col-span-full\">\n                  <Card className=\"p-12 text-center\">\n                    <Upload className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                    <h3 className=\"text-lg font-semibold mb-2\">No uploads yet</h3>\n                    <p className=\"text-sm text-muted-foreground\">\n                      {searchTerm ? 'Try adjusting your search' : 'Publish your first EA to appear here!'}\n                    </p>\n                  </Card>\n                </div>\n              )}\n            </div>\n            {filterUsers(topByUploads || []).length > 0 && (\n              <Card className=\"mt-6 bg-muted/30\">\n                <CardContent className=\"p-4 text-center text-sm text-muted-foreground\">\n                  Showing {filterUsers(topByUploads || []).length} member{filterUsers(topByUploads || []).length !== 1 ? 's' : ''}\n                </CardContent>\n              </Card>\n            )}\n          </TabsContent>\n        </Tabs>\n\n        {/* Call to Action */}\n        <Card className=\"mt-12 bg-gradient-to-br from-primary/5 to-primary/10 border-primary/20\">\n          <CardContent className=\"p-8\">\n            <div className=\"text-center max-w-2xl mx-auto\">\n              <div className=\"flex items-center justify-center gap-4 mb-4\">\n                <Trophy className=\"w-10 h-10 text-primary\" />\n                <Flame className=\"w-10 h-10 text-orange-500\" />\n                <Zap className=\"w-10 h-10 text-yellow-500\" />\n              </div>\n              <h3 className=\"text-2xl font-bold mb-2\">Climb the Leaderboard</h3>\n              <p className=\"text-muted-foreground mb-6\">\n                Earn coins, contribute to discussions, and publish quality content to rise through the ranks\n              </p>\n              <div className=\"flex gap-4 justify-center flex-wrap\">\n                <Link href=\"/publish\">\n                  <Button size=\"lg\" data-testid=\"button-publish-content\">\n                    <Upload className=\"w-4 h-4 mr-2\" />\n                    Publish Content\n                  </Button>\n                </Link>\n                <Link href=\"/earn-coins\">\n                  <Button variant=\"outline\" size=\"lg\" data-testid=\"button-earn-coins\">\n                    <Coins className=\"w-4 h-4 mr-2\" />\n                    Ways to Earn\n                  </Button>\n                </Link>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      </main>\n\n      {/* Footer with Community Stats */}\n      <div className=\"border-t bg-muted/30 mt-12\">\n        <div className=\"container max-w-7xl mx-auto px-4 py-8\">\n          <div className=\"grid grid-cols-2 md:grid-cols-4 gap-6 text-center\">\n            <div>\n              <p className=\"text-3xl font-bold text-primary\">{uniqueMembers}</p>\n              <p className=\"text-sm text-muted-foreground mt-1\">Total Members</p>\n            </div>\n            <div>\n              <p className=\"text-3xl font-bold text-yellow-600 dark:text-yellow-400\">\n                {(topByCoins || []).reduce((sum, u) => sum + (u.totalCoins || 0), 0).toLocaleString()}\n              </p>\n              <p className=\"text-sm text-muted-foreground mt-1\">Total Coins Earned</p>\n            </div>\n            <div>\n              <p className=\"text-3xl font-bold text-blue-600 dark:text-blue-400\">\n                {(topByContributions || []).reduce((sum, u) => sum + (u.contributionCount || 0), 0).toLocaleString()}\n              </p>\n              <p className=\"text-sm text-muted-foreground mt-1\">Total Contributions</p>\n            </div>\n            <div>\n              <p className=\"text-3xl font-bold text-green-600 dark:text-green-400\">\n                {(topByUploads || []).reduce((sum, u) => sum + (u.uploadCount || 0), 0).toLocaleString()}\n              </p>\n              <p className=\"text-sm text-muted-foreground mt-1\">Total Uploads</p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <EnhancedFooter />\n    </div>\n  );\n}\n"],"names":[],"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"}