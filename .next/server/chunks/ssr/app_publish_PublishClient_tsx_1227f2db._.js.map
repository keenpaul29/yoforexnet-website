{"version":3,"sources":["turbopack:///[project]/app/publish/PublishClient.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { z } from \"zod\";\nimport { useQuery, useMutation } from \"@tanstack/react-query\";\nimport { queryClient, apiRequest } from \"@/lib/queryClient\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport Header from \"@/components/Header\";\nimport EnhancedFooter from \"@/components/EnhancedFooter\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Label } from \"@/components/ui/label\";\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Upload, X, FileText, Image as ImageIcon, TrendingUp } from \"lucide-react\";\nimport type { ForumCategory } from \"@shared/schema\";\n\n// Client-side validation schema matching backend\nconst publishFormSchema = z.object({\n  type: z.enum([\"ea\", \"indicator\", \"article\", \"source_code\"]),\n  title: z.string().min(10, \"Title must be at least 10 characters\").max(120, \"Title must not exceed 120 characters\"),\n  description: z.string().min(300, \"Description must be at least 300 characters\"),\n  platform: z.enum([\"MT4\", \"MT5\", \"Both\"]).optional(),\n  version: z.string().optional(),\n  priceCoins: z.coerce.number().min(0).max(10000),\n  isFree: z.boolean(),\n  category: z.string().min(1, \"Category is required\"),\n  tags: z.array(z.string()).max(8, \"Maximum 8 tags allowed\").optional(),\n  files: z.array(z.object({\n    name: z.string(),\n    size: z.number(),\n    url: z.string(),\n    checksum: z.string(),\n  })).min(1, \"At least 1 file is required\"),\n  images: z.array(z.object({\n    url: z.string(),\n    isCover: z.boolean(),\n    order: z.number(),\n  })).min(1, \"At least 1 image is required\"),\n  brokerCompat: z.array(z.string()).optional(),\n  minDeposit: z.coerce.number().optional(),\n  hedging: z.boolean().optional(),\n  changelog: z.string().optional(),\n  license: z.string().optional(),\n  // Evidence fields\n  equityCurveImage: z.string().optional(),\n  profitFactor: z.coerce.number().optional(),\n  drawdownPercent: z.coerce.number().optional(),\n  winPercent: z.coerce.number().optional(),\n  broker: z.string().optional(),\n  monthsTested: z.coerce.number().optional(),\n}).superRefine((data, ctx) => {\n  // Conditional validation for Performance Report\n  const hasPerformanceReportTag = data.tags?.includes(\"Performance Report\");\n  \n  if (hasPerformanceReportTag) {\n    if (!data.equityCurveImage) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Equity curve image is required for Performance Reports\",\n        path: [\"equityCurveImage\"],\n      });\n    }\n    if (!data.profitFactor) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Profit Factor is required for Performance Reports\",\n        path: [\"profitFactor\"],\n      });\n    }\n    if (!data.drawdownPercent) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Drawdown % is required for Performance Reports\",\n        path: [\"drawdownPercent\"],\n      });\n    }\n    if (!data.winPercent) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Win % is required for Performance Reports\",\n        path: [\"winPercent\"],\n      });\n    }\n    if (!data.broker) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Broker name is required for Performance Reports\",\n        path: [\"broker\"],\n      });\n    }\n    if (!data.monthsTested) {\n      ctx.addIssue({\n        code: z.ZodIssueCode.custom,\n        message: \"Months Tested is required for Performance Reports\",\n        path: [\"monthsTested\"],\n      });\n    }\n  }\n});\n\ntype PublishFormData = z.infer<typeof publishFormSchema>;\n\ninterface PublishClientProps {\n  initialCategories: ForumCategory[];\n  categoryParam?: string;\n}\n\nexport default function PublishClient({ initialCategories, categoryParam }: PublishClientProps) {\n  const router = useRouter();\n  const { toast } = useToast();\n  const [tagInput, setTagInput] = useState(\"\");\n  const [currentTags, setCurrentTags] = useState<string[]>([]);\n\n  // Fetch categories with initialData\n  const { data: categories = [] } = useQuery<ForumCategory[]>({\n    queryKey: [\"/api/publish/categories\"],\n    initialData: initialCategories,\n  });\n\n  // Form setup\n  const form = useForm<PublishFormData>({\n    resolver: zodResolver(publishFormSchema),\n    defaultValues: {\n      type: \"ea\",\n      title: \"\",\n      description: \"\",\n      platform: \"MT4\",\n      version: \"1.0.0\",\n      priceCoins: 0,\n      isFree: true,\n      category: categoryParam || \"\",\n      tags: [],\n      files: [],\n      images: [],\n      brokerCompat: [],\n      hedging: false,\n    },\n  });\n\n  // Pre-fill category from URL\n  useEffect(() => {\n    if (categoryParam && categories.length > 0) {\n      form.setValue(\"category\", categoryParam);\n    }\n  }, [categoryParam, categories, form]);\n\n  // Watch tags for evidence mode\n  const watchedTags = form.watch(\"tags\");\n  const showEvidenceFields = watchedTags?.includes(\"Performance Report\");\n\n  // Watch isFree to control price field\n  const isFree = form.watch(\"isFree\");\n  useEffect(() => {\n    if (isFree) {\n      form.setValue(\"priceCoins\", 0);\n    }\n  }, [isFree, form]);\n\n  // File upload mutation\n  const fileUploadMutation = useMutation({\n    mutationFn: async (file: { name: string; size: number }) => {\n      const res = await apiRequest(\"POST\", \"/api/uploads/file\", file);\n      return res.json() as Promise<{ name: string; size: number; url: string; checksum: string }>;\n    },\n  });\n\n  // Image upload mutation\n  const imageUploadMutation = useMutation({\n    mutationFn: async (image: { name: string; isCover: boolean; order: number }) => {\n      const res = await apiRequest(\"POST\", \"/api/uploads/image\", image);\n      return res.json() as Promise<{ url: string; isCover: boolean; order: number }>;\n    },\n  });\n\n  // Publish mutation\n  const publishMutation = useMutation({\n    mutationFn: async (data: PublishFormData) => {\n      const res = await apiRequest(\"POST\", \"/api/publish\", data);\n      return res.json();\n    },\n    onSuccess: (data) => {\n      toast({\n        title: \"Success!\",\n        description: \"Your content has been published successfully.\",\n      });\n      queryClient.invalidateQueries({ queryKey: [\"/api/content\"] });\n      router.push(\"/marketplace\");\n    },\n    onError: (error: any) => {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to publish content\",\n        variant: \"destructive\",\n      });\n    },\n  });\n\n  // Handle file selection\n  const handleFileSelect = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || []);\n    const currentFiles = form.getValues(\"files\") || [];\n    \n    if (currentFiles.length + files.length > 5) {\n      toast({\n        title: \"Too many files\",\n        description: \"Maximum 5 files allowed\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    for (const file of files) {\n      const uploadedFile = await fileUploadMutation.mutateAsync({\n        name: file.name,\n        size: file.size,\n      });\n      \n      form.setValue(\"files\", [...(form.getValues(\"files\") || []), uploadedFile]);\n    }\n  };\n\n  // Handle image selection\n  const handleImageSelect = async (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = Array.from(e.target.files || []);\n    const currentImages = form.getValues(\"images\") || [];\n    \n    if (currentImages.length + files.length > 5) {\n      toast({\n        title: \"Too many images\",\n        description: \"Maximum 5 images allowed\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    for (let i = 0; i < files.length; i++) {\n      const file = files[i];\n      const uploadedImage = await imageUploadMutation.mutateAsync({\n        name: file.name,\n        isCover: currentImages.length === 0 && i === 0,\n        order: currentImages.length + i,\n      });\n      \n      form.setValue(\"images\", [...(form.getValues(\"images\") || []), uploadedImage]);\n    }\n  };\n\n  // Remove file\n  const removeFile = (index: number) => {\n    const files = form.getValues(\"files\") || [];\n    form.setValue(\"files\", files.filter((_, i) => i !== index));\n  };\n\n  // Remove image\n  const removeImage = (index: number) => {\n    const images = form.getValues(\"images\") || [];\n    form.setValue(\"images\", images.filter((_, i) => i !== index));\n  };\n\n  // Add tag\n  const addTag = () => {\n    if (!tagInput.trim()) return;\n    \n    const tags = form.getValues(\"tags\") || [];\n    if (tags.length >= 8) {\n      toast({\n        title: \"Maximum tags reached\",\n        description: \"You can add up to 8 tags\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    if (!tags.includes(tagInput.trim())) {\n      const newTags = [...tags, tagInput.trim()];\n      form.setValue(\"tags\", newTags);\n      setCurrentTags(newTags);\n    }\n    setTagInput(\"\");\n  };\n\n  // Remove tag\n  const removeTag = (tag: string) => {\n    const tags = form.getValues(\"tags\") || [];\n    const newTags = tags.filter(t => t !== tag);\n    form.setValue(\"tags\", newTags);\n    setCurrentTags(newTags);\n  };\n\n  // Character counters\n  const titleLength = form.watch(\"title\")?.length || 0;\n  const descriptionLength = form.watch(\"description\")?.length || 0;\n\n  // Submit handler\n  const onSubmit = (data: PublishFormData) => {\n    publishMutation.mutate(data);\n  };\n\n  return (\n    <div className=\"min-h-screen flex flex-col bg-background\">\n      <Header />\n      \n      <main className=\"flex-1 container max-w-4xl mx-auto py-8 px-4\">\n        <div className=\"mb-8\">\n          <h1 className=\"text-3xl font-bold mb-2\">Publish Your EA / Indicator</h1>\n          <p className=\"text-muted-foreground\">\n            Share your Expert Advisor, indicator, or trading article with the community\n          </p>\n        </div>\n\n        <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n          {/* Basic Information */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Basic Information</CardTitle>\n              <CardDescription>Essential details about your content</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              {/* Content Type */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"select-type\">Content Type</Label>\n                <Select\n                  value={form.watch(\"type\")}\n                  onValueChange={(value) => form.setValue(\"type\", value as any)}\n                >\n                  <SelectTrigger data-testid=\"select-type\">\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    <SelectItem value=\"ea\">Expert Advisor (EA)</SelectItem>\n                    <SelectItem value=\"indicator\">Indicator</SelectItem>\n                    <SelectItem value=\"article\">Article</SelectItem>\n                    <SelectItem value=\"source_code\">Source Code</SelectItem>\n                  </SelectContent>\n                </Select>\n              </div>\n\n              {/* Title */}\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <Label htmlFor=\"input-title\">\n                    Title <span className=\"text-destructive\">*</span>\n                  </Label>\n                  <span className=\"text-sm text-muted-foreground\" data-testid=\"text-title-counter\">\n                    {titleLength} / 120\n                  </span>\n                </div>\n                <Input\n                  id=\"input-title\"\n                  data-testid=\"input-title\"\n                  {...form.register(\"title\")}\n                  placeholder=\"e.g., Gold Scalper Pro - High Win Rate EA\"\n                  maxLength={120}\n                />\n                {form.formState.errors.title && (\n                  <p className=\"text-sm text-destructive\">{form.formState.errors.title.message}</p>\n                )}\n              </div>\n\n              {/* Platform */}\n              <div className=\"space-y-2\">\n                <Label>\n                  Platform <span className=\"text-destructive\">*</span>\n                </Label>\n                <RadioGroup\n                  value={form.watch(\"platform\")}\n                  onValueChange={(value) => form.setValue(\"platform\", value as any)}\n                  data-testid=\"radio-platform\"\n                >\n                  <div className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value=\"MT4\" id=\"platform-mt4\" data-testid=\"radio-platform-mt4\" />\n                    <Label htmlFor=\"platform-mt4\" className=\"font-normal cursor-pointer\">MetaTrader 4</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value=\"MT5\" id=\"platform-mt5\" data-testid=\"radio-platform-mt5\" />\n                    <Label htmlFor=\"platform-mt5\" className=\"font-normal cursor-pointer\">MetaTrader 5</Label>\n                  </div>\n                  <div className=\"flex items-center space-x-2\">\n                    <RadioGroupItem value=\"Both\" id=\"platform-both\" data-testid=\"radio-platform-both\" />\n                    <Label htmlFor=\"platform-both\" className=\"font-normal cursor-pointer\">Both MT4 & MT5</Label>\n                  </div>\n                </RadioGroup>\n              </div>\n\n              {/* Version */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"input-version\">Version</Label>\n                <Input\n                  id=\"input-version\"\n                  data-testid=\"input-version\"\n                  {...form.register(\"version\")}\n                  placeholder=\"e.g., 1.0.0\"\n                />\n                <p className=\"text-xs text-muted-foreground\">Semantic versioning recommended (e.g., 1.0.0)</p>\n              </div>\n\n              {/* Category */}\n              <div className=\"space-y-2\">\n                <Label htmlFor=\"select-category\">\n                  Category <span className=\"text-destructive\">*</span>\n                </Label>\n                <Select\n                  value={form.watch(\"category\")}\n                  onValueChange={(value) => form.setValue(\"category\", value)}\n                >\n                  <SelectTrigger data-testid=\"select-category\">\n                    <SelectValue placeholder=\"Select a category\" />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {categories.map((cat: any) => (\n                      <SelectItem key={cat.slug} value={cat.slug}>\n                        {cat.name}\n                      </SelectItem>\n                    ))}\n                  </SelectContent>\n                </Select>\n                {form.formState.errors.category && (\n                  <p className=\"text-sm text-destructive\">{form.formState.errors.category.message}</p>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Pricing */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Pricing</CardTitle>\n              <CardDescription>Set your content pricing</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex items-center space-x-2\">\n                <Switch\n                  id=\"switch-free\"\n                  data-testid=\"switch-free\"\n                  checked={isFree}\n                  onCheckedChange={(checked) => form.setValue(\"isFree\", checked)}\n                />\n                <Label htmlFor=\"switch-free\" className=\"cursor-pointer\">Free Content</Label>\n              </div>\n\n              {!isFree && (\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"input-price\">\n                    Price (Coins) <span className=\"text-destructive\">*</span>\n                  </Label>\n                  <Input\n                    id=\"input-price\"\n                    data-testid=\"input-price\"\n                    type=\"number\"\n                    min=\"0\"\n                    max=\"10000\"\n                    {...form.register(\"priceCoins\", { valueAsNumber: true })}\n                    placeholder=\"e.g., 500\"\n                  />\n                  <p className=\"text-xs text-muted-foreground\">Maximum 10,000 coins</p>\n                  {form.formState.errors.priceCoins && (\n                    <p className=\"text-sm text-destructive\">{form.formState.errors.priceCoins.message}</p>\n                  )}\n                </div>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Description */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Description</CardTitle>\n              <CardDescription>Detailed information about your content</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"space-y-2\">\n                <div className=\"flex justify-between\">\n                  <Label htmlFor=\"textarea-description\">\n                    Description <span className=\"text-destructive\">*</span>\n                  </Label>\n                  <span className=\"text-sm text-muted-foreground\" data-testid=\"text-description-counter\">\n                    {descriptionLength} / 300 minimum\n                  </span>\n                </div>\n                <Textarea\n                  id=\"textarea-description\"\n                  data-testid=\"textarea-description\"\n                  {...form.register(\"description\")}\n                  rows={10}\n                  placeholder=\"Describe your EA/indicator in detail. Include features, strategy, recommended settings, etc.\"\n                  className=\"font-mono text-sm\"\n                />\n                <p className=\"text-xs text-muted-foreground\">Markdown supported. Minimum 300 characters.</p>\n                {form.formState.errors.description && (\n                  <p className=\"text-sm text-destructive\">{form.formState.errors.description.message}</p>\n                )}\n              </div>\n            </CardContent>\n          </Card>\n\n          {/* Tags */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Tags</CardTitle>\n              <CardDescription>Add up to 8 tags to help users find your content</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"flex gap-2\">\n                <Input\n                  data-testid=\"input-tag\"\n                  value={tagInput}\n                  onChange={(e) => setTagInput(e.target.value)}\n                  onKeyPress={(e) => e.key === \"Enter\" && (e.preventDefault(), addTag())}\n                  placeholder=\"Type a tag and press Enter\"\n                />\n                <Button type=\"button\" onClick={addTag} data-testid=\"button-add-tag\">Add</Button>\n              </div>\n              \n              <div className=\"flex flex-wrap gap-2\">\n                {currentTags.map((tag) => (\n                  <Badge key={tag} variant=\"secondary\" data-testid={`badge-tag-${tag}`}>\n                    {tag}\n                    <button\n                      type=\"button\"\n                      onClick={() => removeTag(tag)}\n                      className=\"ml-2\"\n                      data-testid={`button-remove-tag-${tag}`}\n                    >\n                      <X className=\"w-3 h-3\" />\n                    </button>\n                  </Badge>\n                ))}\n              </div>\n              \n              <p className=\"text-xs text-muted-foreground\">\n                Suggested: Performance Report, Scalping, Grid, Hedging, News Trading, etc.\n              </p>\n              {form.formState.errors.tags && (\n                <p className=\"text-sm text-destructive\">{form.formState.errors.tags.message}</p>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* File Uploads */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Files</CardTitle>\n              <CardDescription>Upload your EA/indicator files (max 5 files)</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"border-2 border-dashed rounded-lg p-8 text-center\">\n                <FileText className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                <p className=\"text-sm text-muted-foreground mb-4\">\n                  Drag and drop files here, or click to browse\n                </p>\n                <input\n                  type=\"file\"\n                  multiple\n                  onChange={handleFileSelect}\n                  className=\"hidden\"\n                  id=\"file-upload\"\n                  data-testid=\"input-file-upload\"\n                  accept=\".ex4,.ex5,.mq4,.mq5,.zip,.rar\"\n                />\n                <label htmlFor=\"file-upload\">\n                  <Button type=\"button\" variant=\"outline\" asChild data-testid=\"button-file-upload\">\n                    <span className=\"cursor-pointer\">\n                      <Upload className=\"w-4 h-4 mr-2\" />\n                      Select Files\n                    </span>\n                  </Button>\n                </label>\n              </div>\n\n              {(form.watch(\"files\") || []).map((file, index) => (\n                <div key={index} className=\"flex items-center justify-between p-3 bg-muted rounded-lg\" data-testid={`file-item-${index}`}>\n                  <div className=\"flex items-center gap-3\">\n                    <FileText className=\"w-5 h-5 text-muted-foreground\" />\n                    <div>\n                      <p className=\"text-sm font-medium\">{file.name}</p>\n                      <p className=\"text-xs text-muted-foreground\">\n                        {(file.size / 1024).toFixed(2)} KB • Checksum: {file.checksum}\n                      </p>\n                    </div>\n                  </div>\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"icon\"\n                    onClick={() => removeFile(index)}\n                    data-testid={`button-remove-file-${index}`}\n                  >\n                    <X className=\"w-4 h-4\" />\n                  </Button>\n                </div>\n              ))}\n\n              {form.formState.errors.files && (\n                <p className=\"text-sm text-destructive\">{form.formState.errors.files.message}</p>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Image Uploads */}\n          <Card>\n            <CardHeader>\n              <CardTitle>Images</CardTitle>\n              <CardDescription>Upload screenshots and charts (max 5 images)</CardDescription>\n            </CardHeader>\n            <CardContent className=\"space-y-4\">\n              <div className=\"border-2 border-dashed rounded-lg p-8 text-center\">\n                <ImageIcon className=\"w-12 h-12 mx-auto mb-4 text-muted-foreground\" />\n                <p className=\"text-sm text-muted-foreground mb-4\">\n                  Drag and drop images here, or click to browse\n                </p>\n                <input\n                  type=\"file\"\n                  multiple\n                  accept=\"image/*\"\n                  onChange={handleImageSelect}\n                  className=\"hidden\"\n                  id=\"image-upload\"\n                  data-testid=\"input-image-upload\"\n                />\n                <label htmlFor=\"image-upload\">\n                  <Button type=\"button\" variant=\"outline\" asChild data-testid=\"button-image-upload\">\n                    <span className=\"cursor-pointer\">\n                      <Upload className=\"w-4 h-4 mr-2\" />\n                      Select Images\n                    </span>\n                  </Button>\n                </label>\n              </div>\n\n              <div className=\"grid grid-cols-2 gap-4\">\n                {(form.watch(\"images\") || []).map((image, index) => (\n                  <div key={index} className=\"relative group\" data-testid={`image-item-${index}`}>\n                    <div className=\"aspect-video bg-muted rounded-lg flex items-center justify-center\">\n                      <ImageIcon className=\"w-8 h-8 text-muted-foreground\" />\n                    </div>\n                    {image.isCover && (\n                      <Badge className=\"absolute top-2 left-2\">Cover</Badge>\n                    )}\n                    <Button\n                      type=\"button\"\n                      variant=\"destructive\"\n                      size=\"icon\"\n                      className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\"\n                      onClick={() => removeImage(index)}\n                      data-testid={`button-remove-image-${index}`}\n                    >\n                      <X className=\"w-4 h-4\" />\n                    </Button>\n                  </div>\n                ))}\n              </div>\n\n              {form.formState.errors.images && (\n                <p className=\"text-sm text-destructive\">{form.formState.errors.images.message}</p>\n              )}\n            </CardContent>\n          </Card>\n\n          {/* Evidence Fields (Conditional) */}\n          {showEvidenceFields && (\n            <Card className=\"border-primary\">\n              <CardHeader>\n                <div className=\"flex items-center gap-2\">\n                  <TrendingUp className=\"w-5 h-5 text-primary\" />\n                  <CardTitle>Performance Evidence</CardTitle>\n                </div>\n                <CardDescription>\n                  Required fields for Performance Report content\n                </CardDescription>\n              </CardHeader>\n              <CardContent className=\"space-y-4\">\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"input-equity-curve\">\n                    Equity Curve Image <span className=\"text-destructive\">*</span>\n                  </Label>\n                  <Input\n                    id=\"input-equity-curve\"\n                    data-testid=\"input-equity-curve\"\n                    {...form.register(\"equityCurveImage\")}\n                    placeholder=\"URL to equity curve screenshot\"\n                  />\n                  {form.formState.errors.equityCurveImage && (\n                    <p className=\"text-sm text-destructive\">{form.formState.errors.equityCurveImage.message}</p>\n                  )}\n                </div>\n\n                <div className=\"grid grid-cols-2 gap-4\">\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"input-profit-factor\">\n                      Profit Factor <span className=\"text-destructive\">*</span>\n                    </Label>\n                    <Input\n                      id=\"input-profit-factor\"\n                      data-testid=\"input-profit-factor\"\n                      type=\"number\"\n                      step=\"0.01\"\n                      {...form.register(\"profitFactor\", { valueAsNumber: true })}\n                      placeholder=\"e.g., 2.5\"\n                    />\n                    {form.formState.errors.profitFactor && (\n                      <p className=\"text-sm text-destructive\">{form.formState.errors.profitFactor.message}</p>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"input-drawdown\">\n                      Max Drawdown % <span className=\"text-destructive\">*</span>\n                    </Label>\n                    <Input\n                      id=\"input-drawdown\"\n                      data-testid=\"input-drawdown\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      {...form.register(\"drawdownPercent\", { valueAsNumber: true })}\n                      placeholder=\"e.g., 15.5\"\n                    />\n                    {form.formState.errors.drawdownPercent && (\n                      <p className=\"text-sm text-destructive\">{form.formState.errors.drawdownPercent.message}</p>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"input-win-percent\">\n                      Win Rate % <span className=\"text-destructive\">*</span>\n                    </Label>\n                    <Input\n                      id=\"input-win-percent\"\n                      data-testid=\"input-win-percent\"\n                      type=\"number\"\n                      step=\"0.1\"\n                      {...form.register(\"winPercent\", { valueAsNumber: true })}\n                      placeholder=\"e.g., 68.5\"\n                    />\n                    {form.formState.errors.winPercent && (\n                      <p className=\"text-sm text-destructive\">{form.formState.errors.winPercent.message}</p>\n                    )}\n                  </div>\n\n                  <div className=\"space-y-2\">\n                    <Label htmlFor=\"input-months-tested\">\n                      Months Tested <span className=\"text-destructive\">*</span>\n                    </Label>\n                    <Input\n                      id=\"input-months-tested\"\n                      data-testid=\"input-months-tested\"\n                      type=\"number\"\n                      {...form.register(\"monthsTested\", { valueAsNumber: true })}\n                      placeholder=\"e.g., 12\"\n                    />\n                    {form.formState.errors.monthsTested && (\n                      <p className=\"text-sm text-destructive\">{form.formState.errors.monthsTested.message}</p>\n                    )}\n                  </div>\n                </div>\n\n                <div className=\"space-y-2\">\n                  <Label htmlFor=\"input-broker-evidence\">\n                    Broker Name <span className=\"text-destructive\">*</span>\n                  </Label>\n                  <Input\n                    id=\"input-broker-evidence\"\n                    data-testid=\"input-broker-evidence\"\n                    {...form.register(\"broker\")}\n                    placeholder=\"e.g., IC Markets\"\n                  />\n                  {form.formState.errors.broker && (\n                    <p className=\"text-sm text-destructive\">{form.formState.errors.broker.message}</p>\n                  )}\n                </div>\n              </CardContent>\n            </Card>\n          )}\n\n          {/* Submit */}\n          <div className=\"flex gap-4\">\n            <Button\n              type=\"submit\"\n              size=\"lg\"\n              disabled={!form.formState.isValid || publishMutation.isPending}\n              data-testid=\"button-submit\"\n              className=\"flex-1\"\n            >\n              {publishMutation.isPending ? \"Publishing...\" : \"Publish Content\"}\n            </Button>\n            <Button\n              type=\"button\"\n              variant=\"outline\"\n              size=\"lg\"\n              onClick={() => router.push(\"/marketplace\")}\n              data-testid=\"button-cancel\"\n            >\n              Cancel\n            </Button>\n          </div>\n        </form>\n      </main>\n\n      <EnhancedFooter />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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"}