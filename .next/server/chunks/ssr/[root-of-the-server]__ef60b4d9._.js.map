{"version":3,"sources":["turbopack:///[project]/app/dashboard/settings/DashboardSettingsClient.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/app/dashboard/settings/page.tsx"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/dashboard/settings/DashboardSettingsClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/dashboard/settings/DashboardSettingsClient.tsx\",\n    \"default\",\n);\n","import { Metadata } from \"next\";\nimport { cookies } from \"next/headers\";\nimport { redirect } from \"next/navigation\";\nimport DashboardSettingsClient from \"./DashboardSettingsClient\";\n\nexport const metadata: Metadata = {\n  title: \"Dashboard Settings | YoForex\",\n  description: \"Customize your YoForex dashboard. Manage widgets, layout, and preferences.\",\n  keywords: \"dashboard settings, customize dashboard, widget settings, dashboard layout, dashboard widgets\",\n  openGraph: {\n    title: \"Dashboard Settings | YoForex\",\n    description: \"Customize your YoForex dashboard. Manage widgets, layout, and preferences.\",\n    type: \"website\",\n  },\n  twitter: {\n    card: \"summary\",\n    title: \"Dashboard Settings | YoForex\",\n    description: \"Customize your YoForex dashboard. Manage widgets, layout, and preferences.\",\n  },\n};\n\nasync function getDashboardPreferences() {\n  const cookieStore = await cookies();\n  const sessionCookie = cookieStore.get(\"connect.sid\");\n\n  if (!sessionCookie) {\n    redirect(\"/\");\n  }\n\n  try {\n    const baseUrl = process.env.NEXT_PUBLIC_API_URL || \"http://localhost:5000\";\n    const response = await fetch(`${baseUrl}/api/dashboard/preferences`, {\n      headers: {\n        Cookie: `connect.sid=${sessionCookie.value}`,\n      },\n      cache: \"no-store\",\n    });\n\n    if (response.status === 401) {\n      redirect(\"/\");\n    }\n\n    if (!response.ok) {\n      return null;\n    }\n\n    return response.json();\n  } catch (error) {\n    console.error(\"Error fetching dashboard preferences:\", error);\n    return null;\n  }\n}\n\nexport default async function DashboardSettingsPage() {\n  const preferences = await getDashboardPreferences();\n\n  return <DashboardSettingsClient initialData={preferences} />;\n}\n"],"names":[],"mappings":"2UAEe,CAAA,EAAA,AADf,EAAA,CAAA,CAAA,OACe,uBAAA,AAAuB,EAClC,WAAa,MAAM,AAAI,MAAM,oTAAsT,EACnV,mFACA,8DAHW,CAAA,EADf,AACe,EADf,CAAA,CAAA,OACe,uBAAuB,AAAvB,EACX,WAAa,MAAM,AAAI,MAAM,gSAAkS,EAC/T,+DACA,mICJJ,EAAA,EAAA,CAAA,CAAA,MACA,EAAA,CAAA,CAAA,OAAA,IAAA,EAAA,EAAA,CAAA,CAAA,OACA,EAAA,EAAA,CAAA,CAAA,OAkBA,eAAe,IAEb,IAAM,EAAgB,CADF,MAAM,CAAA,EAAA,EAAA,OAAO,AAAP,GAAO,EACC,GAAG,CAAC,cAElC,CAAC,GACH,CAAA,EAAA,EAAA,OADkB,CAClB,AAAQ,EAAC,KAGX,GAAI,CACF,IAAM,EAAU,QAAQ,GAAG,CAAC,mBAAmB,EAAI,wBAC7C,EAAW,MAAM,MAAM,CAAA,EAAG,EAAQ,0BAA0B,CAAC,CAAE,CACnE,QAAS,CACP,OAAQ,CAAC,YAAY,EAAE,EAAc,KAAK,CAAA,CAAE,AAC9C,EACA,MAAO,UACT,GAMA,GAJwB,KAAK,CAAzB,EAAS,MAAM,EACjB,CAAA,EAAA,EAAA,QAAA,AAAQ,EAAC,KAGP,CAAC,EAAS,EAAE,CACd,CADgB,MACT,KAGT,OAAO,EAAS,IAAI,EACtB,CAAE,MAAO,EAAO,CAEd,OADA,QAAQ,KAAK,CAAC,wCAAyC,GAChD,IACT,CACF,CAEe,eAAe,IAC5B,IAAM,EAAc,MAAM,IAE1B,MAAO,CAAA,EAAA,EAAA,GAAA,EAAC,EAAA,OAAuB,CAAA,CAAC,YAAa,GAC/C,mCApDkC,CAChC,MAAO,+BACP,YAAa,6EACb,SAAU,gGACV,UAAW,CACT,MAAO,+BACP,YAAa,6EACb,KAAM,SACR,EACA,QAAS,CACP,KAAM,UACN,MAAO,+BACP,YAAa,4EACf,CACF","ignoreList":[0]}