{"version":3,"sources":["turbopack:///[project]/app/category/[slug]/CategoryDiscussionClient.tsx/__nextjs-internal-proxy.mjs","turbopack:///[project]/app/category/[slug]/page.tsx"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/category/[slug]/CategoryDiscussionClient.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/category/[slug]/CategoryDiscussionClient.tsx\",\n    \"default\",\n);\n","import { Metadata } from 'next';\nimport { notFound } from 'next/navigation';\nimport CategoryDiscussionClient from './CategoryDiscussionClient';\nimport type { ForumCategory, ForumThread } from '@shared/schema';\n\n// Express API base URL - use internal API URL for SSR\nconst EXPRESS_URL = process.env.NODE_ENV === 'production' \n  ? process.env.NEXT_PUBLIC_EXPRESS_URL || 'http://localhost:5000'\n  : 'http://127.0.0.1:3001';\n\n// Enable ISR with 60-second revalidation\nexport const revalidate = 60;\nexport const dynamicParams = true;\n\n// Pre-generate static pages for all categories\nexport async function generateStaticParams() {\n  try {\n    const res = await fetch(`${EXPRESS_URL}/api/categories`, {\n      next: { revalidate: 60 },\n    });\n    \n    if (!res.ok) {\n      return [];\n    }\n    \n    const categories = await res.json();\n    return categories.map((cat: any) => ({\n      slug: cat.slug,\n    }));\n  } catch (error) {\n    console.error('Error fetching categories for static params:', error);\n    return [];\n  }\n}\n\n// Generate metadata for SEO\nexport async function generateMetadata({ params }: { params: Promise<{ slug: string }> }): Promise<Metadata> {\n  const { slug } = await params;\n  try {\n    const res = await fetch(`${EXPRESS_URL}/api/categories/${slug}`, { \n      next: { revalidate: 60 },\n    });\n    if (!res.ok) {\n      return {\n        title: 'Category Not Found | YoForex',\n      };\n    }\n\n    const category: ForumCategory = await res.json();\n    \n    return {\n      title: `${category.name} - Forum Discussions | YoForex`,\n      description: `Browse ${category.name} discussions, questions, and expert advice on YoForex`,\n      keywords: `${category.name}, forex, MT4, MT5, trading strategies`,\n      openGraph: {\n        title: `${category.name} - Forum Discussions | YoForex`,\n        description: `Browse ${category.name} discussions, questions, and expert advice on YoForex`,\n        type: 'website',\n      },\n      twitter: {\n        card: 'summary',\n        title: `${category.name} - Forum Discussions | YoForex`,\n        description: `Browse ${category.name} discussions, questions, and expert advice on YoForex`,\n      },\n    };\n  } catch (error) {\n    return {\n      title: 'Category Not Found | YoForex',\n    };\n  }\n}\n\n// Main page component (Server Component)\nexport default async function CategoryDiscussionPage({ params }: { params: Promise<{ slug: string }> }) {\n  const { slug } = await params;\n  \n  // Parallel data fetching with error handling\n  const [categoryRes, threadsRes] = await Promise.all([\n    fetch(`${EXPRESS_URL}/api/categories/${slug}`, { \n      next: { revalidate: 60 },\n    }).catch(() => null),\n    fetch(`${EXPRESS_URL}/api/categories/${slug}/threads`, { \n      next: { revalidate: 60 },\n    }).catch(() => null),\n  ]);\n\n  // Parse responses\n  let category: ForumCategory | null = null;\n  let threads: ForumThread[] = [];\n\n  if (categoryRes && categoryRes.ok) {\n    try {\n      category = await categoryRes.json();\n    } catch (error) {\n      console.error('Error parsing category:', error);\n    }\n  }\n\n  if (threadsRes && threadsRes.ok) {\n    try {\n      threads = await threadsRes.json();\n    } catch (error) {\n      console.error('Error parsing threads:', error);\n    }\n  }\n\n  // Return 404 if category doesn't exist\n  if (!category) {\n    notFound();\n  }\n\n  // Pass all data to Client Component\n  return (\n    <CategoryDiscussionClient\n      slug={slug}\n      initialCategory={category}\n      initialThreads={threads}\n    />\n  );\n}\n"],"names":[],"mappings":"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","ignoreList":[0]}